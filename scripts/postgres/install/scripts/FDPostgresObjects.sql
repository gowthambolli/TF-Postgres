--https://it.toolbox.com/blogs/jjflash/adf-history-attributes-and-postgresql-122916
CREATE TABLE fd_admin.dummy (dummy VARCHAR(1));
INSERT INTO fd_admin.dummy VALUES('X');
CREATE VIEW fd_admin.dual (dummy, sysdate) AS
  SELECT dummy, current_timestamp
    FROM fd_admin.dummy;

CREATE TABLE FD.ACCOUNT_PROVIDER
(
  ACCOUNT_PROVIDER_ID NUMERIC(20) NOT NULL 
, TYPE VARCHAR(120) NOT NULL 
, VENDOR_NAME VARCHAR(120) NOT NULL 
, NAME VARCHAR(200) NOT NULL 
, DESCRIPTION VARCHAR(400) 
, IS_READONLY CHAR(1) DEFAULT 'Y' NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP NOT NULL 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP NOT NULL 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8) NOT NULL 
, CONSTRAINT ACCOUNT_PROVIDER_PK PRIMARY KEY 
  (
    ACCOUNT_PROVIDER_ID
  )
  
);
 

CREATE TABLE FD.APPLICATION_STATS 
(
  FOLDER_ID NUMERIC(20, 0) NOT NULL 
, FOLDER_NAME VARCHAR(255) NOT NULL 
, PROJECT_CNT NUMERIC(20, 0) NOT NULL 
, BUILD_SUCCESS_CNT NUMERIC(20, 0) NOT NULL 
, BUILD_FAILED_CNT NUMERIC(20, 0) NOT NULL 
, BUILD_SUCCESS_PCT NUMERIC(8, 0) NOT NULL 
, DEPLOY_SUCCESS_CNT NUMERIC(20, 0) NOT NULL 
, DEPLOY_FAILED_CNT NUMERIC(20, 0) NOT NULL 
, DEPLOY_SUCCESS_PCT NUMERIC(8, 0) NOT NULL 
, CONSTRAINT APPLICATION_STATS_PK PRIMARY KEY 
  (
    FOLDER_ID 
  )
);

CREATE TABLE FD.CMS 
(
  CMS_ID NUMERIC(10, 0) NOT NULL 
, NAME VARCHAR(50) NOT NULL 
, IS_CUSTOM CHAR(1) NOT NULL 
, CMS_CONFIG_ID NUMERIC(10, 0) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) NOT NULL 
, CONSTRAINT PK_CMS PRIMARY KEY 
  (
    CMS_ID 
  )
  
);

CREATE TABLE FD.CMS_API 
(
  CMS_API_ID NUMERIC(10, 0) NOT NULL 
, CMS_ID NUMERIC(10, 0) NOT NULL 
, URL VARCHAR(250) 
, USER_NAME VARCHAR(250) 
, USER_PASSWORD VARCHAR(250) 
, CREATE_REQ_URL_PATTERN VARCHAR(250) 
, CREATE_REQ_HTTP_METHOD VARCHAR(5) 
, CREATE_REQ_DATA_FORMAT VARCHAR(5) 
, CREATE_REQ_PAYLOAD VARCHAR(1000) 
, CREATE_REQ_CUSTOM_SCRIPT VARCHAR(1000) 
, CREATE_INC_URL_PATTERN VARCHAR(250) 
, CREATE_INC_HTTP_METHOD VARCHAR(5) 
, CREATE_INC_DATA_FORMAT VARCHAR(5) 
, CREATE_INC_PAYLOAD VARCHAR(1000) 
, CREATE_INC_CUSTOM_SCRIPT VARCHAR(1000) 
, GET_REQ_URL_PATTERN VARCHAR(250) 
, GET_REQ_HTTP_METHOD VARCHAR(5) 
, GET_REQ_DATA_FORMAT VARCHAR(5) 
, GET_REQ_PAYLOAD VARCHAR(1000) 
, GET_REQ_CUSTOM_SCRIPT VARCHAR(1000) 
, GET_REQ_STATUS_EXPR_TYPE VARCHAR(10) 
, GET_REQ_STATUS_EXPRESSION VARCHAR(250) 
, GET_REQ_DESCR_EXPR_TYPE VARCHAR(10) 
, GET_REQ_DESCR_EXPRESSION VARCHAR(250) 
, GET_REQ_URL_EXPR_TYPE VARCHAR(10) 
, GET_REQ_URL_EXPRESSION VARCHAR(250) 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) NOT NULL 
, CONSTRAINT PK_CMS_API PRIMARY KEY 
  (
    CMS_API_ID 
  )
  
);

CREATE TABLE FD.CMS_CONFIG 
(
  CMS_CONFIG_ID NUMERIC(10, 0) NOT NULL 
, REQUIRE_REQ_FOR_DEPLOYMENT CHAR(1) NOT NULL 
, AUTO_CREATE_REQ_FOR_APPROVAL CHAR(1) NOT NULL 
, CHANGE_REQ_DESC_PATTERN VARCHAR(250) 
, CHANGE_REQ_COMMENT_PATTERN VARCHAR(250) 
, CHANGE_REQ_APPROVED_STATUS NUMERIC(5, 0) 
, CREATE_INC_ON_DEPLOYMENT_FAIL CHAR(1) NOT NULL 
, INC_DESCR_PATTERN VARCHAR(250) 
, INC_COMMENT_PATTERN VARCHAR(250) 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) NOT NULL 
, CONSTRAINT PK_CMS_CONFIG PRIMARY KEY 
  (
    CMS_CONFIG_ID 
  )
  
);

CREATE TABLE FD.CMS_STATUS 
(
  CMS_STATUS_ID NUMERIC(5, 0) NOT NULL 
, NAME VARCHAR(50) NOT NULL 
, CMS_ID NUMERIC(10, 0) 
, CONSTRAINT PK_CMS_STATUS PRIMARY KEY 
  (
    CMS_STATUS_ID 
  )
  
);

CREATE TABLE FD.DATA_LOAD_TRACK 
(
  DATA_LOAD_TRACK_ID NUMERIC(20, 0) NOT NULL 
, FILE_NAME VARCHAR(255) NOT NULL 
, HASH VARCHAR(255) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT DATA_LOAD_TRACK_PK PRIMARY KEY 
  (
    DATA_LOAD_TRACK_ID 
  )
  
);

CREATE TABLE FD.DEPLOY_APPROVAL 
(
  APPROVAL_ID NUMERIC(20, 0) NOT NULL 
, FOLDER_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, IS_EXTERNAL CHAR(1) DEFAULT 'N' NOT NULL 
, DEFAULT_GROUP_ID NUMERIC(20, 0) 
, EXTERNAL_SYSTEM_ID NUMERIC(10, 0) 
, EXTERNAL_SYSTEM_TYPE VARCHAR(5) 
, IS_APPLICABLE_FOR_RELEASE CHAR(1) NOT NULL 
, CONSTRAINT DEPLOY_APPROVAL_PK PRIMARY KEY 
  (
    APPROVAL_ID 
  )
  
);

CREATE TABLE FD.DEPLOY_APPROVAL_GROUP 
(
  APPROVAL_GROUP_ID NUMERIC(20, 0) NOT NULL 
, APPROVAL_ID NUMERIC(20, 0) NOT NULL 
, GROUP_ID NUMERIC(20, 0) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT DEPLOY_APPROVAL_GROUP_PK PRIMARY KEY 
  (
    APPROVAL_GROUP_ID 
  )
  
);

CREATE TABLE FD.DEPLOY_WINDOW 
(
  WINDOW_ID NUMERIC(20, 0) NOT NULL 
, FOLDER_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, CRON_EXPRESSION VARCHAR(255) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, IS_APPLICABLE_FOR_RELEASE CHAR(1) NOT NULL 
, CONSTRAINT DEPLOY_WINDOW_PK PRIMARY KEY 
  (
    WINDOW_ID 
  )
  
);

CREATE TABLE FD.DEPLOY_WINDOW_APPROVAL_GROUP 
(
  WINDOW_APPROVAL_ID NUMERIC(20, 0) NOT NULL 
, WINDOW_ID NUMERIC(20, 0) NOT NULL 
, GROUP_ID NUMERIC(20, 0) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT DEPLOY_WINDOW_APPROVAL_PK PRIMARY KEY 
  (
    WINDOW_APPROVAL_ID 
  )
  
);

CREATE TABLE FD.ENDPOINT 
(
  ENDPOINT_ID NUMERIC(20, 0) NOT NULL 
, ENDPOINT_NAME VARCHAR(50) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, CONNECTION_TYPE VARCHAR(50) NOT NULL 
, ENDPOINT_ADDRESS VARCHAR(255) NOT NULL 
, ENDPOINT_PORT VARCHAR(255) 
, USER_NAME VARCHAR(50) 
, PASSWORD VARCHAR(255) 
, PRIVATE_KEY VARCHAR(256) 
, PASSPHRASE VARCHAR(255) 
, OS_TYPE VARCHAR(50) 
, BASE_DIRECTORY VARCHAR(4000) NOT NULL 
, ENDPOINT_GROUP VARCHAR(50) 
, ENDPOINT_SUBGROUP VARCHAR(50) 
, IS_ACTIVE CHAR(1) NOT NULL 
, JAVA_PATH VARCHAR(255) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0)
, IS_BASE_DIRECTORY_EXPR CHAR(1) NOT NULL 
, IS_JAVA_PATH_EXPR CHAR(1) NOT NULL 
, RUN_AS_USER_NAME VARCHAR(50) 
, IS_DOCKER_HOST CHAR(1) DEFAULT 'N' NOT NULL
, IS_K8S_CLUSTER CHAR(1) DEFAULT 'N' NOT NULL
, K8S_CONTEXT VARCHAR(50)
, CONSTRAINT ENDPOINT_PK PRIMARY KEY 
  (
    ENDPOINT_ID 
  )
  
);

CREATE TABLE FD.ENVIRONMENT 
(
  ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_CODE VARCHAR(50) NOT NULL 
, ENVIRONMENT_NAME VARCHAR(50) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, IS_ACTIVE CHAR(1) NOT NULL 
, IS_BUILD_ENVIRONMENT CHAR(1) NOT NULL 
, SORT_NUMBER NUMERIC(8, 0) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT ENVIRONMENT_PK PRIMARY KEY 
  (
    ENVIRONMENT_ID 
  )
  
);

CREATE TABLE FD.ENVIRONMENT_CMS_CONFIG 
(
  ENVIRONMENT_CMS_CONFIG_ID NUMERIC(10, 0) NOT NULL 
, DEFAULT_CMS_CONFIG_ID NUMERIC(10, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, CMS_CONFIG_ID NUMERIC(10, 0) NOT NULL 
, CONSTRAINT PK_ENVIRONMENT_CMS_CONFIG PRIMARY KEY 
  (
    ENVIRONMENT_CMS_CONFIG_ID 
  )
  
);

CREATE TABLE FD.ENVIRONMENT_INSTANCE 
(
  ENV_INST_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT ENVIRONMENT_INSTANCE_PK PRIMARY KEY 
  (
    ENV_INST_ID 
  )
  
);

CREATE TABLE FD.ENVIRONMENT_ITS_CONFIG 
(
  ENVIRONMENT_ITS_CONFIG_ID NUMERIC(10, 0) NOT NULL 
, ISSUETRACKINGSYSTEM_ID NUMERIC(10, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, NOTIFYTICKETSONBUILD CHAR(1) NOT NULL 
, BUILDNOTIFCOMMENTPATTERN VARCHAR(250) 
, DOCHANGETICKETSTATUSONBUILD CHAR(1) 
, CHANGETICKETSTATUSONBUILDTO VARCHAR(50) 
, NOTIFYTICKETSONDEPLOY CHAR(1) NOT NULL 
, DEPLOYNOTIFCOMMENTPATTERN VARCHAR(250) 
, DOCHANGETICKETSTATUSONDEPLOY CHAR(1) 
, CHANGETICKETSTATUSONDEPLOYTO VARCHAR(50) 
, DONTDEPLOYUNTIL VARCHAR(50) 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) NOT NULL 
, CONSTRAINT PK_ENVIRONMENT_ITS_CONFIG PRIMARY KEY 
  (
    ENVIRONMENT_ITS_CONFIG_ID 
  )
  
);

CREATE TABLE FD.ENV_INST_ENDPOINT 
(
  ENV_INST_ENDPOINT_ID NUMERIC(20, 0) NOT NULL 
, ENV_INST_ID NUMERIC(20, 0) NOT NULL 
, ENDPOINT_ID NUMERIC(20, 0) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT ENV_INST_ENDPOINT_PK PRIMARY KEY 
  (
    ENV_INST_ENDPOINT_ID 
  )
  
);

CREATE TABLE FD.ENV_INST_ENDPOINT_RSC_TYPE 
(
  ENV_INST_ENDPOINT_ID NUMERIC(20, 0) NOT NULL 
, RESOURCE_TYPE_ID NUMERIC(20, 0) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT ENV_INST_ENDPOINT_RSC_TYPE_PK PRIMARY KEY 
  (
    ENV_INST_ENDPOINT_ID 
  , RESOURCE_TYPE_ID 
  )
  
);

CREATE TABLE FD.FD_FLEXDEPLOY_VERSION 
(
  VERSION VARCHAR(50) NOT NULL 
, CE_INSTALL_LOCATION VARCHAR(1000) 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
);

CREATE TABLE FD.FD_GROUP 
(
  GROUP_ID NUMERIC(20, 0) NOT NULL 
, GROUP_NAME VARCHAR(50) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT FD_GROUP_PK PRIMARY KEY 
  (
    GROUP_ID 
  )
  
);

CREATE TABLE FD.FD_GROUP_PERMISSION 
(
  GROUP_ID NUMERIC(20, 0) NOT NULL 
, PERMISSION_ID NUMERIC(20, 0) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT FD_GROUP_PERMISSION_PK PRIMARY KEY 
  (
    GROUP_ID 
  , PERMISSION_ID 
  )
  
);

CREATE TABLE FD.FD_PERMISSION 
(
  PERMISSION_ID NUMERIC(20, 0) NOT NULL 
, OBJECT_TYPE VARCHAR(50) NOT NULL 
, ACTION_TYPE VARCHAR(50) 
, OBJECT_ID NUMERIC(20, 0) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT FD_PERMISSION_PK PRIMARY KEY 
  (
    PERMISSION_ID 
  )
  
);

CREATE TABLE FD.FD_REALM 
(
  REALM_ID NUMERIC(20, 0) NOT NULL 
, REALM_NAME VARCHAR(50) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, IS_ACTIVE CHAR(1) NOT NULL 
, REALM_CLASS VARCHAR(255) NOT NULL 
, REALM_INDEX NUMERIC(8, 0) NOT NULL 
, ATTRIBUTE1 VARCHAR(2000) 
, ATTRIBUTE2 VARCHAR(2000) 
, ATTRIBUTE3 VARCHAR(2000) 
, ATTRIBUTE4 VARCHAR(2000) 
, ATTRIBUTE5 VARCHAR(2000) 
, ATTRIBUTE6 VARCHAR(200) 
, ATTRIBUTE7 VARCHAR(200) 
, ATTRIBUTE8 VARCHAR(200) 
, ATTRIBUTE9 VARCHAR(200) 
, ATTRIBUTE10 VARCHAR(200) 
, SEC_ATTRIBUTE1 VARCHAR(4000) 
, SEC_ATTRIBUTE2 VARCHAR(4000) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT FD_REALM_PK PRIMARY KEY 
  (
    REALM_ID 
  )
  
);

CREATE TABLE FD.FD_REALM_GROUP 
(
  REALM_GROUP_ID NUMERIC(20, 0) NOT NULL 
, REALM_ID NUMERIC(20, 0) NOT NULL 
, GROUP_NAME VARCHAR(4000) NOT NULL 
, CONSTRAINT PK_FD_REALM_GROUP PRIMARY KEY 
  (
    REALM_GROUP_ID 
  )
  
);

CREATE TABLE FD.FD_REALM_GROUP_MAP 
(
  REALM_GROUP_ID NUMERIC(20, 0) NOT NULL 
, FD_GROUP_ID NUMERIC(20, 0) NOT NULL 
, CONSTRAINT PK_FD_REALM_GROUP_MAP PRIMARY KEY 
  (
    FD_GROUP_ID 
  , REALM_GROUP_ID 
  )
  
);

CREATE TABLE FD.FD_USER 
(
  USER_ID NUMERIC(20, 0) NOT NULL 
, USER_NAME VARCHAR(50) NOT NULL 
, PASSWORD VARCHAR(255) NOT NULL 
, FIRST_NAME VARCHAR(255) NOT NULL 
, LAST_NAME VARCHAR(255) NOT NULL 
, EMAIL VARCHAR(255) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, LOCAL_USER CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT FD_USER_PK PRIMARY KEY 
  (
    USER_ID 
  )
  
);

CREATE TABLE FD.FD_USER_ATTRIBUTE 
(
  FD_USER_ATTRIBUTE_ID NUMERIC(20, 0) NOT NULL 
, USER_ID NUMERIC(20, 0) NOT NULL 
, FD_USER_ATTR_DEF_ID NUMERIC(20, 0) NOT NULL 
, ATTRIBUTE_VALUE VARCHAR(1024) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT FD_USER_ATTRIBUTE_PK PRIMARY KEY 
  (
    FD_USER_ATTRIBUTE_ID 
  )
  
);

CREATE TABLE FD.FD_USER_ATTR_DEF 
(
  FD_USER_ATTR_DEF_ID NUMERIC(20, 0) NOT NULL 
, FD_USER_ATTR_GROUP VARCHAR(255) NOT NULL 
, FD_USER_ATTR_NAME VARCHAR(50) NOT NULL 
, UI_ATTR_NAME VARCHAR(255) NOT NULL 
, UI_ATTR_HINT VARCHAR(255) NOT NULL 
, FD_USER_ATTR_DATATYPE VARCHAR(50) NOT NULL 
, FD_USER_ATTR_SUBTYPE VARCHAR(50) 
, FD_USER_ATTR_VALIDATIONS VARCHAR(2000) 
, FD_USER_ATTR_VAL_ERR_MSG VARCHAR(1024) 
, DEFAULT_VALUE VARCHAR(1024) 
, IS_ENCRYPTED CHAR(1) NOT NULL 
, IS_VISIBLE CHAR(1) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT FD_USER_ATTR_DEF_PK PRIMARY KEY 
  (
    FD_USER_ATTR_DEF_ID 
  )
  
);

CREATE TABLE FD.FD_USER_EXT_GROUP 
(
  USER_ID NUMERIC(20, 0) NOT NULL 
, GROUP_ID NUMERIC(20, 0) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT FD_USER_EXT_GROUP_PK PRIMARY KEY 
  (
    USER_ID 
  , GROUP_ID 
  )
  
);

CREATE TABLE FD.FD_USER_GROUP 
(
  USER_ID NUMERIC(20, 0) NOT NULL 
, GROUP_ID NUMERIC(20, 0) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT FD_USER_GROUP_PK PRIMARY KEY 
  (
    USER_ID 
  , GROUP_ID 
  )
  
);

CREATE TABLE FD.FLEX_FIELD_METADATA 
(
  FLEX_FIELD_METADATA_ID NUMERIC(20, 0) NOT NULL 
, OBJECT_NAME VARCHAR(255) NOT NULL 
, COLUMN_NAME VARCHAR(255) NOT NULL 
, CODE VARCHAR(255) 
, DISPLAY_NAME VARCHAR(255) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, DATATYPE VARCHAR(255) 
, IS_REQUIRED CHAR(1) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, DISPLAY_ROWS NUMERIC(8) 
, DISPLAY_COLUMNS NUMERIC(8) 
, MIN_VALUE NUMERIC(20) 
, MAX_VALUE NUMERIC(20) 
, DEFAULT_VALUE VARCHAR(4000) 
, LIST_DATA VARCHAR(4000) 
, VALIDATOR1 VARCHAR(4000) 
, LENGTH NUMERIC(20) 
, IS_VISIBLE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT FLEX_FIELD_METADATA_PK PRIMARY KEY 
  (
    FLEX_FIELD_METADATA_ID 
  )
  
);

CREATE TABLE FD.FOLDER 
(
  FOLDER_ID NUMERIC(20, 0) NOT NULL 
, PARENT_FOLDER_ID NUMERIC(20, 0) 
, FOLDER_NAME VARCHAR(255) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, IS_APPLICATION CHAR(1) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT FOLDER_PK PRIMARY KEY 
  (
    FOLDER_ID 
  )
  
);

CREATE TABLE FD.FOLDER_CMS_CONFIG 
(
  FOLDER_ID NUMERIC(20, 0) NOT NULL 
, INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, CMS_CONFIG_ID NUMERIC(10, 0) NOT NULL 
, INSTANCE_CMS_CONFIG_ID NUMERIC(10, 0) NOT NULL 
, ISOVERRIDDEN CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) NOT NULL 
, CONSTRAINT PK_FOLDER_CMS_CONFIG PRIMARY KEY 
  (
    FOLDER_ID 
  )
  
);

CREATE TABLE FD.FOLDER_PROJECT_VERSION 
(
  FOLDER_PROJECT_VERSION_ID NUMERIC(20, 0) NOT NULL 
, FOLDER_VERSION_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_VERSION_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT FOLDER_PROJECT_VERSION_PK PRIMARY KEY 
  (
    FOLDER_PROJECT_VERSION_ID 
  )
  
);

CREATE TABLE FD.FOLDER_REQUEST 
(
  FOLDER_REQUEST_ID NUMERIC(20, 0) NOT NULL 
, FOLDER_ID NUMERIC(20, 0) NOT NULL 
, FOLDER_WORKFLOW_TYPE VARCHAR(50) NOT NULL 
, FOLDER_VERSION_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, FORCE_DEPLOY CHAR(1) NOT NULL 
, REQUESTED_START_TIME TIMESTAMP WITH TIME ZONE 
, END_TIME TIMESTAMP WITH TIME ZONE null default null
, IS_EXCEPTION CHAR(1) NOT NULL 
, REQUEST_STATUS VARCHAR(50) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  null default null
, CREATED_BY VARCHAR(128) 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  null default null
, UPDATED_BY VARCHAR(128) 
, VERSION_NUMBER NUMERIC(8, 0) 
, STOP_ON_ERROR CHAR(1) 
, CONSTRAINT FOLDER_REQUEST_PK PRIMARY KEY 
  (
    FOLDER_REQUEST_ID 
  )
  
);

CREATE TABLE FD.FOLDER_REQUEST_CURRENT_STATE 
(
  ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, FOLDER_ID NUMERIC(20, 0) NOT NULL 
, FOLDER_REQUEST_ID NUMERIC(20, 0) NOT NULL 
, IS_BROKEN CHAR(1) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT FOLDER_RQST_CURRENT_STATE_PK PRIMARY KEY 
  (
    ENVIRONMENT_ID 
  , FOLDER_ID 
  )
  
);

CREATE TABLE FD.FOLDER_VERSION 
(
  FOLDER_VERSION_ID NUMERIC(20, 0) NOT NULL 
, FOLDER_ID NUMERIC(20, 0) NOT NULL 
, FOLDER_VERSION_NAME VARCHAR(50) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, ARTIFACTS_PURGED VARCHAR(1) 
, CONSTRAINT FOLDER_VERSION_PK PRIMARY KEY 
  (
    FOLDER_VERSION_ID 
  )
  
);

CREATE TABLE FD.HUMAN_TASK 
(
  TASK_ID NUMERIC(20, 0) NOT NULL 
, WORKFLOW_REQUEST_ID NUMERIC(20, 0) 
, FOLDER_REQUEST_ID NUMERIC(20, 0) 
, GROUP_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, TASK_STATUS VARCHAR(50) NOT NULL 
, ACTION_ON TIMESTAMP(6) WITH TIME ZONE 
, ACTION_BY VARCHAR(128) 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, EXTERNAL_ID VARCHAR(30) 
, EXTERNAL_SYSTEM_ID NUMERIC(10, 0) 
, EXTERNAL_SYSTEM_TYPE VARCHAR(5) 
, PIPELINE_STAGE_GATE_EXEC_ID NUMERIC(20, 0) 
, PIPELINE_STAGE_STEP_EXEC_ID NUMERIC(20, 0)
, PIPELINE_STAGE_EXEC_ID NUMERIC(20,0)
, ASSIGNEE VARCHAR(50) 
, PIPELINE_STAGE_GATE_ID NUMERIC(20, 0) 
, PIPELINE_STAGE_STEP_ID NUMERIC(20, 0) 
, STAGE_EXECUTION_STATUS VARCHAR(50) 
, GATE_EXECUTION_STATUS VARCHAR(50) 
, STEP_EXECUTION_STATUS VARCHAR(50) 
, REL_DEFINITION_ID NUMERIC(20,0)
, REL_SNAPSHOT_ID NUMERIC(20, 0)
, TASK_NOTES VARCHAR(255) 
, CONSTRAINT HUMAN_TASK_PK PRIMARY KEY 
  (
    TASK_ID 
  )
  
);

CREATE TABLE FD.HUMAN_TASK_IDENTITY 
(
  TASK_IDENTITY_ID NUMERIC(20, 0) NOT NULL 
, TASK_ID NUMERIC(20, 0) NOT NULL 
, TASK_IDENTIFIER VARCHAR(100) NOT NULL 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT HUMAN_TASK_IDENTITY_PK PRIMARY KEY 
  (
    TASK_IDENTITY_ID 
  )
   
);

CREATE TABLE FD.INSTANCE 
(
  INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, INSTANCE_CODE VARCHAR(50) NOT NULL 
, INSTANCE_NAME VARCHAR(50) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, IS_DEPLOYMENT_TARGET CHAR(1) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, IS_GENERIC CHAR(1) DEFAULT 'N' 
, GROUP_CODE VARCHAR(50) 
, SUB_GROUP_CODE VARCHAR(50) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT INSTANCE_PK PRIMARY KEY 
  (
    INSTANCE_ID 
  )
  
);

CREATE TABLE FD.INST_PROPERTY_SET 
(
  INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, PROPERTY_SET_ID NUMERIC(20, 0) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT ENV_INST_PROPERTY_SET_PK PRIMARY KEY 
  (
    INSTANCE_ID 
  , PROPERTY_SET_ID 
  )
  
);

CREATE TABLE FD.ISSUETRACKINGSYSTEM 
(
  ISSUETRACKINGSYSTEMID NUMERIC(10, 0) NOT NULL 
, NAME VARCHAR(50) NOT NULL 
, DESCRIPTION VARCHAR(250) 
, TICKETNUMBERPATTERN VARCHAR(50) 
, NOTIFYTICKETSONBUILD CHAR(1) NOT NULL 
, BUILDNOTIFCOMMENTPATTERN VARCHAR(250) 
, DOCHANGETICKETSTATUSONBUILD CHAR(1) 
, CHANGETICKETSTATUSONBUILDTO VARCHAR(50) 
, NOTIFYTICKETSONDEPLOY CHAR(1) NOT NULL 
, DEPLOYNOTIFCOMMENTPATTERN VARCHAR(250) 
, DOCHANGETICKETSTATUSONDEPLOY CHAR(1) 
, CHANGETICKETSTATUSONDEPLOYTO VARCHAR(50) 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) NOT NULL 
, CONSTRAINT PK_ISSUETRACKINGSYSTEM PRIMARY KEY 
  (
    ISSUETRACKINGSYSTEMID 
  )
  
);

CREATE TABLE FD.ITSSTATUS 
(
  ID NUMERIC(5, 0) NOT NULL 
, NAME VARCHAR(50) NOT NULL 
, ISSUETRACKINGSYSTEMID NUMERIC(10, 0) NOT NULL 
, CONSTRAINT PK_ITSSTATUS PRIMARY KEY 
  (
    ID 
  )
  
);

CREATE TABLE FD.LICENSE_INFO 
(
  LICENSE_INFO_ID NUMERIC(20, 0) NOT NULL 
, LICENSE_KEY VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT LICENSE_INFO_PK PRIMARY KEY 
  (
    LICENSE_INFO_ID 
  )
  
);

CREATE TABLE FD.NOTIFICATION 
(
  NOTIFICATION_ID NUMERIC(20, 0) NOT NULL 
, NOTIFICATION_NAME VARCHAR(50) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, FOLDER_ID NUMERIC(20, 0) 
, IS_APPLICATION_LEVEL CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT NOTIFICATION_PK PRIMARY KEY 
  (
    NOTIFICATION_ID 
  )
  
);

CREATE TABLE FD.NOTIFICATION_EVENT 
(
  NOTIFICATION_EVENT_ID NUMERIC(20, 0) NOT NULL 
, NOTIFICATION_ID NUMERIC(20, 0) NOT NULL 
, EVENT_CODE VARCHAR(50) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT NOTIFICATION_EVENT_PK PRIMARY KEY 
  (
    NOTIFICATION_EVENT_ID 
  )
  
);

CREATE TABLE FD.NOTIFICATION_RECIPIENT 
(
  NOTIFICATION_RECIPIENT_ID NUMERIC(20, 0) NOT NULL 
, NOTIFICATION_ID NUMERIC(20, 0) NOT NULL 
, TYPE VARCHAR(50) NOT NULL 
, RECIPIENT VARCHAR(255) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT NOTIFICATION_RECIPIENT_PK PRIMARY KEY 
  (
    NOTIFICATION_RECIPIENT_ID 
  )
  
);

CREATE TABLE FD.OBJECT_ATTRIBUTE_DEF 
(
  OBJECT_ATTR_DEF_ID NUMERIC(20, 0) NOT NULL 
, OBJECT_TYPE_ID NUMERIC(20, 0) NOT NULL 
, OBJECT_ATTRIBUTE_CODE VARCHAR(50) NOT NULL 
, ATTRIBUTE_DISPLAY_NAME VARCHAR(255) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, IS_VISIBLE CHAR(1) NOT NULL 
, IS_READONLY CHAR(1) 
, IS_EXPRESSION CHAR(1) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, DATATYPE VARCHAR(50) NOT NULL 
, IS_REQUIRED CHAR(1) NOT NULL 
, IS_ENCRYPTED CHAR(1) NOT NULL 
, MIN_VALUE NUMERIC(20, 0) 
, MAX_VALUE NUMERIC(20, 0) 
, LENGTH NUMERIC(20) 
, LIST_DATA VARCHAR(4000) 
, OVERRIDE_LIST_DATA CHAR(1) 
, DISPLAY_ROWS NUMERIC(8, 0) 
, DISPLAY_COLUMNS NUMERIC(8, 0) 
, DISPLAY_ORDER NUMERIC(8, 0) NOT NULL 
, DEFAULTS_SCRIPT VARCHAR(4000) 
, OVERRIDE_DEFAULTS_SCRIPT CHAR(1) 
, VALIDATOR_SCRIPT VARCHAR(4000) 
, OVERRIDE_VALIDATOR_SCRIPT CHAR(1) 
, IS_DEPENDENT CHAR(1) NOT NULL 
, HAS_DEPENDENTS CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT OBJECT_ATTR_DEF_PK PRIMARY KEY 
  (
    OBJECT_ATTR_DEF_ID 
  )
  
);

CREATE TABLE FD.OBJECT_TYPE 
(
  OBJECT_TYPE_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_TYPE VARCHAR(50) NOT NULL 
, OBJECT_TYPE_CODE VARCHAR(50) NOT NULL 
, TYPE_DISPLAY_NAME VARCHAR(255) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, IS_ACTIVE CHAR(1) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(5) NOT NULL 
, MATCH_SCRIPT VARCHAR(4000) 
, DEFAULTS_SCRIPT VARCHAR(4000) 
, VALIDATOR_SCRIPT VARCHAR(4000) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT OBJECT_TYPE_PK PRIMARY KEY 
  (
    OBJECT_TYPE_ID 
  )
  
);

CREATE TABLE FD.PACKAGE_OBJECT 
(
  PACKAGE_OBJECT_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_OBJECT_ID NUMERIC(20) NOT NULL 
, PROJECT_VERSION_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(5, 0) NOT NULL 
, HASH VARCHAR(100) 
, SCM_REVISION VARCHAR(100) 
, FROM_PACKAGE_OBJECT_ID NUMERIC(20,0) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE null
, UPDATED_BY VARCHAR(128) 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PACKAGE_OBJECT_PK PRIMARY KEY 
  (
    PACKAGE_OBJECT_ID 
  )
  
);

CREATE TABLE FD.PACKAGE_OBJECT_EXECUTION 
(
  PACKAGE_OBJECT_EXECUTION_ID NUMERIC(20, 0) NOT NULL 
, PLUGIN_EXECUTION_ID NUMERIC(20, 0) NOT NULL 
, ENDPOINT_ID NUMERIC(20) NOT NULL 
, PACKAGE_OBJECT_ID NUMERIC(20) NOT NULL 
, EXECUTION_STATUS VARCHAR(50) NOT NULL 
, START_TIME TIMESTAMP WITH TIME ZONE null
, END_TIME TIMESTAMP WITH TIME ZONE null
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PACKAGE_OBJECT_EXECUTION_PK PRIMARY KEY 
  (
    PACKAGE_OBJECT_EXECUTION_ID 
  )
  
);

CREATE TABLE FD.PACKAGE_OBJ_CURRENT_STATUS 
(
  INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20) NOT NULL 
, PROJECT_ID NUMERIC(20) NOT NULL 
, PROJECT_OBJECT_ID NUMERIC(20) NOT NULL 
, WORKFLOW_EXECUTION_ID NUMERIC(20) NOT NULL 
, LAST_ATTEMPTED_WF_EXEC_ID NUMERIC(20) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PACKAGE_OBJ_CURRENT_STATUS_PK PRIMARY KEY 
  (
    INSTANCE_ID 
  , ENVIRONMENT_ID 
  , PROJECT_ID 
  , PROJECT_OBJECT_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_ATTACHMENT 
(
  PIPELINE_ATTACHMENT_ID NUMERIC(20, 0) NOT NULL 
, PARENT_TYPE VARCHAR(50) NOT NULL 
, PARENT_ID NUMERIC(20, 0) NOT NULL 
, NOTE VARCHAR(4000) 
, ATTACHMENT_TYPE VARCHAR(50) NOT NULL 
, FILE_ID NUMERIC(20, 0) 
, FILE_NAME VARCHAR(100) 
, CONTENT_TYPE VARCHAR(100) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_ATTACHMENT_PK PRIMARY KEY 
  (
    PIPELINE_ATTACHMENT_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_ATTACHMENT_DATA 
(
  PIPELINE_ATTACHMENT_DATA_ID NUMERIC(20, 0) NOT NULL 
, FILE_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, DATA_FRAGMENT VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_ATTACHMENT_DATA_PK PRIMARY KEY 
  (
    PIPELINE_ATTACHMENT_DATA_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_DEFINITION 
(
  PIPELINE_DEFINITION_ID NUMERIC(20) NOT NULL 
, NAME VARCHAR(255) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, ACTIVE_PIPELINE_VERSION_ID NUMERIC(20) 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_DEFINITION_PK PRIMARY KEY 
  (
    PIPELINE_DEFINITION_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_EXEC 
(
  PIPELINE_EXEC_ID NUMERIC(20, 0) NOT NULL 
, REL_SNAPSHOT_ID NUMERIC(20, 0) NOT NULL 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, PIPELINE_VERSION_ID NUMERIC(20, 0) NOT NULL 
, EXECUTION_STATUS VARCHAR(50) NOT NULL 
, START_TIME TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, END_TIME TIMESTAMP(6) WITH TIME ZONE null
, UPDATED_ON TIMESTAMP WITH TIME ZONE null
, UPDATED_BY VARCHAR(128) 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_EXEC_PK PRIMARY KEY 
  (
    PIPELINE_EXEC_ID 
  )

);

CREATE TABLE FD.PIPELINE_METADATA 
(
  PIPELINE_METADATA_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, KEY_CODE VARCHAR(255) NOT NULL 
, DISPLAY_NAME VARCHAR(255) 
, KEY_TYPE VARCHAR(20) NOT NULL 
, DESCRIPTION VARCHAR(500) 
, KEY_DATATYPE VARCHAR(50) NOT NULL 
, KEY_SUB_DATATYPE VARCHAR(50) 
, IS_REQUIRED CHAR(1) NOT NULL 
, IS_ENCRYPTED CHAR(1) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, MIN_VALUE NUMERIC(20, 0) 
, MAX_VALUE NUMERIC(20, 0) 
, LIST_DATA VARCHAR(4000) 
, IS_MULTISELECT CHAR(1) NOT NULL 
, DISPLAY_ROWS NUMERIC(8, 0) 
, DISPLAY_COLUMNS NUMERIC(8, 0) 
, VALIDATOR1 VARCHAR(4000) 
, VALIDATOR2 VARCHAR(4000) 
, VALIDATOR3 VARCHAR(4000) 
, VALIDATOR4 VARCHAR(4000) 
, VALIDATOR5 VARCHAR(4000) 
, IS_CUSTOM CHAR(1) NOT NULL 
, DEFAULT_VALUE VARCHAR(4000) 
, IS_DEFAULT_EXPRESSION CHAR(1) NOT NULL 
, IS_ALLOWS_VARIANT CHAR(1) NOT NULL 
, LENGTH NUMERIC(20) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_METADATA_PK PRIMARY KEY 
  (
    PIPELINE_METADATA_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_PROJECT_GROUP 
(
  PIPELINE_PROJECT_GROUP_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_GROUP_NAME VARCHAR(50) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_PROJECT_GROUP_PK PRIMARY KEY 
  (
    PIPELINE_PROJECT_GROUP_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_ROLE 
(
  PIPELINE_ROLE_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_DEFINITION_ID NUMERIC(20) NOT NULL 
, NAME VARCHAR(50) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, IS_ACTIVE VARCHAR(1) DEFAULT 'Y' NOT NULL 
, CONSTRAINT PIPELINE_ROLE_PK PRIMARY KEY 
  (
    PIPELINE_ROLE_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_ROLE_MEMBER 
(
  PIPELINE_ROLE_MEMBER_ID NUMERIC(20, 0) NOT NULL 
, REL_DEFINITION_ID NUMERIC(20) 
, PIPELINE_ROLE_ID NUMERIC(20, 0) NOT NULL 
, MEMBER_TYPE VARCHAR(1) NOT NULL 
, GROUP_ID NUMERIC(20) 
, USER_ID NUMERIC(20)
, EMAIL_ADDRESS VARCHAR(250) 
, CREATED_BY VARCHAR(128) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_ROLE_MEMBER_PK PRIMARY KEY 
  (
    PIPELINE_ROLE_MEMBER_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_ROLE_PERMISSION 
(
  PIPELINE_ROLE_PERMISSION_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_ROLE_ID NUMERIC(20, 0) NOT NULL 
, PERMISSION_ID NUMERIC(20) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_ROLE_PERMISSION_PK PRIMARY KEY 
  (
    PIPELINE_ROLE_PERMISSION_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_STAGE 
(
  PIPELINE_STAGE_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_VERSION_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_STAGE_PK PRIMARY KEY 
  (
    PIPELINE_STAGE_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_STAGE_EXEC 
(
  PIPELINE_STAGE_EXEC_ID NUMERIC(20, 0) NOT NULL 
, REL_SNAPSHOT_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20) NOT NULL 
, EXECUTION_STATUS VARCHAR(50) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, PIPELINE_EXEC_ID NUMERIC(20) NOT NULL 
, ACTION_TYPE VARCHAR(50) 
, ACTION_BY VARCHAR(128) 
, ACTION_ON TIMESTAMP WITH TIME ZONE null
, START_TIME TIMESTAMP(6) WITH TIME ZONE null
, END_TIME TIMESTAMP(6) WITH TIME ZONE null
, CONSTRAINT PIPELINE_STAGE_EXECUTION_PK PRIMARY KEY 
  (
    PIPELINE_STAGE_EXEC_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_STAGE_EXEC_INFO 
(
  PIPELINE_STAGE_EXEC_INFO_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_STAGE_EXEC_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, INFO_DATA VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_STAGE_EXEC_INFO_PK PRIMARY KEY 
  (
    PIPELINE_STAGE_EXEC_INFO_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_STAGE_GATE 
(
  PIPELINE_STAGE_GATE_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_STAGE_ID NUMERIC(20, 0) NOT NULL 
, NAME VARCHAR(255) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, GATE_TYPE VARCHAR(50) NOT NULL 
, GATE_NUMBER NUMERIC(20) NOT NULL 
, GATE_SEQUENCE NUMERIC(8, 0) NOT NULL 
, PIPELINE_ROLE_ID NUMERIC(20, 0) 
, CRON_EXPRESSION VARCHAR(255) 
, SCHD_OVERRIDE_PIPELINE_ROLE_ID NUMERIC(20) 
, TEST_OVERRIDE_PIPELINE_ROLE_ID NUMERIC(20) 
, TEST_RESULTS_ENV_ID NUMERIC(20) 
, EXTERNAL_SYSTEM_TYPE VARCHAR(5) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_STAGE_GATE_PK PRIMARY KEY 
  (
    PIPELINE_STAGE_GATE_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_STAGE_GATE_DATA 
(
  PIPELINE_STAGE_GATE_DATA_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_STAGE_GATE_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, GATE_DATA VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_STAGE_GATE_DATA_PK PRIMARY KEY 
  (
    PIPELINE_STAGE_GATE_DATA_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_STAGE_GATE_EXEC 
(
  PIPELINE_STAGE_GATE_EXEC_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_STAGE_EXEC_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_STAGE_GATE_ID NUMERIC(20, 0) NOT NULL 
, GATE_EXEC_STATUS VARCHAR(50) NOT NULL 
, GATE_EXEC_SEQUENCE NUMERIC(8) NOT NULL 
, ACTION_TYPE VARCHAR(50) 
, ACTION_BY VARCHAR(128) 
, ACTION_ON TIMESTAMP WITH TIME ZONE null
, START_TIME TIMESTAMP WITH TIME ZONE null
, END_TIME TIMESTAMP WITH TIME ZONE null
, ERROR_MESSAGE VARCHAR(500) 
, REPLY_IDENTIFIER VARCHAR(100) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_STAGE_GATE_EXE_PK PRIMARY KEY 
  (
    PIPELINE_STAGE_GATE_EXEC_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_STAGE_STEP 
(
  PIPELINE_STAGE_STEP_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_STAGE_ID NUMERIC(20, 0) NOT NULL 
, NAME VARCHAR(255) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, STEP_NUMBER NUMERIC(20) NOT NULL 
, STEP_SEQUENCE NUMERIC(8, 0) NOT NULL 
, PARENT_STEP_NUMBER NUMERIC(20) 
, STEP_TYPE VARCHAR(50) NOT NULL 
, PIPELINE_ROLE_ID NUMERIC(20) 
, CRON_EXPRESSION VARCHAR(255) 
, SCHD_OVERRIDE_PIPELINE_ROLE_ID NUMERIC(20) 
, WAIT_DURATION_SECS NUMERIC(8, 0) 
, ESTIMATED_DURATION_SECS NUMERIC(8, 0) 
, WAIT_TILL_DATE TIMESTAMP WITH TIME ZONE 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_STAGE_STEP_PK PRIMARY KEY 
  (
    PIPELINE_STAGE_STEP_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_STAGE_STEP_DATA 
(
  PIPELINE_STAGE_STEP_DATA_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_STAGE_STEP_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, STEP_DATA VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_STAGE_STEP_DATA_PK PRIMARY KEY 
  (
    PIPELINE_STAGE_STEP_DATA_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_STAGE_STEP_EXEC 
(
  PIPELINE_STAGE_STEP_EXEC_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_STAGE_EXEC_ID NUMERIC(20) NOT NULL 
, PIPELINE_STAGE_STEP_ID NUMERIC(20, 0) NOT NULL 
, STEP_EXEC_STATUS VARCHAR(50) NOT NULL 
, STEP_EXEC_SEQUENCE VARCHAR(255) 
, START_TIME TIMESTAMP WITH TIME ZONE  null default null
, END_TIME TIMESTAMP WITH TIME ZONE null default null
, ACTION_TYPE VARCHAR(50) 
, ACTION_BY VARCHAR(128) 
, ACTION_ON TIMESTAMP WITH TIME ZONE  null default null
, DEPLOY_PRIORITY_SUBMITTED NUMERIC(8) 
, ERROR_MESSAGE VARCHAR(500) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_STAGE_STEP_EXEC_PK PRIMARY KEY 
  (
    PIPELINE_STAGE_STEP_EXEC_ID 
  )
  
);

CREATE TABLE FD.PIPELINE_STAGE_STEP_EXEC_WFRQ 
(
  PIPELINE_STAGE_STEP_EXE_WFRQID NUMERIC(20, 0) NOT NULL 
, PIPELINE_STAGE_STEP_EXEC_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_VERSION_ID NUMERIC(20, 0) 
, DEPLOY_PRIORITY NUMERIC(8) 
, SUBMIT_STATUS VARCHAR(15) NOT NULL 
, WORKFLOW_REQUEST_ID NUMERIC(20, 0) 
, ERROR_MESSAGE VARCHAR(500) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_STAGE_STEP_EXEC_W_PK PRIMARY KEY 
  (
    PIPELINE_STAGE_STEP_EXE_WFRQID 
  )
  
);

CREATE TABLE FD.PIPELINE_VERSION 
(
  PIPELINE_VERSION_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, PIPELINE_VERSION VARCHAR(100) NOT NULL 
, ACTIVE_COPY CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PIPELINE_VERSION_PK PRIMARY KEY 
  (
    PIPELINE_VERSION_ID 
  )
  
);

CREATE TABLE FD.PLUGIN 
(
  PLUGIN_ID NUMERIC(20, 0) NOT NULL 
, PLUGIN_NAME VARCHAR(50) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, VENDOR_NAME VARCHAR(255) NOT NULL 
, PLUGIN_GROUP VARCHAR(50) NOT NULL 
, PLUGIN_SUBGROUP VARCHAR(50) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, ACTIVE_PLUGIN_VERSION_ID NUMERIC(20, 0) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, PLUGIN_DISPLAY_NAME VARCHAR(50) NOT NULL 
, PLUGIN_TYPE VARCHAR(25) NOT NULL 
, IMAGE_NAME VARCHAR(255) 
, CONSTRAINT PLUGIN_PK PRIMARY KEY 
  (
    PLUGIN_ID 
  )
  
);

CREATE TABLE FD.PLUGIN_EXECUTION 
(
  PLUGIN_EXECUTION_ID NUMERIC(20, 0) NOT NULL 
, ENDPOINT_ID NUMERIC(20, 0) NOT NULL 
, WORKFLOW_EXECUTION_ID NUMERIC(20, 0) NOT NULL 
, PLUGIN_EXECUTION_STATUS VARCHAR(50) NOT NULL 
, PERCENT_PROGRESS NUMERIC(3, 0) 
, PLUGIN_EXECUTION_ERROR_DATA VARCHAR(4000) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PLUGIN_EXECUTION_PK PRIMARY KEY 
  (
    ENDPOINT_ID 
  , PLUGIN_EXECUTION_ID 
  )
  
);

CREATE TABLE FD.PLUGIN_EXECUTION_LOG 
(
  PLUGIN_EXECUTION_LOG_ID NUMERIC(20, 0) NOT NULL 
, PLUGIN_EXECUTION_ID NUMERIC(20, 0) NOT NULL 
, ENDPOINT_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, PLUGIN_EXECUTION_LOG VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PLUGIN_EXECUTION_LOG_PK PRIMARY KEY 
  (
    PLUGIN_EXECUTION_LOG_ID 
  )
  
);

CREATE TABLE FD.PLUGIN_EXECUTION_OUTPUT 
(
  PLUGIN_EXECUTION_OUTPUT_ID NUMERIC(20, 0) NOT NULL 
, PLUGIN_EXECUTION_ID NUMERIC(20, 0) NOT NULL 
, ENDPOINT_ID NUMERIC(20, 0) NOT NULL 
, OUTPUT_KEY_NAME VARCHAR(255) NOT NULL 
, INSTANCE_ID NUMERIC(20, 0) 
, ENVIRONMENT_ID NUMERIC(20, 0) 
, PROJECT_ID NUMERIC(20, 0) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PLUGIN_EXECUTION_OUTPUT_PK PRIMARY KEY 
  (
    PLUGIN_EXECUTION_OUTPUT_ID 
  )
  
);

CREATE TABLE FD.PLUGIN_EXECUTION_OUTPUT_VALUE 
(
  PLUGIN_EXECUTION_OP_VALUE_ID NUMERIC(20, 0) NOT NULL 
, PLUGIN_EXECUTION_OUTPUT_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, OUTPUT_VALUE VARCHAR(4000) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PLUGIN_EXECUTION_OP_VALUE_PK PRIMARY KEY 
  (
    PLUGIN_EXECUTION_OP_VALUE_ID 
  )
  
);

CREATE TABLE FD.PLUGIN_VERSION 
(
  PLUGIN_VERSION_ID NUMERIC(20, 0) NOT NULL 
, PLUGIN_ID NUMERIC(20, 0) NOT NULL 
, PLUGIN_VERSION VARCHAR(255) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, IS_ACTIVE CHAR(1) NOT NULL 
, INSTALLED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, INSTALLED_BY VARCHAR(128) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PLUGIN_VERSION_PK PRIMARY KEY 
  (
    PLUGIN_VERSION_ID 
  )
  
);

CREATE TABLE FD.PLUGIN_VERSION_DATA 
(
  PLUGIN_VERSION_DATA_ID NUMERIC(20, 0) NOT NULL 
, PLUGIN_VERSION_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, PLUGIN_VERSION_DATA VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PLUGIN_VERSION_DATA_PK PRIMARY KEY 
  (
    PLUGIN_VERSION_DATA_ID 
  )
  
);

CREATE TABLE FD.PLUGIN_VERSION_JAR 
(
  PLUGIN_VERSION_JAR_ID NUMERIC(20, 0) NOT NULL 
, PLUGIN_VERSION_ID NUMERIC(20, 0) NOT NULL 
, PLUGIN_JAR_FILENAME VARCHAR(255) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, PLUGIN_JAR_DATA VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PLUGIN_VERSION_JAR_PK PRIMARY KEY 
  (
    PLUGIN_VERSION_JAR_ID 
  )
  
);

CREATE TABLE FD.POST_REFRESH_REQUEST 
(
  POST_REFRESH_REQUEST_ID NUMERIC(20, 0) NOT NULL 
, TARGET_ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, TARGET_INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, SOURCE_ENVIRONMENT_ID NUMERIC(20, 0) 
, SOURCE_INSTANCE_ID NUMERIC(20, 0) 
, REQUESTED_START_TIME TIMESTAMP(6) WITH TIME ZONE 
, STOP_ON_ERROR CHAR(1) 
, REQUEST_STATUS VARCHAR(50) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT POST_REFRESH_REQUEST_PK PRIMARY KEY 
  (
    POST_REFRESH_REQUEST_ID 
  ) 
);

CREATE TABLE FD.PROJECT 
(
  PROJECT_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_TYPE VARCHAR(50) 
, FOLDER_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_NAME VARCHAR(255) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, DEPLOY_PRIORITY NUMERIC(2, 0) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, SCM_TYPE VARCHAR(50) 
, PARTIAL_DEPLOYMENTS CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, DEPLOY_PRIORITY_SCOPE VARCHAR(50) 
, CONSTRAINT PROJECT_PK PRIMARY KEY 
  (
    PROJECT_ID 
  )
  
);

CREATE TABLE FD.PROJECT_CMS_CONFIG 
(
  PROJECT_ID NUMERIC(20, 0) NOT NULL 
, INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, CMS_CONFIG_ID NUMERIC(10, 0) NOT NULL 
, INSTANCE_CMS_CONFIG_ID NUMERIC(10, 0) NOT NULL 
, ISOVERRIDDEN CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) NOT NULL 
, CONSTRAINT PK_PROJECT_CMS_CONFIG PRIMARY KEY 
  (
    PROJECT_ID 
  )
  
);

CREATE TABLE FD.PROJECT_CONFIG 
(
  PROJECT_CONFIG_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_CONFIG_KEY VARCHAR(255) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROJECT_CONFIG_PK PRIMARY KEY 
  (
    PROJECT_CONFIG_ID 
  )
  
);

CREATE TABLE FD.PROJECT_CONFIG_VALUE 
(
  PROJECT_CONFIG_VALUE_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_CONFIG_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, PROJECT_CONFIG_VALUE VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROJECT_CONFIG_VALUE_PK PRIMARY KEY 
  (
    PROJECT_CONFIG_VALUE_ID 
  )
  
);

CREATE TABLE FD.PROJECT_ENV_ITS_CONFIG 
(
  PROJECT_ENV_ITS_CONFIG_ID NUMERIC(10, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, NOTIFYTICKETSONBUILD CHAR(1) NOT NULL 
, BUILDNOTIFCOMMENTPATTERN VARCHAR(250) 
, DOCHANGETICKETSTATUSONBUILD CHAR(1) 
, CHANGETICKETSTATUSONBUILDTO VARCHAR(50) 
, NOTIFYTICKETSONDEPLOY CHAR(1) NOT NULL 
, DEPLOYNOTIFCOMMENTPATTERN VARCHAR(250) 
, DOCHANGETICKETSTATUSONDEPLOY CHAR(1) 
, CHANGETICKETSTATUSONDEPLOYTO VARCHAR(50) 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) NOT NULL 
, DONTDEPLOYUNTIL VARCHAR(50) 
, CONSTRAINT PK_PROJECT_ENV_ITS_CONFIG PRIMARY KEY 
  (
    PROJECT_ENV_ITS_CONFIG_ID 
  )
  
);

CREATE TABLE FD.PROJECT_HELM_CONFIG 
(
  PROJECT_ID NUMERIC(10, 0) NOT NULL 
, CHART_PATH VARCHAR(256) NOT NULL 
, RELEASE_NAME VARCHAR(256) 
, CONSTRAINT PK_PROJECT_HELM_CONFIG PRIMARY KEY 
  (
    PROJECT_ID 
  )
   
);

CREATE TABLE FD.PROJECT_HELM_VALUE 
(
  PROJECT_HELM_VALUE_ID NUMERIC(10, 0) NOT NULL 
, PROJECT_ID NUMERIC(10, 0) NOT NULL 
, KEY_NAME VARCHAR(100) NOT NULL 
, VALUE_EXPR VARCHAR(100) 
, CONSTRAINT PK_PROJECT_HELM_VALUE PRIMARY KEY 
  (
    PROJECT_HELM_VALUE_ID 
  )
  
);

CREATE TABLE FD.PROJECT_ITS_CONFIG 
(
  PROJECT_ID NUMERIC(20, 0) NOT NULL 
, ISSUETRACKINGSYSTEMID NUMERIC(10, 0) NOT NULL 
, TICKETNUMBERPATTERN VARCHAR(50) 
, NOTIFYTICKETSONBUILD CHAR(1) NOT NULL 
, BUILDNOTIFCOMMENTPATTERN VARCHAR(250) 
, DOCHANGETICKETSTATUSONBUILD CHAR(1) 
, CHANGETICKETSTATUSONBUILDTO VARCHAR(50) 
, NOTIFYTICKETSONDEPLOY CHAR(1) NOT NULL 
, DEPLOYNOTIFCOMMENTPATTERN VARCHAR(250) 
, DOCHANGETICKETSTATUSONDEPLOY CHAR(1) 
, CHANGETICKETSTATUSONDEPLOYTO VARCHAR(50) 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) NOT NULL 
, IS_OVERRIDDEN CHAR(1) NOT NULL 
, INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, CONSTRAINT PK_PROJECT_ITS_CONFIG PRIMARY KEY 
  (
    PROJECT_ID 
  )
  
);

CREATE TABLE FD.PROJECT_OBJECT 
(
  PROJECT_OBJECT_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, OBJECT_TYPE_ID NUMERIC(20) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(5) NOT NULL 
, OBJECT_PATH VARCHAR(4000) NOT NULL
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROJECT_OBJECT_PK PRIMARY KEY 
  (
    PROJECT_OBJECT_ID 
  )
  
);

CREATE TABLE FD.PROJECT_OBJECT_ATTRIBUTE 
(
  PROJECT_OBJECT_ATTR_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_OBJECT_ID NUMERIC(20, 0) NOT NULL 
, OBJECT_ATTR_DEF_ID NUMERIC(20) NOT NULL 
, IS_EXPRESSION CHAR(1) NOT NULL 
, IS_ENCRYPTED CHAR(1) NOT NULL 
, IS_MODIFIED CHAR(1) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROJECT_OBJECT_ATTRIBUTE_PK PRIMARY KEY 
  (
    PROJECT_OBJECT_ATTR_ID 
  )  
);

CREATE TABLE FD.PROJECT_OBJECT_ATTRIBUTE_VAL 
(
  PROJECT_OBJECT_ATTR_VAL_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_OBJECT_ATTR_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, PROJECT_OBJECT_ATTR_VAL VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROJECT_OBJECT_ATTR_VAL_PK PRIMARY KEY 
  (
    PROJECT_OBJECT_ATTR_VAL_ID 
  )
  
);

CREATE TABLE FD.PROJECT_OBJECT_REVISION 
(
  PROJECT_OBJECT_ID NUMERIC(20, 0) NOT NULL 
, SCM_REVISION VARCHAR(100) NOT NULL 
, INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, COMMIT_USER VARCHAR(128) NOT NULL 
, COMMIT_TIME TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, COMMIT_MESSAGE VARCHAR(4000) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROJECT_OBJECT_REVISION_PK PRIMARY KEY 
  (
    PROJECT_OBJECT_ID 
  , SCM_REVISION 
  , INSTANCE_ID 
  ) 
);

CREATE TABLE FD.PROJECT_PACKAGE 
(
  PROJECT_PACKAGE_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, PACKAGE_NAME VARCHAR(255) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROJECT_PACKAGE_PK PRIMARY KEY 
  (
    PROJECT_PACKAGE_ID 
  ) 
);

CREATE TABLE FD.PROJECT_PACKAGE_FILE 
(
  PROJECT_PACKAGE_FILE_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_PACKAGE_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_OBJECT_ID NUMERIC(20) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROJECT_PACKAGE_FILE_PK PRIMARY KEY 
  (
    PROJECT_PACKAGE_FILE_ID 
  ) 
);

CREATE TABLE FD.PROJECT_STREAM 
(
  PROJECT_STREAM_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, STREAM_NAME VARCHAR(255) NOT NULL 
, MAIN_STREAM_FLAG CHAR(1) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, IS_ACTIVE CHAR(1) NOT NULL 
, VERSION_SYNTAX VARCHAR(4000) NOT NULL 
, ATTRIBUTE1 VARCHAR(4000) 
, ATTRIBUTE2 VARCHAR(4000) 
, ATTRIBUTE3 VARCHAR(4000) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, IMAGE_NAME VARCHAR(100) 
, IS_IMAGE_BUILD VARCHAR(1) 
, IS_IMAGE_PUSH VARCHAR(1) 
, CONSTRAINT PROJECT_STREAM_PK PRIMARY KEY 
  (
    PROJECT_STREAM_ID 
  )
  
);

CREATE TABLE FD.PROJECT_STREAM_TEST_DEF 
(
  PROJECT_STREAM_TEST_DEF_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_STREAM_ID NUMERIC(20, 0) NOT NULL 
, TEST_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, WORKFLOW_ID NUMERIC(20, 0) 
, CONSTRAINT PROJECT_STREAM_TEST_DEF_PK PRIMARY KEY 
  (
    PROJECT_STREAM_TEST_DEF_ID 
  )
  
);

CREATE TABLE FD.PROJECT_TEST_TYPE 
(
  PROJECT_TEST_TYPE_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, TEST_TYPE_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, CONSTRAINT PROJECT_TEST_TYPE_PK PRIMARY KEY 
  (
    PROJECT_TEST_TYPE_ID 
  )
  
);

CREATE TABLE FD.PROJECT_TRIGGER 
(
  PROJECT_TRIGGER_ID NUMERIC(20, 0) NOT NULL 
, TRIGGER_TYPE VARCHAR(50) NOT NULL 
, INTERVAL_MINS NUMERIC(8, 0) 
, CRON_EXPRESSION VARCHAR(255) 
, WORKFLOW_TYPE VARCHAR(50) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_STREAM_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, INSTANCE_ID NUMERIC(20, 0) 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, REL_DEFINITION_ID NUMERIC(20, 0) 
, PACKAGE_NAME VARCHAR(255) 
, ALL_FILES_REQUESTED CHAR(1)
, CONSTRAINT PROJECT_TRIGGER_PK PRIMARY KEY 
  (
    PROJECT_TRIGGER_ID 
  )
  
);

CREATE TABLE FD.PROJECT_TRIGGER_CONFIG 
(
  PROJECT_TRIGGER_CONFIG_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_TRIGGER_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, PROJECT_TRIGGER_CONFIG VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROJECT_TRIGGER_CONFIG_PK PRIMARY KEY 
  (
    PROJECT_TRIGGER_CONFIG_ID 
  )
  
);

CREATE TABLE FD.PROJECT_VERSION 
(
  PROJECT_VERSION_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_VERSION_NAME VARCHAR(255) NOT NULL 
, PACKAGE_NAME VARCHAR(255) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, PROJECT_STREAM_ID NUMERIC(20, 0) 
, BUILD_SUCCESS_FLAG CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, ARTIFACTS_PURGED VARCHAR(1) 
, SCM_REVISION VARCHAR(255) 
, ALL_FILES_REQUESTED CHAR(1) NOT NULL 
, FLEX_FIELD_1 VARCHAR(250) 
, FLEX_FIELD_2 VARCHAR(250) 
, FLEX_FIELD_3 VARCHAR(250) 
, FLEX_FIELD_4 VARCHAR(250) 
, FLEX_FIELD_5 VARCHAR(250) 
, FLEX_FIELD_6 VARCHAR(250) 
, FLEX_FIELD_7 VARCHAR(250) 
, FLEX_FIELD_8 VARCHAR(250) 
, FLEX_FIELD_9 VARCHAR(250) 
, FLEX_FIELD_10 VARCHAR(250) 
, CONSTRAINT PROJECT_VERSION_PK PRIMARY KEY 
  (
    PROJECT_VERSION_ID 
  )
  
);

CREATE TABLE FD.PROJECT_VERSION_DATA 
(
  PROJECT_VERSION_DATA_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_VERSION_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_VERSION_DATA_KEY VARCHAR(255) NOT NULL 
, PASS_IN_CONTEXT CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROJECT_VERSION_DATA_PK PRIMARY KEY 
  (
    PROJECT_VERSION_DATA_ID 
  )
  
);

CREATE TABLE FD.PROJECT_VERSION_DATA_VAL 
(
  PROJECT_VERSION_DATA_VAL_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_VERSION_DATA_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, PROJECT_VERSION_DATA_VAL VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROJECT_VERSION_DATA_VAL_PK PRIMARY KEY 
  (
    PROJECT_VERSION_DATA_VAL_ID 
  )
  
);

CREATE TABLE FD.PROJECT_VERSION_ITS_ISSUE 
(
  PROJECT_VERSION_ITS_ISSUE_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_VERSION_ID NUMERIC(20, 0) NOT NULL 
, ISSUE_NUMBER VARCHAR(50) NOT NULL 
, ISSUE_DESCRIPTION VARCHAR(200) 
, ISSUE_TYPE VARCHAR(20) 
, CONSTRAINT PROJECT_VERSION_ITS_ISSUE_PK PRIMARY KEY 
  (
    PROJECT_VERSION_ITS_ISSUE_ID 
  )

);

CREATE TABLE FD.PROJECT_WF_CURRENT_STATUS 
(
  INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, WORKFLOW_EXECUTION_ID NUMERIC(20, 0) NOT NULL 
, LAST_SUCC_WF_EX_ID NUMERIC(20, 0) NOT NULL 
, FOLDER_REQUEST_ID NUMERIC(20, 0) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROJECT_WF_CURRENT_STATUS_PK PRIMARY KEY 
  (
    INSTANCE_ID 
  , ENVIRONMENT_ID 
  , PROJECT_ID 
  )
  
);

CREATE TABLE FD.PROJECT_WORKFLOW 
(
  PROJECT_WORKFLOW_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_WORKFLOW_TYPE VARCHAR(50) NOT NULL 
, WORKFLOW_ID NUMERIC(20, 0) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROJECT_WORKFLOW_PK PRIMARY KEY 
  (
    PROJECT_WORKFLOW_ID 
  )
  
);

CREATE TABLE FD.PROJECT_WORKFLOW_INSTANCE 
(
  PROJECT_WORKFLOW_INST_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_WORKFLOW_ID NUMERIC(20, 0) NOT NULL 
, INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROJECT_WORKFLOW_INST_PK PRIMARY KEY 
  (
    PROJECT_WORKFLOW_INST_ID 
  )
  
);

CREATE TABLE FD.PROPERTY_KEY 
(
  PROPERTY_KEY_ID NUMERIC(20, 0) NOT NULL 
, PROPERTY_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) 
, INSTANCE_ID NUMERIC(20, 0) 
, PROJECT_ID NUMERIC(20, 0) 
, IS_ACTIVE CHAR(1) NOT NULL 
, IS_ENCRYPTED CHAR(1) NOT NULL 
, IS_EXPRESSION CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROPERTY_KEY_PK PRIMARY KEY 
  (
    PROPERTY_KEY_ID 
  )
  
);

CREATE TABLE FD.PROPERTY_KEY_DEFINITION 
(
  PROPERTY_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, PROPERTY_KEY_NAME VARCHAR(255) NOT NULL 
, DISPLAY_NAME VARCHAR(255) 
, PROPERTY_SCOPE VARCHAR(50) NOT NULL 
, DESCRIPTION VARCHAR(500) 
, PROPERTY_KEY_DATATYPE VARCHAR(50) NOT NULL 
, PROPERTY_KEY_SUB_DATATYPE VARCHAR(50) 
, IS_REQUIRED CHAR(1) NOT NULL 
, IS_ENCRYPTED CHAR(1) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, MIN_VALUE NUMERIC(20, 0) 
, MAX_VALUE NUMERIC(20, 0) 
, LIST_DATA VARCHAR(4000) 
, IS_MULTISELECT CHAR(1) NOT NULL 
, DISPLAY_ROWS NUMERIC(8, 0) 
, DISPLAY_COLUMNS NUMERIC(8, 0) 
, VALIDATOR1 VARCHAR(1000) 
, VALIDATOR2 VARCHAR(1000) 
, VALIDATOR3 VARCHAR(1000) 
, VALIDATOR4 VARCHAR(1000) 
, VALIDATOR5 VARCHAR(1000) 
, IS_CUSTOM CHAR(1) NOT NULL 
, DEFAULT_VALUE VARCHAR(4000) 
, IS_DEFAULT_EXPRESSION CHAR(1) NOT NULL 
, IS_ALLOWS_VARIANT CHAR(1) NOT NULL 
, LENGTH NUMERIC(20) 
, SORT_NUMBER NUMERIC(8, 0) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROPERTY_KEY_DEFINITION_PK PRIMARY KEY 
  (
    PROPERTY_DEFINITION_ID 
  )
  
);

CREATE TABLE FD.PROPERTY_SET 
(
  PROPERTY_SET_ID NUMERIC(20, 0) NOT NULL 
, PROPERTY_SET_NAME VARCHAR(255) NOT NULL 
, OWNER_TYPE VARCHAR(50) NOT NULL 
, OWNER_ID NUMERIC(20, 0) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROPERTY_SET_PK PRIMARY KEY 
  (
    PROPERTY_SET_ID 
  )
  
);

CREATE TABLE FD.PROPERTY_SET_KEY_DEF 
(
  PROPERTY_SET_ID NUMERIC(20, 0) NOT NULL 
, PROPERTY_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROPERTY_SET_KEY_DEF_PK PRIMARY KEY 
  (
    PROPERTY_SET_ID 
  , PROPERTY_DEFINITION_ID 
  )
  
);

CREATE TABLE FD.PROPERTY_VALUE 
(
  PROPERTY_VALUE_ID NUMERIC(20, 0) NOT NULL 
, PROPERTY_KEY_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, PROPERTY_VALUE VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT PROPERTY_VALUE_PK PRIMARY KEY 
  (
    PROPERTY_VALUE_ID 
  )
  
);

CREATE TABLE FD.PURGE_ARTIFACT_KEY 
(
  PROJECT_ID NUMERIC(20, 0) 
, ENVIRONMENT_ID NUMERIC(20, 0) 
, INSTANCE_ID NUMERIC(20, 0) 
, PROJECT_VERSION_ID NUMERIC(20, 0) 
, WORKFLOW_REQUEST_ID NUMERIC(20, 0) NOT NULL 
, AGE NUMERIC(10, 0) 
, WORKFLOW_EXECUTION_ID NUMERIC(20, 0) 
, PURGE_ARTIFACTS_ONLY VARCHAR(1) 
, PROJECT_STREAM_ID NUMERIC(20, 0) 
);

CREATE TABLE FD.PURGE_ERROR 
(
  PURGE_ERROR_ID NUMERIC(20, 0)
, PROJECT_VERSION_ID NUMERIC(20, 0) 
, FOLDER_VERSION_ID NUMERIC(20) 
, PIPELINE_EXEC_ID NUMERIC(20) 
, ACTION VARCHAR(100) NOT NULL 
, ERROR_MESSAGE VARCHAR(500) NOT NULL 
, STACK_TRACE VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CONSTRAINT PURGE_ERROR_PK PRIMARY KEY 
  (
    PURGE_ERROR_ID 
  )
);

CREATE TABLE FD.PURGE_FOLDER_VERSION_KEY 
(
  FOLDER_ID NUMERIC(20, 0) 
, FOLDER_VERSION_ID NUMERIC(20, 0) 
, FOLDER_REQUEST_ID NUMERIC(20, 0) 
, ENVIRONMENT_ID NUMERIC(20, 0) 
, PROJECT_VERSION_ID NUMERIC(20, 0) 
, WORKFLOW_REQUEST_ID NUMERIC(20, 0) 
, AGE NUMERIC(10, 0) 
, WORKFLOW_EXECUTION_ID NUMERIC(20, 0) 
, PROJECT_STREAM_ID NUMERIC(20, 0)
, IS_IN_SNAPSHOT CHAR(1) NOT NULL
);

CREATE TABLE FD.PURGE_PIPELINE_RELEASE_KEY 
(
  PIPELINE_VERSION_ID NUMERIC(20, 0) 
, REL_SNAPSHOT_ID NUMERIC(20, 0) 
, PIPELINE_EXEC_ID NUMERIC(20, 0) 
, REL_SNAPSHOT_VERSION_ID NUMERIC(20) 
, PROJECT_VERSION_ID NUMERIC(20) 
, PROJECT_STREAM_ID NUMERIC(20, 0) 
);

CREATE TABLE FD.PURGE_PKG_VERSION_KEY 
(
  WORKFLOW_EXECUTION_ID NUMERIC(20, 0) NOT NULL 
, EXECUTION_STATUS VARCHAR(50) NOT NULL 
, PLUGIN_EXECUTION_ID NUMERIC(20, 0) NOT NULL 
, PLUGIN_EXECUTION_STATUS VARCHAR(50) NOT NULL 
, PACKAGE_OBJECT_EXECUTION_ID NUMERIC(20, 0) NOT NULL 
, POE_EXECUTION_STATUS VARCHAR(50) NOT NULL 
, PROJECT_OBJECT_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_VERSION_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(5, 0) NOT NULL 
, HASH VARCHAR(100) 
, PACKAGE_OBJECT_ID NUMERIC(20, 0) 
, PROJECT_STREAM_ID NUMERIC(20, 0) 
);

CREATE TABLE FD.PURGE_PROJ_VERSION_KEY 
(
  PROJECT_ID NUMERIC(20, 0) 
, ENVIRONMENT_ID NUMERIC(20, 0) 
, INSTANCE_ID NUMERIC(20, 0) 
, PROJECT_VERSION_ID NUMERIC(20, 0) 
, WORKFLOW_REQUEST_ID NUMERIC(20, 0) NOT NULL 
, AGE NUMERIC(10, 0) 
, WORKFLOW_EXECUTION_ID NUMERIC(20, 0) 
, PURGE_ARTIFACTS_ONLY VARCHAR(1) 
, PROJECT_STREAM_ID NUMERIC(20, 0)
, IS_STAND_ALONE CHAR(1) NOT NULL
, IS_IN_SNAPSHOT CHAR(1) NOT NULL
);

CREATE TABLE FD.RELEASE_CMS_CONFIG 
(
  REL_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, CMS_CONFIG_ID NUMERIC(10, 0) NOT NULL 
, INSTANCE_CMS_CONFIG_ID NUMERIC(10, 0) NOT NULL 
, ISOVERRIDDEN CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) NOT NULL 
, CONSTRAINT PK_RELEASE_CMS_CONFIG PRIMARY KEY 
  (
    REL_DEFINITION_ID 
  )
  
);

CREATE TABLE FD.REL_BUILD_MONITOR 
(
  REL_BUILD_MONITOR_ID NUMERIC(20, 0) NOT NULL 
, REL_DEFINITION_ID NUMERIC(20) NOT NULL 
, PROJECT_ID NUMERIC(20) NOT NULL 
, PROJECT_STREAM_ID NUMERIC(20) NOT NULL 
, PROJECT_VERSION_ID NUMERIC(20) NOT NULL 
, PACKAGE_NAME VARCHAR(255) 
, REL_SNAPSHOT_ID NUMERIC(20) 
, WORKFLOW_REQUEST_ID NUMERIC(20) NOT NULL 
, REQUEST_ALL_FILES CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT REL_BUILD_MONITOR_PK PRIMARY KEY 
  (
    REL_BUILD_MONITOR_ID 
  )
  
);

CREATE TABLE FD.REL_DEFINITION 
(
  REL_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, REL_NAME VARCHAR(255) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, CRON_EXPRESSION VARCHAR(255)
, START_DATE DATE 
, END_DATE DATE 
, PIPELINE_DEFINITION_ID NUMERIC(20) 
, REL_STATUS VARCHAR(50) NOT NULL 
, TO_REL_DEFINITION_ID NUMERIC(20) 
, COMPOSITE_RELEASE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, RESTRICT_FLAG CHAR(1) NOT NULL 
, REL_DEFINITION_HASH VARCHAR(100) 
, SECURITY_OVERRIDDEN CHAR(1) DEFAULT 'N' 
, ROLES_MEMBERS_OVERRIDDEN CHAR(1) DEFAULT 'N' 
, CONSTRAINT REL_DEFINITION_PK PRIMARY KEY 
  (
    REL_DEFINITION_ID 
  )
  
);

CREATE TABLE FD.REL_METADATA_VALUE 
(
  REL_METADATA_VALUE_ID NUMERIC(20, 0) NOT NULL 
, REL_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, PIPELINE_METADATA_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, IS_ENCRYPTED CHAR(1) NOT NULL 
, REL_METADATA_VALUE VARCHAR(4000) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT REL_METADATA_VALUE_PK PRIMARY KEY 
  (
    REL_METADATA_VALUE_ID 
  )
  
);

CREATE TABLE FD.REL_PROJECT 
(
  REL_PROJECT_ID NUMERIC(20, 0) NOT NULL 
, REL_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, PACKAGE_NAME VARCHAR(255) 
, GROUP_NAME VARCHAR(4000) 
, PROJECT_STREAM_ID NUMERIC(20) NOT NULL 
, DEPLOY_PRIORITY NUMERIC(8) 
, REQUEST_ALL_FILES CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, BUILD_ENVIRONMENT_ID NUMERIC(20, 0)
, CONSTRAINT REL_PROJECT_PK PRIMARY KEY 
  (
    REL_PROJECT_ID 
  )
  
);

CREATE TABLE FD.REL_SNAPSHOT 
(
  REL_SNAPSHOT_ID NUMERIC(20, 0) NOT NULL 
, REL_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, REL_SNAPSHOT VARCHAR(100) NOT NULL 
, REL_SNAPSHOT_STATUS VARCHAR(50) NOT NULL 
, REL_DEFINITION_HASH VARCHAR(100) 
, REL_SNAPSHOT_HASH VARCHAR(100) 
, DUPLICATE_FILES_FLAG CHAR(1)
, SNAPSHOT_VERSION_COUNT NUMERIC(8, 0) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT REL_SNAPSHOT_PK PRIMARY KEY 
  (
    REL_SNAPSHOT_ID 
  )
  
);

CREATE TABLE FD.REL_SNAPSHOT_VERSION 
(
  REL_SNAPSHOT_VERSION_ID NUMERIC(20, 0) NOT NULL 
, REL_SNAPSHOT_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_STREAM_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_VERSION_ID NUMERIC(20, 0) 
, PACKAGE_NAME VARCHAR(255) 
, REQUEST_ALL_FILES CHAR(1) NOT NULL 
, REL_SNAPSHOT_VERSION_STATUS VARCHAR(50) NOT NULL 
, ERROR_MESSAGE VARCHAR(500) 
, DUPLICATE_FILES_FLAG CHAR(1) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT REL_SNAPSHOT_VERSION_PK PRIMARY KEY 
  (
    REL_SNAPSHOT_VERSION_ID 
  )
  
);

CREATE TABLE FD.REL_SNAPSHOT_VERSION_REQ 
(
  REL_SNAPSHOT_VERSION_REQ_ID NUMERIC(20, 0) NOT NULL 
, REL_SNAPSHOT_VERSION_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, FORCE_BUILD CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT REL_SNAPSHOT_VERSION_REQ_PK PRIMARY KEY 
  (
    REL_SNAPSHOT_VERSION_REQ_ID 
  )
  
);

CREATE TABLE FD.RESOURCE_TYPE 
(
  RESOURCE_TYPE_ID NUMERIC(20, 0) NOT NULL 
, RESOURCE_TYPE_NAME VARCHAR(50) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, IS_ACTIVE CHAR(1) NOT NULL 
, OWNER_TYPE VARCHAR(50) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT RESOURCE_TYPE_PK PRIMARY KEY 
  (
    RESOURCE_TYPE_ID 
  )
  
);

CREATE TABLE FD.SCHEDULED_TASK 
(
  TASK_ID NUMERIC(20, 0) NOT NULL 
, WORKFLOW_REQUEST_ID NUMERIC(20, 0) 
, FOLDER_REQUEST_ID NUMERIC(20, 0) 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, WINDOW_ID NUMERIC(20, 0) 
, SCHEDULED_TIME TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, OVERRIDE_FLAG CHAR(1) NOT NULL 
, OVERRIDE_ON TIMESTAMP WITH TIME ZONE null
, OVERRIDE_BY VARCHAR(128) 
, TASK_STATUS VARCHAR(50) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, PIPELINE_STAGE_GATE_EXEC_ID NUMERIC(20, 0) 
, PIPELINE_STAGE_STEP_EXEC_ID NUMERIC(20, 0) 
, PIPELINE_STAGE_EXEC_ID NUMERIC(20,0)
, PIPELINE_STAGE_GATE_ID NUMERIC(20, 0) 
, PIPELINE_STAGE_STEP_ID NUMERIC(20, 0) 
, STAGE_EXECUTION_STATUS VARCHAR(50) 
, GATE_EXECUTION_STATUS VARCHAR(50) 
, STEP_EXECUTION_STATUS VARCHAR(50) 
, REL_DEFINITION_ID NUMERIC(20,0)
, REL_SNAPSHOT_ID NUMERIC(20, 0)
, TASK_NOTES VARCHAR(255) 
, CONSTRAINT SCHEDULED_TASKS_PK PRIMARY KEY 
  (
    TASK_ID 
  )
  
);

CREATE TABLE FD.TEMPLATE 
(
  TEMPLATE_ID NUMERIC(20, 0) NOT NULL 
, TEMPLATE_NAME VARCHAR(255) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, READ_ONLY CHAR(1) NOT NULL 
, CONSTRAINT TEMPLATE_PK PRIMARY KEY 
  (
    TEMPLATE_ID 
  )
  
);

CREATE TABLE FD.TEMPLATE_DATA 
(
  TEMPLATE_DATA_ID NUMERIC(20, 0) NOT NULL 
, TEMPLATE_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, TEMPLATE_DATA VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT TEMPLATE_DATA_PK PRIMARY KEY 
  (
    TEMPLATE_DATA_ID 
  )
  
);

CREATE TABLE FD.TEMPLATE_INPUT 
(
  TEMPLATE_INPUT_ID NUMERIC(20, 0) NOT NULL 
, TEMPLATE_ID NUMERIC(20, 0) NOT NULL 
, INPUT_NAME VARCHAR(255) NOT NULL 
, INPUT_TYPE VARCHAR(50) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT TEMPLATE_INPUT_PK PRIMARY KEY 
  (
    TEMPLATE_INPUT_ID 
  )
  
);

CREATE TABLE FD.TESTING_TOOL 
(
  TESTING_TOOL_ID NUMERIC(20, 0) NOT NULL 
, TESTING_TOOL_NAME VARCHAR(40) NOT NULL 
, CONSTRAINT TESTING_TOOL_PK PRIMARY KEY 
  (
    TESTING_TOOL_ID 
  )
  
);

CREATE TABLE FD.TEST_DEFINITION 
(
  TEST_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, TEST_DEFINITION_NAME VARCHAR(40) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, WORKFLOW_ID NUMERIC(20, 0) NOT NULL 
, TESTING_TOOL_ID NUMERIC(20, 0) NOT NULL 
, IS_ACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, TEST_SET_ID NUMERIC(20, 0) NOT NULL 
, INSTANCE_ID NUMERIC(20, 0) 
, CONSTRAINT TEST_DEFINITION_PK PRIMARY KEY 
  (
    TEST_DEFINITION_ID 
  )
  
);

CREATE TABLE FD.TEST_DEFINITION_INPUT 
(
  TEST_DEFINITION_INPUT_ID NUMERIC(20, 0) NOT NULL 
, TEST_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, INPUT_KEY VARCHAR(40) NOT NULL 
, INPUT_VALUE VARCHAR(4000) 
, PROJECT_STREAM_TEST_DEF_ID NUMERIC(20, 0) 
, CONSTRAINT TEST_DEFINITION_INPUT_PK PRIMARY KEY 
  (
    TEST_DEFINITION_INPUT_ID 
  )
  
);

CREATE TABLE FD.TEST_DEFINITION_QUALIFIER 
(
  TEST_DEFINITION_QUALIFIER_ID NUMERIC(20, 0) NOT NULL 
, TEST_QUALIFIER_ID NUMERIC(20, 0) NOT NULL 
, TEST_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, ARGUMENT_VALUE VARCHAR(20) 
, GROOVY_EXPRESSION VARCHAR(20) 
, CONSTRAINT TEST_DEFINITION_QUALIFIER_PK PRIMARY KEY 
  (
    TEST_DEFINITION_QUALIFIER_ID 
  )
  
);

CREATE TABLE FD.TEST_DEFINITION_RUN 
(
  TEST_DEFINITION_RUN_ID NUMERIC(20, 0) NOT NULL 
, TEST_SET_RUN_ID NUMERIC(20, 0) NOT NULL 
, TEST_DEFINITION_ID NUMERIC(20, 0) NOT NULL 
, WORKFLOW_EXECUTION_ID NUMERIC(20, 0) NOT NULL 
, STATUS VARCHAR(50) NOT NULL 
, START_TIME TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, END_TIME TIMESTAMP(6) WITH TIME ZONE  null
, ENDPOINT_ID NUMERIC(20, 0) NOT NULL 
, CONSTRAINT TEST_DEFINITION_RUN_PK PRIMARY KEY 
  (
    TEST_DEFINITION_RUN_ID 
  )
  
);

CREATE TABLE FD.TEST_DEF_QUALIFIER_VALUE 
(
  TEST_DEF_QUALIFIER_VALUE_ID NUMERIC(20, 0) NOT NULL 
, TEST_DEFINITION_RUN_ID NUMERIC(20, 0) NOT NULL 
, TEST_QUALIFIER_ID NUMERIC(20, 0) NOT NULL 
, QUALIFIER_VALUE CHAR(1) NOT NULL 
, CONSTRAINT TEST_DEF_QUALIFIER_VALUE_PK PRIMARY KEY 
  (
    TEST_DEF_QUALIFIER_VALUE_ID 
  )
  
);

CREATE TABLE FD.TEST_QUALIFIER 
(
  TEST_QUALIFIER_ID NUMERIC(20, 0) NOT NULL 
, LABEL VARCHAR(100) NOT NULL 
, ARGUMENT_LABEL VARCHAR(40) 
, TEST_DEF_GROOVY_EXPRESSION VARCHAR(2000) 
, TEST_SET_GROOVY_EXPRESSION VARCHAR(2000) 
, CONSTRAINT TEST_QUALIFIER_PK PRIMARY KEY 
  (
    TEST_QUALIFIER_ID 
  )
  
);

CREATE TABLE FD.TEST_RESULT 
(
  TEST_RESULT_ID NUMERIC(20, 0) NOT NULL 
, TEST_CASE_NAME VARCHAR(100) NOT NULL 
, DURATION NUMERIC 
, STATUS VARCHAR(50) NOT NULL 
, MESSAGE VARCHAR(2048) 
, OUTPUT_DATA VARCHAR(4000)  
, MINRESPTIME NUMERIC 
, MAXRESPTIME NUMERIC 
, AVGRESPTIME NUMERIC 
, TEST_DEFINITION_RUN_ID NUMERIC(20, 0) NOT NULL 
, EXECUTION_COUNT NUMERIC(20, 0) NOT NULL 
, CONSTRAINT TEST_RESULT_PK PRIMARY KEY 
  (
    TEST_RESULT_ID 
  )
  
);

CREATE TABLE FD.TEST_RUN 
(
  TEST_RUN_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_STREAM_ID NUMERIC(20, 0) NOT NULL 
, TEST_TYPE_ID NUMERIC(20, 0) 
, TEST_SET_ID NUMERIC(20, 0) 
, TEST_DEFINITION_ID NUMERIC(20, 0) 
, WORKFLOW_EXECUTION_ID NUMERIC(20, 0) NOT NULL 
, STATUS VARCHAR(50) NOT NULL 
, START_TIME TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, END_TIME TIMESTAMP(6) WITH TIME ZONE null
, CONSTRAINT TEST_RUN_PK PRIMARY KEY 
  (
    TEST_RUN_ID 
  )
  
);

CREATE TABLE FD.TEST_SET 
(
  TEST_SET_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, TEST_TYPE_ID NUMERIC(20, 0) NOT NULL 
, TEST_SET_NAME VARCHAR(40) NOT NULL 
, ISACTIVE CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT TEST_SET_PK PRIMARY KEY 
  (
    TEST_SET_ID 
  )
  
);

CREATE TABLE FD.TEST_SET_QUALIFIER 
(
  TEST_SET_QUALIFIER_ID NUMERIC(20, 0) NOT NULL 
, TEST_QUALIFIER_ID NUMERIC(20, 0) NOT NULL 
, TEST_SET_ID NUMERIC(20, 0) NOT NULL 
, ARGUMENT_VALUE VARCHAR(20) 
, GROOVY_EXPRESSION VARCHAR(20) 
, CONSTRAINT TEST_SET_QUALIFIER_PK PRIMARY KEY 
  (
    TEST_SET_QUALIFIER_ID 
  )
  
);

CREATE TABLE FD.TEST_SET_QUALIFIER_VALUE 
(
  TEST_SET_QUALIFIER_VALUE_ID NUMERIC(20, 0) NOT NULL 
, TEST_SET_RUN_ID NUMERIC(20, 0) NOT NULL 
, TEST_QUALIFIER_ID NUMERIC(20, 0) NOT NULL 
, QUALIFIER_VALUE CHAR(1) NOT NULL 
, CONSTRAINT TEST_SET_QUALIFIER_VALUE_PK PRIMARY KEY 
  (
    TEST_SET_QUALIFIER_VALUE_ID 
  )
  
);

CREATE TABLE FD.TEST_SET_RUN 
(
  TEST_SET_RUN_ID NUMERIC(20, 0) NOT NULL 
, TEST_SET_ID NUMERIC(20, 0) NOT NULL 
, STATUS VARCHAR(50) NOT NULL 
, START_TIME TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, END_TIME TIMESTAMP(6) WITH TIME ZONE null
, TEST_RUN_ID NUMERIC(20, 0) NOT NULL 
, CONSTRAINT TEST_SET_RUN_PK PRIMARY KEY 
  (
    TEST_SET_RUN_ID 
  )
  
);

CREATE TABLE FD.TEST_TYPE 
(
  TEST_TYPE_ID NUMERIC(20, 0) NOT NULL 
, TEST_TYPE_NAME VARCHAR(20) NOT NULL 
, CONSTRAINT TEST_TYPE_PK PRIMARY KEY 
  (
    TEST_TYPE_ID 
  )
  
);

CREATE TABLE FD.WORKFLOW 
(
  WORKFLOW_ID NUMERIC(20, 0) NOT NULL 
, WORKFLOW_NAME VARCHAR(255) NOT NULL 
, WORKFLOW_TYPE VARCHAR(50) NOT NULL 
, WORKFLOW_GROUP VARCHAR(50) NOT NULL 
, WORKFLOW_SUBGROUP VARCHAR(50) NOT NULL 
, DESCRIPTION VARCHAR(255) 
, IS_ACTIVE CHAR(1) NOT NULL 
, READ_ONLY CHAR(1) NOT NULL 
, INTERNAL CHAR(1) NOT NULL 
, ACTIVE_WORKFLOW_VERSION_ID NUMERIC(20, 0) 
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT WORKFLOW_PK PRIMARY KEY 
  (
    WORKFLOW_ID 
  )
  
);

CREATE TABLE FD.WORKFLOW_EXECUTION 
(
  WORKFLOW_EXECUTION_ID NUMERIC(20, 0) NOT NULL 
, PARENT_WORKFLOW_EXECUTION_ID NUMERIC(20, 0) 
, WORKFLOW_REQUEST_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_VERSION_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_WORKFLOW_ID NUMERIC(20, 0) NOT NULL 
, WORKFLOW_VERSION_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, EXECUTION_STATUS VARCHAR(50) NOT NULL 
, START_TIME TIMESTAMP(6) WITH TIME ZONE null default null
, END_TIME TIMESTAMP(6) WITH TIME ZONE null default null
, CREATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP(6) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP(6)
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, DOCKER_IMAGE_NAME VARCHAR(100) 
, CONSTRAINT WORKFLOW_EXECUTION_PK PRIMARY KEY 
  (
    WORKFLOW_EXECUTION_ID 
  )
  
);

CREATE TABLE FD.WORKFLOW_EXECUTION_DATA 
(
  WORKFLOW_EXECUTION_DATA_ID NUMERIC(20, 0) NOT NULL 
, WORKFLOW_EXECUTION_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, WORKFLOW_EXECUTION_DATA VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT WORKFLOW_EXEC_DATA_PK PRIMARY KEY 
  (
    WORKFLOW_EXECUTION_DATA_ID 
  )
  
);

CREATE TABLE FD.WORKFLOW_REQUEST 
(
  WORKFLOW_REQUEST_ID NUMERIC(20, 0) NOT NULL 
, FOLDER_REQUEST_ID NUMERIC(20, 0) 
, FOLDER_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_VERSION_ID NUMERIC(20, 0) 
, PROJECT_WORKFLOW_ID NUMERIC(20, 0) NOT NULL 
, ENVIRONMENT_ID NUMERIC(20, 0) NOT NULL 
, FOLDER_VERSION_ID NUMERIC(20, 0) 
, FORCE_DEPLOY CHAR(1) NOT NULL 
, PRIORITY NUMERIC(3) 
, REQUESTED_START_TIME TIMESTAMP WITH TIME ZONE 
, WORKFLOW_VERSION_OVERRIDE NUMERIC(20, 0) 
, IS_EXCEPTION CHAR(1) NOT NULL 
, REQUEST_STATUS VARCHAR(50) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, PROJECT_ID NUMERIC(20, 0) NOT NULL 
, PROJECT_STREAM_ID NUMERIC(20, 0) 
, TRIGGER_TYPE VARCHAR(50) 
, FLEX_FIELD_1 VARCHAR(250) 
, FLEX_FIELD_2 VARCHAR(250) 
, FLEX_FIELD_3 VARCHAR(250) 
, FLEX_FIELD_4 VARCHAR(250) 
, FLEX_FIELD_5 VARCHAR(250) 
, FLEX_FIELD_6 VARCHAR(250) 
, FLEX_FIELD_7 VARCHAR(250) 
, FLEX_FIELD_8 VARCHAR(250) 
, FLEX_FIELD_9 VARCHAR(250) 
, FLEX_FIELD_10 VARCHAR(250) 
, GROUP_REQUEST_ID NUMERIC(20, 0) 
, STOP_ON_PKG_ERROR CHAR(1) 
, ALL_FILES_REQUESTED CHAR(1) NOT NULL 
, PIPELINE_STAGE_STEP_EXEC_ID NUMERIC(20) 
, REL_DEFINITION_ID NUMERIC(20, 0) 
, REL_SNAPSHOT_ID NUMERIC(20, 0) 
, PIPELINE_STAGE_EXEC_ID NUMERIC(20,0)
, CONSTRAINT WORKFLOW_REQUEST_PK PRIMARY KEY 
  (
    WORKFLOW_REQUEST_ID 
  )
  
);

CREATE TABLE FD.WORKFLOW_REQUEST_CMS_ISSUE 
(
  WORKFLOW_REQUEST_CMS_ISSUE_ID NUMERIC(20, 0) NOT NULL 
, WORKFLOW_REQUEST_ID NUMERIC(20, 0) NOT NULL 
, ISSUE_NUMBER VARCHAR(20) NOT NULL 
, ISSUE_DESCRIPTION VARCHAR(2000) 
, ISSUE_TYPE VARCHAR(10) 
, CONSTRAINT PK_WORKFLOW_REQ_CMS_ISSUE PRIMARY KEY 
  (
    WORKFLOW_REQUEST_CMS_ISSUE_ID 
  )
  
);

CREATE TABLE FD.WORKFLOW_REQUEST_INPUT 
(
  WORKFLOW_REQUEST_ID NUMERIC(20, 0) NOT NULL 
, WORKFLOW_REQUEST_INPUT_KEY VARCHAR(255) NOT NULL 
, WORKFLOW_REQUEST_INPUT_VALUE VARCHAR(4000) NOT NULL 
, IS_ENCRYPTED CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, CONSTRAINT WORKFLOW_REQUEST_INPUT_PK PRIMARY KEY 
  (
    WORKFLOW_REQUEST_ID 
  , WORKFLOW_REQUEST_INPUT_KEY 
  )
  
);

CREATE TABLE FD.WORKFLOW_REQUEST_INST 
(
  WORKFLOW_REQUEST_ID NUMERIC(20, 0) NOT NULL 
, INSTANCE_ID NUMERIC(20, 0) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, CONSTRAINT WORKFLOW_REQUEST_INST_PK PRIMARY KEY 
  (
    WORKFLOW_REQUEST_ID 
  , INSTANCE_ID 
  )
  
);

CREATE TABLE FD.WORKFLOW_VERSION 
(
  WORKFLOW_VERSION_ID NUMERIC(20, 0) NOT NULL 
, WORKFLOW_ID NUMERIC(20, 0) NOT NULL 
, WORKFLOW_VERSION VARCHAR(100) NOT NULL 
, ACTIVE_COPY CHAR(1) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT WORKFLOW_VERSION_PK PRIMARY KEY 
  (
    WORKFLOW_VERSION_ID 
  )
  
);

CREATE TABLE FD.WORKFLOW_VERSION_DATA 
(
  WORKFLOW_VERSION_DATA_ID NUMERIC(20, 0) NOT NULL 
, WORKFLOW_VERSION_ID NUMERIC(20, 0) NOT NULL 
, SEQUENCE_NUMBER NUMERIC(8, 0) NOT NULL 
, WORKFLOW_VERSION_DATA VARCHAR(4000) NOT NULL 
, CREATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, CREATED_BY VARCHAR(128) NOT NULL 
, UPDATED_ON TIMESTAMP WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP 
, UPDATED_BY VARCHAR(128) NOT NULL 
, VERSION_NUMBER NUMERIC(8, 0) 
, CONSTRAINT WORKFLOW_VERSION_DATA_PK PRIMARY KEY 
  (
    WORKFLOW_VERSION_DATA_ID 
  )
  
);

CREATE TABLE FD.PROJECT_CONTAINER_CONFIG
  (
    project_container_config_id NUMERIC(20),
    project_id                  NUMERIC(20) NOT NULL,
    Dockerfile                  VARCHAR(100),
    IS_ACTIVE                   VARCHAR(1) NOT NULL,
    CREATED_ON                  TIMESTAMP NOT NULL,
    CREATED_BY                  VARCHAR(128) NOT NULL,
    UPDATED_ON                  TIMESTAMP NOT NULL,
    UPDATED_BY                  VARCHAR(128) NOT NULL,
    VERSION_NUMBER              NUMERIC(8,0) NOT NULL,
    CONSTRAINT pk_project_container_config PRIMARY KEY (project_container_config_id),
    CONSTRAINT fk_project_container_config_pr FOREIGN KEY (project_id) REFERENCES FD.PROJECT(project_id)
  );

CREATE INDEX FDIX121 ON FD.CMS_API (CMS_ID ASC);

CREATE INDEX FDIX122 ON FD.CMS_STATUS (CMS_ID ASC);

CREATE INDEX FDIX123 ON FD.DEPLOY_APPROVAL (DEFAULT_GROUP_ID ASC);

CREATE INDEX FDIX2 ON FD.DEPLOY_APPROVAL (ENVIRONMENT_ID ASC);

CREATE INDEX FDIX3 ON FD.DEPLOY_APPROVAL_GROUP (GROUP_ID ASC);

/*CREATE UNIQUE INDEX DEPLOY_WINDOW_UK1 ON FD.DEPLOY_WINDOW (FOLDER_ID ASC, ENVIRONMENT_ID ASC);*/

CREATE INDEX FDIX4 ON FD.DEPLOY_WINDOW (ENVIRONMENT_ID ASC);

/*CREATE UNIQUE INDEX DEPLOY_WINDOW_APPROVAL_UK1 ON FD.DEPLOY_WINDOW_APPROVAL_GROUP (WINDOW_ID ASC, GROUP_ID ASC);*/

CREATE INDEX FDIX5 ON FD.DEPLOY_WINDOW_APPROVAL_GROUP (GROUP_ID ASC);

/*CREATE UNIQUE INDEX ENDPOINT_UK1 ON FD.ENDPOINT (ENDPOINT_NAME ASC);

CREATE UNIQUE INDEX ENVIRONMENT_UK1 ON FD.ENVIRONMENT (ENVIRONMENT_CODE ASC);

CREATE UNIQUE INDEX FD.ENVIRONMENT_UK2 ON FD.ENVIRONMENT (ENVIRONMENT_NAME ASC);*/

CREATE INDEX FDIX124 ON FD.ENVIRONMENT_CMS_CONFIG (ENVIRONMENT_ID ASC);

/*CREATE UNIQUE INDEX ENVIRONMENT_INSTANCE_UK1 ON FD.ENVIRONMENT_INSTANCE (ENVIRONMENT_ID ASC, INSTANCE_ID ASC);*/

CREATE INDEX FDIX7 ON FD.ENVIRONMENT_INSTANCE (INSTANCE_ID ASC);

CREATE INDEX FDIX125 ON FD.ENVIRONMENT_ITS_CONFIG (ENVIRONMENT_ID ASC);

/*CREATE UNIQUE INDEX ENV_INST_ENDPOINT_UK1 ON FD.ENV_INST_ENDPOINT (ENV_INST_ID ASC, ENDPOINT_ID ASC);*/

CREATE INDEX FDIX6 ON FD.ENV_INST_ENDPOINT (ENDPOINT_ID ASC);

CREATE INDEX FDIX1 ON FD.ENV_INST_ENDPOINT_RSC_TYPE (ENV_INST_ENDPOINT_ID ASC);

CREATE INDEX FDIX64 ON FD.ENV_INST_ENDPOINT_RSC_TYPE (RESOURCE_TYPE_ID ASC);

/*CREATE UNIQUE INDEX FD_GROUP_UK1 ON FD.FD_GROUP (GROUP_NAME ASC);*/

CREATE INDEX FDIX8 ON FD.FD_GROUP_PERMISSION (PERMISSION_ID ASC);

/*CREATE UNIQUE INDEX FD_PERMISSION_UK1 ON FD.FD_PERMISSION (OBJECT_TYPE ASC, ACTION_TYPE ASC, OBJECT_ID ASC);

CREATE UNIQUE INDEX FD_REALM_UK1 ON FD.FD_REALM (REALM_NAME ASC);*/

CREATE INDEX FD_REALM_GROUP_MAPX1 ON FD.FD_REALM_GROUP_MAP (REALM_GROUP_ID ASC);

CREATE UNIQUE INDEX FDUIX1 ON FD.FD_USER (USER_NAME ASC);

/*CREATE UNIQUE INDEX FD_USER_UK1 ON FD.FD_USER (USER_NAME ASC);*/

CREATE INDEX FDIX65 ON FD.FD_USER_ATTRIBUTE (FD_USER_ATTR_DEF_ID ASC);

/*CREATE UNIQUE INDEX FD_USER_ATTRIBUTE_UK1 ON FD.FD_USER_ATTRIBUTE (USER_ID ASC, FD_USER_ATTR_DEF_ID ASC);

CREATE UNIQUE INDEX FD_USER_ATTR_DEF_UK1 ON FD.FD_USER_ATTR_DEF (FD_USER_ATTR_GROUP ASC, FD_USER_ATTR_NAME ASC);*/

CREATE INDEX FDIX126 ON FD.FD_USER_EXT_GROUP (GROUP_ID ASC);

CREATE INDEX FDIX9 ON FD.FD_USER_GROUP (GROUP_ID ASC);

/*CREATE UNIQUE INDEX FLEX_FIELD_METADATA_UK1 ON FD.FLEX_FIELD_METADATA (OBJECT_NAME ASC, COLUMN_NAME ASC);

CREATE UNIQUE INDEX FOLDER_UK1 ON FD.FOLDER (PARENT_FOLDER_ID ASC, FOLDER_NAME ASC);*/

CREATE INDEX FDIX127 ON FD.FOLDER_CMS_CONFIG (CMS_CONFIG_ID ASC);

CREATE INDEX FDIX128 ON FD.FOLDER_CMS_CONFIG (INSTANCE_ID ASC);

CREATE INDEX FDIX129 ON FD.FOLDER_CMS_CONFIG (INSTANCE_CMS_CONFIG_ID ASC);

CREATE INDEX FDIX10 ON FD.FOLDER_PROJECT_VERSION (FOLDER_VERSION_ID ASC, PROJECT_VERSION_ID ASC);

CREATE INDEX FDIX11 ON FD.FOLDER_PROJECT_VERSION (PROJECT_ID ASC);

CREATE INDEX FDIX12 ON FD.FOLDER_PROJECT_VERSION (PROJECT_VERSION_ID ASC);

CREATE INDEX FDIX13 ON FD.FOLDER_REQUEST (ENVIRONMENT_ID ASC);

CREATE INDEX FDIX14 ON FD.FOLDER_REQUEST (FOLDER_ID ASC);

CREATE INDEX FDIX15 ON FD.FOLDER_REQUEST (FOLDER_VERSION_ID ASC, FOLDER_REQUEST_ID ASC);

CREATE INDEX FDIX49 ON FD.FOLDER_REQUEST (REQUEST_STATUS ASC);

CREATE INDEX FDIX16 ON FD.HUMAN_TASK (GROUP_ID ASC);

CREATE INDEX FDIX161 ON FD.HUMAN_TASK (ASSIGNEE ASC);

CREATE INDEX FDIX17 ON FD.HUMAN_TASK (FOLDER_REQUEST_ID ASC);

CREATE INDEX FDIX18 ON FD.HUMAN_TASK (WORKFLOW_REQUEST_ID ASC);

/*CREATE UNIQUE INDEX INSTANCE_UK1 ON FD.INSTANCE (INSTANCE_CODE ASC);

CREATE UNIQUE INDEX INSTANCE_UK2 ON FD.INSTANCE (INSTANCE_NAME ASC);*/

CREATE INDEX FDIX19 ON FD.INST_PROPERTY_SET (PROPERTY_SET_ID ASC);

CREATE INDEX ITSSTATUSX1 ON FD.ITSSTATUS (ISSUETRACKINGSYSTEMID ASC);

CREATE INDEX FDIX20 ON FD.NOTIFICATION (ENVIRONMENT_ID ASC);

CREATE INDEX FDIX21 ON FD.NOTIFICATION (FOLDER_ID ASC);

CREATE INDEX FDIX22 ON FD.NOTIFICATION_EVENT (NOTIFICATION_ID ASC);

CREATE INDEX FDIX23 ON FD.NOTIFICATION_RECIPIENT (NOTIFICATION_ID ASC);

CREATE INDEX PACKAGE_OBJECTX1 ON FD.PACKAGE_OBJECT (PROJECT_OBJECT_ID ASC);

CREATE INDEX PACKAGE_OBJECT_EXECUTIONX1 ON FD.PACKAGE_OBJECT_EXECUTION (PACKAGE_OBJECT_ID ASC);

CREATE INDEX PACKAGE_OBJECT_EXECUTIONX2 ON FD.PACKAGE_OBJECT_EXECUTION (ENDPOINT_ID ASC, PLUGIN_EXECUTION_ID ASC);

CREATE INDEX PACKAGE_OBJ_CURRENT_STATUSX1 ON FD.PACKAGE_OBJ_CURRENT_STATUS (ENVIRONMENT_ID ASC);

CREATE INDEX PACKAGE_OBJ_CURRENT_STATUSX2 ON FD.PACKAGE_OBJ_CURRENT_STATUS (PROJECT_ID ASC);

CREATE INDEX PACKAGE_OBJ_CURRENT_STATUSX3 ON FD.PACKAGE_OBJ_CURRENT_STATUS (PROJECT_OBJECT_ID ASC);

CREATE INDEX PACKAGE_OBJ_CURRENT_STATUSX4 ON FD.PACKAGE_OBJ_CURRENT_STATUS (WORKFLOW_EXECUTION_ID ASC);

CREATE INDEX FDIX130 ON FD.PIPELINE_DEFINITION (ACTIVE_PIPELINE_VERSION_ID ASC);

CREATE INDEX FDIX131 ON FD.PIPELINE_EXEC (PIPELINE_VERSION_ID ASC);

CREATE INDEX FDIX132 ON FD.PIPELINE_EXEC (REL_SNAPSHOT_ID ASC);

CREATE INDEX FDIX162 ON FD.PIPELINE_ROLE (PIPELINE_DEFINITION_ID ASC);

CREATE INDEX FDIX163 ON FD.PIPELINE_ROLE_MEMBER (GROUP_ID ASC);

CREATE INDEX FDIX164 ON FD.PIPELINE_ROLE_MEMBER (REL_DEFINITION_ID ASC);

CREATE INDEX FDIX165 ON FD.PIPELINE_ROLE_MEMBER (PIPELINE_ROLE_ID ASC);

CREATE INDEX FDIX166 ON FD.PIPELINE_ROLE_MEMBER (USER_ID ASC);

CREATE INDEX FDIX167 ON FD.PIPELINE_ROLE_PERMISSION (PERMISSION_ID ASC);

CREATE INDEX FDIX168 ON FD.PIPELINE_ROLE_PERMISSION (PIPELINE_ROLE_ID ASC);

CREATE INDEX FDIX133 ON FD.PIPELINE_STAGE (ENVIRONMENT_ID ASC);

CREATE INDEX FDIX115 ON FD.PIPELINE_STAGE_EXEC (REL_SNAPSHOT_ID ASC);

CREATE INDEX FDIX134 ON FD.PIPELINE_STAGE_EXEC (PIPELINE_EXEC_ID ASC);

CREATE INDEX FDIX135 ON FD.PIPELINE_STAGE_EXEC (PIPELINE_DEFINITION_ID ASC);

CREATE INDEX FDIX136 ON FD.PIPELINE_STAGE_GATE (PIPELINE_STAGE_ID ASC);

CREATE INDEX FDIX139 ON FD.PIPELINE_STAGE_GATE (TEST_RESULTS_ENV_ID ASC);

CREATE INDEX FDIX114 ON FD.PIPELINE_STAGE_GATE_EXEC (PIPELINE_STAGE_EXEC_ID ASC);

CREATE INDEX FDIX140 ON FD.PIPELINE_STAGE_GATE_EXEC (PIPELINE_STAGE_GATE_ID ASC);

CREATE INDEX FDIX141 ON FD.PIPELINE_STAGE_STEP (PIPELINE_STAGE_ID ASC);

CREATE INDEX FDIX142 ON FD.PIPELINE_STAGE_STEP_EXEC (PIPELINE_STAGE_EXEC_ID ASC);

CREATE INDEX FDIX143 ON FD.PIPELINE_STAGE_STEP_EXEC (PIPELINE_STAGE_STEP_ID ASC);

CREATE INDEX FDIX24 ON FD.PLUGIN (ACTIVE_PLUGIN_VERSION_ID ASC);

/*CREATE UNIQUE INDEX PLUGIN_UK1 ON FD.PLUGIN (PLUGIN_NAME ASC);*/

CREATE INDEX FDIX25 ON FD.PLUGIN_EXECUTION (ENDPOINT_ID ASC);

CREATE INDEX FDIX26 ON FD.PLUGIN_EXECUTION (WORKFLOW_EXECUTION_ID ASC);

CREATE INDEX FDIX50 ON FD.PLUGIN_EXECUTION (PLUGIN_EXECUTION_ID ASC);

CREATE INDEX FDIX66 ON FD.PLUGIN_EXECUTION_LOG (ENDPOINT_ID ASC, PLUGIN_EXECUTION_ID ASC);

/*CREATE UNIQUE INDEX PLUGIN_EXECUTION_LOG_UK1 ON FD.PLUGIN_EXECUTION_LOG (PLUGIN_EXECUTION_ID ASC, ENDPOINT_ID ASC, SEQUENCE_NUMBER ASC);*/

CREATE INDEX FDIX27 ON FD.PLUGIN_EXECUTION_OUTPUT (ENVIRONMENT_ID ASC);

CREATE INDEX FDIX28 ON FD.PLUGIN_EXECUTION_OUTPUT (INSTANCE_ID ASC);

CREATE INDEX FDIX29 ON FD.PLUGIN_EXECUTION_OUTPUT (PROJECT_ID ASC);

CREATE INDEX FDIX67 ON FD.PLUGIN_EXECUTION_OUTPUT (ENDPOINT_ID ASC, PLUGIN_EXECUTION_ID ASC);

/*CREATE UNIQUE INDEX PLUGIN_EXECUTION_OUTPUT_UK1 ON FD.PLUGIN_EXECUTION_OUTPUT (PLUGIN_EXECUTION_ID ASC, OUTPUT_KEY_NAME ASC, ENDPOINT_ID ASC);

CREATE UNIQUE INDEX PLUGIN_EXECUTION_OP_VALUE_UK1 ON FD.PLUGIN_EXECUTION_OUTPUT_VALUE (PLUGIN_EXECUTION_OUTPUT_ID ASC, SEQUENCE_NUMBER ASC);

CREATE UNIQUE INDEX PLUGIN_VERSION_UK1 ON FD.PLUGIN_VERSION (PLUGIN_ID ASC, PLUGIN_VERSION ASC);

CREATE UNIQUE INDEX PLUGIN_VERSION_DATA_UK1 ON FD.PLUGIN_VERSION_DATA (PLUGIN_VERSION_ID ASC, SEQUENCE_NUMBER ASC);

CREATE UNIQUE INDEX PLUGIN_VERSION_JAR_UK1 ON FD.PLUGIN_VERSION_JAR (PLUGIN_VERSION_ID ASC, PLUGIN_JAR_FILENAME ASC, SEQUENCE_NUMBER ASC);*/

CREATE INDEX FDIX51 ON FD.PROJECT (FOLDER_ID ASC);

CREATE INDEX PROJECT_X1 ON FD.PROJECT (IS_ACTIVE ASC, PARTIAL_DEPLOYMENTS ASC, PROJECT_ID ASC, PROJECT_NAME ASC);

CREATE INDEX FDIX144 ON FD.PROJECT_CMS_CONFIG (CMS_CONFIG_ID ASC);

CREATE INDEX FDIX145 ON FD.PROJECT_CMS_CONFIG (INSTANCE_ID ASC);

CREATE INDEX FDIX146 ON FD.PROJECT_CMS_CONFIG (INSTANCE_CMS_CONFIG_ID ASC);

/*CREATE UNIQUE INDEX PROJECT_CONFIG_UK1 ON FD.PROJECT_CONFIG (PROJECT_ID ASC, PROJECT_CONFIG_KEY ASC);

CREATE UNIQUE INDEX PROJECT_CONFIG_VALUE_UK1 ON FD.PROJECT_CONFIG_VALUE (PROJECT_CONFIG_ID ASC, SEQUENCE_NUMBER ASC);*/

CREATE INDEX PROJECT_ENV_ITS_CONFIG_X1 ON FD.PROJECT_ENV_ITS_CONFIG (ENVIRONMENT_ID ASC);

CREATE INDEX PROJECT_ITS_CONFIGX1 ON FD.PROJECT_ITS_CONFIG (INSTANCE_ID ASC);

CREATE INDEX PROJECT_ITS_CONFIGX2 ON FD.PROJECT_ITS_CONFIG (ISSUETRACKINGSYSTEMID ASC);

CREATE INDEX PROJECT_OBJECTX1 ON FD.PROJECT_OBJECT (OBJECT_TYPE_ID ASC);

CREATE INDEX PROJECT_OBJECT_ATTRIBUTEX1 ON FD.PROJECT_OBJECT_ATTRIBUTE (OBJECT_ATTR_DEF_ID ASC);

CREATE INDEX PROJECT_OBJECT_ATTRIBUTE_VALX1 ON FD.PROJECT_OBJECT_ATTRIBUTE_VAL (PROJECT_OBJECT_ATTR_ID ASC);

/*CREATE UNIQUE INDEX PROJECT_STREAM_UK1 ON FD.PROJECT_STREAM (PROJECT_ID ASC, STREAM_NAME ASC);*/

CREATE INDEX FDIX80 ON FD.PROJECT_STREAM_TEST_DEF (TEST_DEFINITION_ID ASC);

CREATE INDEX FDIX81 ON FD.PROJECT_TEST_TYPE (ENVIRONMENT_ID ASC);

CREATE INDEX FDIX82 ON FD.PROJECT_TEST_TYPE (INSTANCE_ID ASC);

CREATE INDEX FDIX83 ON FD.PROJECT_TEST_TYPE (TEST_TYPE_ID ASC);

CREATE INDEX FDIX68 ON FD.PROJECT_TRIGGER (PROJECT_ID ASC);

CREATE INDEX FDIX69 ON FD.PROJECT_TRIGGER_CONFIG (PROJECT_TRIGGER_ID ASC);

/*CREATE UNIQUE INDEX PROJECT_TRIGGER_CONFIG_UK1 ON FD.PROJECT_TRIGGER_CONFIG (SEQUENCE_NUMBER ASC, PROJECT_TRIGGER_ID ASC);*/

CREATE INDEX FDIX52 ON FD.PROJECT_VERSION (PROJECT_ID ASC, PROJECT_STREAM_ID ASC);

CREATE INDEX FDIX53 ON FD.PROJECT_VERSION (PROJECT_ID ASC, IS_ACTIVE ASC);

CREATE INDEX FDIX70 ON FD.PROJECT_VERSION (PROJECT_STREAM_ID ASC);

/*CREATE UNIQUE INDEX PROJECT_VERSION_UK1 ON FD.PROJECT_VERSION (PROJECT_ID ASC, PROJECT_VERSION_NAME ASC);

CREATE UNIQUE INDEX PROJECT_VERSION_DATA_UK1 ON FD.PROJECT_VERSION_DATA (PROJECT_VERSION_ID ASC, PROJECT_VERSION_DATA_KEY ASC);*/

CREATE INDEX PROJECT_VERSION_DATA_X1 ON FD.PROJECT_VERSION_DATA (PROJECT_VERSION_DATA_KEY ASC);

/*CREATE UNIQUE INDEX PROJECT_VERSION_DATA_VAL_UK1 ON FD.PROJECT_VERSION_DATA_VAL (PROJECT_VERSION_DATA_ID ASC, SEQUENCE_NUMBER ASC);*/

CREATE INDEX FDIX30 ON FD.PROJECT_WORKFLOW (WORKFLOW_ID ASC);

/*CREATE UNIQUE INDEX PROJECT_WORKFLOW_UK1 ON FD.PROJECT_WORKFLOW (PROJECT_ID ASC, PROJECT_WORKFLOW_TYPE ASC, WORKFLOW_ID ASC);*/

CREATE INDEX FDIX31 ON FD.PROJECT_WORKFLOW_INSTANCE (INSTANCE_ID ASC);

/*CREATE UNIQUE INDEX PROJECT_WORKFLOW_INSTANCE_UK1 ON FD.PROJECT_WORKFLOW_INSTANCE (PROJECT_WORKFLOW_ID ASC, INSTANCE_ID ASC);*/

CREATE INDEX FDIX32 ON FD.PROPERTY_KEY (ENVIRONMENT_ID ASC);

CREATE INDEX FDIX33 ON FD.PROPERTY_KEY (INSTANCE_ID ASC);

CREATE INDEX FDIX34 ON FD.PROPERTY_KEY (PROJECT_ID ASC);

CREATE INDEX FDIX54 ON FD.PROPERTY_KEY (IS_ACTIVE ASC, INSTANCE_ID ASC, ENVIRONMENT_ID ASC, PROJECT_ID ASC, PROPERTY_DEFINITION_ID ASC, PROPERTY_KEY_ID ASC);

CREATE INDEX FDIX55 ON FD.PROPERTY_KEY (ENVIRONMENT_ID ASC, INSTANCE_ID ASC, IS_ACTIVE ASC, PROJECT_ID ASC, PROPERTY_DEFINITION_ID ASC, PROPERTY_KEY_ID ASC);

/*CREATE UNIQUE INDEX PROPERTY_KEY_VALUE_UK1 ON FD.PROPERTY_KEY (PROPERTY_DEFINITION_ID ASC, ENVIRONMENT_ID ASC, INSTANCE_ID ASC, PROJECT_ID ASC);*/

CREATE INDEX FDIX56 ON FD.PROPERTY_KEY_DEFINITION (IS_ACTIVE ASC, PROPERTY_SCOPE ASC, PROPERTY_DEFINITION_ID ASC);

CREATE INDEX FDIX57 ON FD.PROPERTY_KEY_DEFINITION (PROPERTY_SCOPE ASC, IS_ACTIVE ASC, PROPERTY_DEFINITION_ID ASC);

/*CREATE UNIQUE INDEX PROPERTY_KEY_DEFINITION_UK1 ON FD.PROPERTY_KEY_DEFINITION (PROPERTY_KEY_NAME ASC);*/

CREATE INDEX FDIX58 ON FD.PROPERTY_SET (IS_ACTIVE ASC, PROPERTY_SET_ID ASC);

/*CREATE UNIQUE INDEX PROPERTY_SET_UK1 ON FD.PROPERTY_SET (PROPERTY_SET_NAME ASC, OWNER_TYPE ASC, OWNER_ID ASC);*/

CREATE INDEX FDIX35 ON FD.PROPERTY_SET_KEY_DEF (PROPERTY_DEFINITION_ID ASC);

CREATE INDEX FDIX59 ON FD.PROPERTY_VALUE (md5(PROPERTY_VALUE::text), PROPERTY_KEY_ID ASC);

/*CREATE UNIQUE INDEX PROPERTY_VALUE_UK1 ON FD.PROPERTY_VALUE (PROPERTY_KEY_ID ASC, SEQUENCE_NUMBER ASC);*/

CREATE INDEX PURGE_ARTIFACT_KEY_X1 ON FD.PURGE_ARTIFACT_KEY (PROJECT_VERSION_ID ASC);

CREATE INDEX PURGE_PIPELINE_RELEASE_KEY_X1 ON FD.PURGE_PIPELINE_RELEASE_KEY (PIPELINE_VERSION_ID);

CREATE INDEX PURGE_PIPELINE_RELEASE_KEY_X2 ON FD.PURGE_PIPELINE_RELEASE_KEY (REL_SNAPSHOT_ID);

CREATE INDEX PURGE_PIPELINE_RELEASE_KEY_X3 ON FD.PURGE_PIPELINE_RELEASE_KEY (PIPELINE_EXEC_ID);

CREATE INDEX PURGE_PIPELINE_RELEASE_KEY_X4 ON FD.PURGE_PIPELINE_RELEASE_KEY (REL_SNAPSHOT_VERSION_ID);

CREATE INDEX PURGE_PIPELINE_RELEASE_KEY_X5 ON FD.PURGE_PIPELINE_RELEASE_KEY (PROJECT_VERSION_ID);

CREATE INDEX PURGE_PKG_VERSION_KEY_X1 ON FD.PURGE_PKG_VERSION_KEY (WORKFLOW_EXECUTION_ID ASC);

CREATE INDEX PURGE_PKG_VERSION_KEY_X2 ON FD.PURGE_PKG_VERSION_KEY (PACKAGE_OBJECT_ID ASC, PLUGIN_EXECUTION_ID ASC);

CREATE INDEX PURGE_PKG_VERSION_KEY_X3 ON FD.PURGE_PKG_VERSION_KEY (PACKAGE_OBJECT_EXECUTION_ID ASC);

CREATE INDEX PURGE_PROJ_VERSION_KEY_X1 ON FD.PURGE_PROJ_VERSION_KEY (WORKFLOW_EXECUTION_ID ASC);

CREATE INDEX PURGE_PROJ_VERSION_KEY_X2 ON FD.PURGE_PROJ_VERSION_KEY (PROJECT_VERSION_ID ASC);

CREATE INDEX FDIX147 ON FD.RELEASE_CMS_CONFIG (CMS_CONFIG_ID ASC);

CREATE INDEX FDIX148 ON FD.RELEASE_CMS_CONFIG (INSTANCE_ID ASC);

CREATE INDEX FDIX149 ON FD.RELEASE_CMS_CONFIG (INSTANCE_CMS_CONFIG_ID ASC);

CREATE INDEX FDIX150 ON FD.REL_BUILD_MONITOR (REL_DEFINITION_ID ASC);

CREATE INDEX FDIX151 ON FD.REL_DEFINITION (TO_REL_DEFINITION_ID ASC);

CREATE INDEX FDIX152 ON FD.REL_DEFINITION (PIPELINE_DEFINITION_ID ASC);

CREATE INDEX FDIX153 ON FD.REL_PROJECT (PROJECT_ID ASC);

CREATE INDEX FDIX160 ON FD.REL_SNAPSHOT (REL_DEFINITION_ID ASC);

CREATE INDEX FDIX260 ON FD.REL_SNAPSHOT (REL_DEFINITION_ID, REL_SNAPSHOT_STATUS, CREATED_ON);

CREATE INDEX FDIX155 ON FD.REL_SNAPSHOT_VERSION (PROJECT_ID ASC);

CREATE INDEX FDIX156 ON FD.REL_SNAPSHOT_VERSION (PROJECT_VERSION_ID ASC);

CREATE INDEX FDIX157 ON FD.REL_SNAPSHOT_VERSION (PROJECT_STREAM_ID ASC);

CREATE INDEX FDIX158 ON FD.REL_SNAPSHOT_VERSION_REQ (ENVIRONMENT_ID ASC);

/*CREATE UNIQUE INDEX RESOURCE_TYPE_UK1 ON FD.RESOURCE_TYPE (RESOURCE_TYPE_NAME ASC);*/

CREATE INDEX FDIX36 ON FD.SCHEDULED_TASK (WINDOW_ID ASC);

CREATE INDEX FDIX37 ON FD.SCHEDULED_TASK (FOLDER_REQUEST_ID ASC);

/*CREATE UNIQUE INDEX TEMPLATE_UK1 ON FD.TEMPLATE (TEMPLATE_NAME ASC);*/

/*CREATE UNIQUE INDEX TEMPLATE_DATA_UK1 ON FD.TEMPLATE_DATA (TEMPLATE_ID ASC, SEQUENCE_NUMBER ASC);

CREATE UNIQUE INDEX TEMPLATE_INPUT_UK1 ON FD.TEMPLATE_INPUT (TEMPLATE_ID ASC, INPUT_NAME ASC);

CREATE UNIQUE INDEX UN_TESTING_TOOL ON FD.TESTING_TOOL (TESTING_TOOL_NAME ASC);*/

CREATE INDEX FDIX84 ON FD.TEST_DEFINITION (PROJECT_ID ASC);

CREATE INDEX FDIX85 ON FD.TEST_DEFINITION (TEST_SET_ID ASC);

CREATE INDEX FDIX86 ON FD.TEST_DEFINITION (TESTING_TOOL_ID ASC);

CREATE INDEX FDIX87 ON FD.TEST_DEFINITION (INSTANCE_ID ASC);

CREATE INDEX FDIX88 ON FD.TEST_DEFINITION (WORKFLOW_ID ASC);

CREATE INDEX FDIX89 ON FD.TEST_DEFINITION_INPUT (TEST_DEFINITION_ID ASC);

CREATE INDEX FDIX90 ON FD.TEST_DEFINITION_INPUT (PROJECT_STREAM_TEST_DEF_ID ASC);

CREATE INDEX FDIX91 ON FD.TEST_DEFINITION_QUALIFIER (TEST_DEFINITION_ID ASC);

CREATE INDEX FDIX92 ON FD.TEST_DEFINITION_RUN (TEST_DEFINITION_ID ASC);

CREATE INDEX FDIX93 ON FD.TEST_DEFINITION_RUN (WORKFLOW_EXECUTION_ID ASC);

CREATE INDEX FDIX94 ON FD.TEST_DEFINITION_RUN (TEST_SET_RUN_ID ASC);

CREATE INDEX FDIX95 ON FD.TEST_DEFINITION_RUN (ENDPOINT_ID ASC);

CREATE INDEX FDIX96 ON FD.TEST_DEF_QUALIFIER_VALUE (TEST_QUALIFIER_ID ASC);

CREATE INDEX FDIX97 ON FD.TEST_DEF_QUALIFIER_VALUE (TEST_DEFINITION_RUN_ID ASC);

CREATE INDEX FDIX98 ON FD.TEST_RESULT (TEST_DEFINITION_RUN_ID ASC);

CREATE INDEX FDIX100 ON FD.TEST_RUN (PROJECT_ID ASC);

CREATE INDEX FDIX101 ON FD.TEST_RUN (PROJECT_STREAM_ID ASC);

CREATE INDEX FDIX102 ON FD.TEST_RUN (TEST_TYPE_ID ASC);

CREATE INDEX FDIX103 ON FD.TEST_RUN (WORKFLOW_EXECUTION_ID ASC);

CREATE INDEX FDIX104 ON FD.TEST_RUN (INSTANCE_ID ASC);

CREATE INDEX FDIX99 ON FD.TEST_RUN (ENVIRONMENT_ID ASC);

CREATE INDEX FDIX105 ON FD.TEST_SET (PROJECT_ID ASC);

CREATE INDEX FDIX106 ON FD.TEST_SET (TEST_TYPE_ID ASC);

CREATE INDEX FDIX107 ON FD.TEST_SET_QUALIFIER (TEST_QUALIFIER_ID ASC);

CREATE INDEX FDIX108 ON FD.TEST_SET_QUALIFIER (TEST_SET_ID ASC);

CREATE INDEX FDIX109 ON FD.TEST_SET_QUALIFIER_VALUE (TEST_QUALIFIER_ID ASC);

CREATE INDEX FDIX110 ON FD.TEST_SET_QUALIFIER_VALUE (TEST_SET_RUN_ID ASC);

CREATE INDEX FDIX111 ON FD.TEST_SET_RUN (TEST_RUN_ID ASC);

CREATE INDEX FDIX112 ON FD.TEST_SET_RUN (TEST_SET_ID ASC);

CREATE INDEX FDIX38 ON FD.WORKFLOW (ACTIVE_WORKFLOW_VERSION_ID ASC);

CREATE INDEX WORKFLOW_X1 ON FD.WORKFLOW (WORKFLOW_TYPE ASC, WORKFLOW_ID ASC);

CREATE INDEX FDIX39 ON FD.WORKFLOW_EXECUTION (WORKFLOW_REQUEST_ID ASC);

CREATE INDEX FDIX40 ON FD.WORKFLOW_EXECUTION (PARENT_WORKFLOW_EXECUTION_ID ASC, WORKFLOW_REQUEST_ID ASC);

CREATE INDEX FDIX61 ON FD.WORKFLOW_EXECUTION (INSTANCE_ID ASC, ENVIRONMENT_ID ASC, EXECUTION_STATUS ASC, WORKFLOW_VERSION_ID ASC, PROJECT_ID ASC);

CREATE INDEX FDIX62 ON FD.WORKFLOW_EXECUTION (ENVIRONMENT_ID ASC, PARENT_WORKFLOW_EXECUTION_ID ASC);

CREATE INDEX WORKFLOW_EXECUTION_X1 ON FD.WORKFLOW_EXECUTION (PROJECT_VERSION_ID ASC);

CREATE INDEX WORKFLOW_EXECUTION_X2 ON FD.WORKFLOW_EXECUTION (EXECUTION_STATUS ASC);

/*CREATE UNIQUE INDEX WORKFLOW_EXECUTION_DATA_UK1 ON FD.WORKFLOW_EXECUTION_DATA (WORKFLOW_EXECUTION_ID ASC, SEQUENCE_NUMBER ASC);*/

CREATE INDEX FDIX41 ON FD.WORKFLOW_REQUEST (ENVIRONMENT_ID ASC);

CREATE INDEX FDIX42 ON FD.WORKFLOW_REQUEST (FOLDER_REQUEST_ID ASC);

CREATE INDEX FDIX43 ON FD.WORKFLOW_REQUEST (FOLDER_VERSION_ID ASC);

CREATE INDEX FDIX44 ON FD.WORKFLOW_REQUEST (FOLDER_ID ASC);

CREATE INDEX FDIX45 ON FD.WORKFLOW_REQUEST (PROJECT_ID ASC);

CREATE INDEX FDIX46 ON FD.WORKFLOW_REQUEST (PROJECT_VERSION_ID ASC);

CREATE INDEX FDIX47 ON FD.WORKFLOW_REQUEST (PROJECT_WORKFLOW_ID ASC);

CREATE INDEX FDIX63 ON FD.WORKFLOW_REQUEST (REQUEST_STATUS ASC);

CREATE INDEX FDIX159 ON FD.WORKFLOW_REQUEST_CMS_ISSUE (WORKFLOW_REQUEST_ID ASC);

CREATE INDEX FDIX48 ON FD.WORKFLOW_REQUEST_INST (INSTANCE_ID ASC);

/*CREATE UNIQUE INDEX WORKFLOW_VERSION_UK1 ON FD.WORKFLOW_VERSION (WORKFLOW_ID ASC, WORKFLOW_VERSION ASC);

CREATE UNIQUE INDEX WORKFLOW_VERSION_DATA_UK1 ON FD.WORKFLOW_VERSION_DATA (WORKFLOW_VERSION_ID ASC, SEQUENCE_NUMBER ASC);*/

ALTER TABLE FD.ACCOUNT_PROVIDER
ADD CONSTRAINT ACCOUNT_PROVIDER_UK1 UNIQUE 
(
  NAME 
)
;

ALTER TABLE FD.CMS
ADD CONSTRAINT UN_CMS_CONF UNIQUE 
(
  CMS_CONFIG_ID 
)
;

ALTER TABLE FD.CMS
ADD CONSTRAINT UN_CMS_NAME UNIQUE 
(
  NAME 
)
;

ALTER TABLE FD.CMS_STATUS
ADD CONSTRAINT UN_CMS_STATUS_NAME UNIQUE 
(
  NAME 
)
;

ALTER TABLE FD.DATA_LOAD_TRACK
ADD CONSTRAINT DATA_LOAD_TRACK_UK1 UNIQUE 
(
  FILE_NAME 
)
;

ALTER TABLE FD.DEPLOY_APPROVAL
ADD CONSTRAINT DEPLOY_APPROVAL_UK1 UNIQUE 
(
  FOLDER_ID 
, ENVIRONMENT_ID 
, IS_EXTERNAL 
, EXTERNAL_SYSTEM_ID 
, EXTERNAL_SYSTEM_TYPE 
)
;

ALTER TABLE FD.DEPLOY_APPROVAL_GROUP
ADD CONSTRAINT DEPLOY_APPROVAL_GROUP_UK1 UNIQUE 
(
  APPROVAL_ID 
, GROUP_ID 
)
;

ALTER TABLE FD.DEPLOY_WINDOW
ADD CONSTRAINT DEPLOY_WINDOW_UK1 UNIQUE 
(
  FOLDER_ID 
, ENVIRONMENT_ID 
)
;

ALTER TABLE FD.DEPLOY_WINDOW_APPROVAL_GROUP
ADD CONSTRAINT DEPLOY_WINDOW_APPROVAL_UK UNIQUE 
(
  WINDOW_ID 
, GROUP_ID 
)
;

ALTER TABLE FD.ENDPOINT
ADD CONSTRAINT ENDPOINT_UK1 UNIQUE 
(
  ENDPOINT_NAME 
)
;

ALTER TABLE FD.ENVIRONMENT
ADD CONSTRAINT ENVIRONMENT_UK1 UNIQUE 
(
  ENVIRONMENT_CODE 
)
;

ALTER TABLE FD.ENVIRONMENT
ADD CONSTRAINT ENVIRONMENT_UK2 UNIQUE 
(
  ENVIRONMENT_NAME 
)
;

ALTER TABLE FD.ENVIRONMENT_CMS_CONFIG
ADD CONSTRAINT UN_ENVIRONMENT_CMS_CONFIG UNIQUE 
(
  DEFAULT_CMS_CONFIG_ID 
, ENVIRONMENT_ID 
)
;

ALTER TABLE FD.ENVIRONMENT_CMS_CONFIG
ADD CONSTRAINT UN_ENVIRONMENT_CMS_CONFIG_CONF UNIQUE 
(
  CMS_CONFIG_ID 
)
;

ALTER TABLE FD.ENVIRONMENT_INSTANCE
ADD CONSTRAINT ENVIRONMENT_INSTANCE_UK1 UNIQUE 
(
  ENVIRONMENT_ID 
, INSTANCE_ID 
)
;

ALTER TABLE FD.ENVIRONMENT_ITS_CONFIG
ADD CONSTRAINT UN_ENVIRONMENT_ITS_CONFIG UNIQUE 
(
  ISSUETRACKINGSYSTEM_ID 
, ENVIRONMENT_ID 
)
;

ALTER TABLE FD.ENV_INST_ENDPOINT
ADD CONSTRAINT ENV_INST_ENDPOINT_UK1 UNIQUE 
(
  ENV_INST_ID 
, ENDPOINT_ID 
)
;

ALTER TABLE FD.FD_GROUP
ADD CONSTRAINT FD_GROUP_UK1 UNIQUE 
(
  GROUP_NAME 
)
;

ALTER TABLE FD.FD_PERMISSION
ADD CONSTRAINT FD_PERMISSION_UK1 UNIQUE 
(
  OBJECT_TYPE 
, ACTION_TYPE 
, OBJECT_ID 
)
;

ALTER TABLE FD.FD_REALM
ADD CONSTRAINT FD_REALM_UK1 UNIQUE 
(
  REALM_NAME 
)
;

ALTER TABLE FD.FD_REALM_GROUP
ADD CONSTRAINT UN_FD_REALM_GROUP_NAME UNIQUE 
(
  REALM_ID 
, GROUP_NAME 
)
;

ALTER TABLE FD.FD_USER
ADD CONSTRAINT FD_USER_UK1 UNIQUE 
(
  USER_NAME 
)
;

ALTER TABLE FD.FD_USER_ATTRIBUTE
ADD CONSTRAINT FD_USER_ATTRIBUTE_UK1 UNIQUE 
(
  USER_ID 
, FD_USER_ATTR_DEF_ID 
)
;

ALTER TABLE FD.FD_USER_ATTR_DEF
ADD CONSTRAINT FD_USER_ATTR_DEF_UK1 UNIQUE 
(
  FD_USER_ATTR_GROUP 
, FD_USER_ATTR_NAME 
)
;

ALTER TABLE FD.FLEX_FIELD_METADATA
ADD CONSTRAINT FLEX_FIELD_METADATA_UK1 UNIQUE 
(
  OBJECT_NAME 
, COLUMN_NAME 
)
;

ALTER TABLE FD.FLEX_FIELD_METADATA
ADD CONSTRAINT FLEX_FIELD_METADATA_UK2 UNIQUE 
(
  CODE 
)
;

ALTER TABLE FD.FOLDER
ADD CONSTRAINT FOLDER_UK1 UNIQUE 
(
  PARENT_FOLDER_ID 
, FOLDER_NAME 
)
;

ALTER TABLE FD.FOLDER_VERSION
ADD CONSTRAINT FOLDER_VERSION_UK1 UNIQUE 
(
  FOLDER_ID 
, FOLDER_VERSION_NAME 
)
;

ALTER TABLE FD.HUMAN_TASK
ADD CONSTRAINT HUMAN_TASK_UK1 UNIQUE 
(
  WORKFLOW_REQUEST_ID 
, FOLDER_REQUEST_ID 
, ENVIRONMENT_ID 
, GROUP_ID 
, EXTERNAL_ID 
, PIPELINE_STAGE_GATE_EXEC_ID 
, PIPELINE_STAGE_STEP_EXEC_ID 
)
;

ALTER TABLE FD.INSTANCE
ADD CONSTRAINT INSTANCE_UK1 UNIQUE 
(
  INSTANCE_CODE 
)
;

ALTER TABLE FD.INSTANCE
ADD CONSTRAINT INSTANCE_UK2 UNIQUE 
(
  INSTANCE_NAME 
)
;

ALTER TABLE FD.ISSUETRACKINGSYSTEM
ADD CONSTRAINT UN_ISSUETRACKINGSYSTEM_NAME UNIQUE 
(
  NAME 
)
;

ALTER TABLE FD.ITSSTATUS
ADD CONSTRAINT UN_ITSSTATUS_NAME UNIQUE 
(
  NAME 
)
;

ALTER TABLE FD.OBJECT_ATTRIBUTE_DEF
ADD CONSTRAINT OBJECT_ATTR_DEF_UK1 UNIQUE 
(
  OBJECT_TYPE_ID 
, OBJECT_ATTRIBUTE_CODE 
)
;

ALTER TABLE FD.OBJECT_ATTRIBUTE_DEF
ADD CONSTRAINT OBJECT_ATTR_DEF_UK2 UNIQUE 
(
  OBJECT_TYPE_ID 
, ATTRIBUTE_DISPLAY_NAME 
)
;

ALTER TABLE FD.OBJECT_TYPE
ADD CONSTRAINT OBJECT_TYPE_UK1 UNIQUE 
(
  PROJECT_TYPE 
, OBJECT_TYPE_CODE 
)
;

ALTER TABLE FD.OBJECT_TYPE
ADD CONSTRAINT OBJECT_TYPE_UK2 UNIQUE 
(
  PROJECT_TYPE 
, TYPE_DISPLAY_NAME 
)
;

ALTER TABLE FD.PACKAGE_OBJECT
ADD CONSTRAINT PACKAGE_OBJECT_UK1 UNIQUE 
(
  PROJECT_VERSION_ID 
, PROJECT_OBJECT_ID 
)
;

ALTER TABLE FD.PACKAGE_OBJECT_EXECUTION
ADD CONSTRAINT PACKAGE_OBJECT_EXECUTION_UK1 UNIQUE 
(
  PLUGIN_EXECUTION_ID 
, ENDPOINT_ID 
, PACKAGE_OBJECT_ID 
)
;

ALTER TABLE FD.PIPELINE_ATTACHMENT_DATA
ADD CONSTRAINT PIPELINE_ATTACHMENT_DATA_UK1 UNIQUE 
(
  FILE_ID 
, SEQUENCE_NUMBER 
)
;

ALTER TABLE FD.PIPELINE_DEFINITION
ADD CONSTRAINT PIPELINE_DEFINITION_UK1 UNIQUE 
(
  NAME 
)
;

ALTER TABLE FD.PIPELINE_METADATA
ADD CONSTRAINT PIPELINE_METADATA_UK1 UNIQUE 
(
  PIPELINE_DEFINITION_ID 
, KEY_CODE 
)
;

ALTER TABLE FD.PIPELINE_PROJECT_GROUP
ADD CONSTRAINT PIPELINE_PROJECT_GROUP_UK1 UNIQUE 
(
  PIPELINE_DEFINITION_ID 
, PROJECT_GROUP_NAME 
)
;

ALTER TABLE FD.PIPELINE_ROLE
ADD CONSTRAINT PIPELINE_ROLE_UK1 UNIQUE 
(
  PIPELINE_DEFINITION_ID 
, NAME 
)
;

ALTER TABLE FD.PIPELINE_STAGE
ADD CONSTRAINT PIPELINE_STAGE_UK1 UNIQUE 
(
  PIPELINE_VERSION_ID 
, ENVIRONMENT_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_EXEC_INFO
ADD CONSTRAINT PIPELINE_STAGE_EXEC_INFO_UK1 UNIQUE 
(
  PIPELINE_STAGE_EXEC_ID 
, SEQUENCE_NUMBER 
)
;

ALTER TABLE FD.PIPELINE_STAGE_GATE_DATA
ADD CONSTRAINT PIPELINE_STAGE_GATE_DATA_UK1 UNIQUE 
(
  PIPELINE_STAGE_GATE_ID 
, SEQUENCE_NUMBER 
)
;

ALTER TABLE FD.PIPELINE_STAGE_STEP_DATA
ADD CONSTRAINT PIPELINE_STAGE_STEP_DATA_UK1 UNIQUE 
(
  PIPELINE_STAGE_STEP_ID 
, SEQUENCE_NUMBER 
)
;

ALTER TABLE FD.PIPELINE_STAGE_STEP_EXEC_WFRQ
ADD CONSTRAINT PIPELINE_STAGE_STEP_EXEC__UK1 UNIQUE 
(
  PIPELINE_STAGE_STEP_EXEC_ID 
, PROJECT_ID 
, PROJECT_VERSION_ID 
, WORKFLOW_REQUEST_ID 
)
;

ALTER TABLE FD.PIPELINE_VERSION
ADD CONSTRAINT PIPELINE_VERSION_UK1 UNIQUE 
(
  PIPELINE_DEFINITION_ID 
, PIPELINE_VERSION 
)
;

ALTER TABLE FD.PLUGIN
ADD CONSTRAINT PLUGIN_UK1 UNIQUE 
(
  PLUGIN_NAME 
)
;

ALTER TABLE FD.PLUGIN
ADD CONSTRAINT PLUGIN_UK2 UNIQUE 
(
  PLUGIN_DISPLAY_NAME 
)
;

ALTER TABLE FD.PLUGIN_EXECUTION_LOG
ADD CONSTRAINT PLUGIN_EXECUTION_LOG_UK1 UNIQUE 
(
  PLUGIN_EXECUTION_ID 
, ENDPOINT_ID 
, SEQUENCE_NUMBER 
)
;

ALTER TABLE FD.PLUGIN_EXECUTION_OUTPUT
ADD CONSTRAINT PLUGIN_EXECUTION_OUTPUT_UK1 UNIQUE 
(
  PLUGIN_EXECUTION_ID 
, OUTPUT_KEY_NAME 
, ENDPOINT_ID 
)
;

ALTER TABLE FD.PLUGIN_EXECUTION_OUTPUT_VALUE
ADD CONSTRAINT PLUGIN_EXECUTION_OP_VALUE_UK1 UNIQUE 
(
  PLUGIN_EXECUTION_OUTPUT_ID 
, SEQUENCE_NUMBER 
)
;

ALTER TABLE FD.PLUGIN_VERSION
ADD CONSTRAINT PLUGIN_VERSION_UK1 UNIQUE 
(
  PLUGIN_ID 
, PLUGIN_VERSION 
)
;

ALTER TABLE FD.PLUGIN_VERSION_DATA
ADD CONSTRAINT PLUGIN_VERSION_DATA_UK1 UNIQUE 
(
  PLUGIN_VERSION_ID 
, SEQUENCE_NUMBER 
)
;

ALTER TABLE FD.PLUGIN_VERSION_JAR
ADD CONSTRAINT PLUGIN_VERSION_JAR_UK1 UNIQUE 
(
  PLUGIN_VERSION_ID 
, PLUGIN_JAR_FILENAME 
, SEQUENCE_NUMBER 
)
;

ALTER TABLE FD.PROJECT
ADD CONSTRAINT PROJECT_UK1 UNIQUE 
(
  FOLDER_ID 
, PROJECT_NAME 
)
;

ALTER TABLE FD.PROJECT_CONFIG
ADD CONSTRAINT PROJECT_CONFIG_UK1 UNIQUE 
(
  PROJECT_ID 
, PROJECT_CONFIG_KEY 
)
;

ALTER TABLE FD.PROJECT_CONFIG_VALUE
ADD CONSTRAINT PROJECT_CONFIG_VALUE_UK1 UNIQUE 
(
  PROJECT_CONFIG_ID 
, SEQUENCE_NUMBER 
)
;

ALTER TABLE FD.PROJECT_ENV_ITS_CONFIG
ADD CONSTRAINT UN_PROJECT_ENV_ITS_CONFIG UNIQUE 
(
  PROJECT_ID 
, ENVIRONMENT_ID 
)
;

ALTER TABLE FD.PROJECT_OBJECT
ADD CONSTRAINT PROJECT_OBJECT_UK1 UNIQUE 
(
  PROJECT_ID 
, OBJECT_PATH 
)
;										 

ALTER TABLE FD.PROJECT_OBJECT_ATTRIBUTE
ADD CONSTRAINT PROJECT_OBJECT_ATTRIBUTE_UK1 UNIQUE 
(
  PROJECT_OBJECT_ID 
, OBJECT_ATTR_DEF_ID 
)
;

ALTER TABLE FD.PROJECT_OBJECT_ATTRIBUTE_VAL
ADD CONSTRAINT PROJECT_OBJECT_ATTRIBUTE__UK1 UNIQUE 
(
  PROJECT_OBJECT_ATTR_VAL_ID 
, SEQUENCE_NUMBER 
)
;

ALTER TABLE FD.PROJECT_PACKAGE
ADD CONSTRAINT PROJECT_PACKAGE_UK1 UNIQUE 
(
  PROJECT_ID 
, PACKAGE_NAME 
)
;

ALTER TABLE FD.PROJECT_PACKAGE_FILE
ADD CONSTRAINT PROJECT_PACKAGE_FILE_UK1 UNIQUE 
(
  PROJECT_PACKAGE_ID 
, PROJECT_OBJECT_ID 
)
;

ALTER TABLE FD.PROJECT_STREAM
ADD CONSTRAINT PROJECT_STREAM_UK1 UNIQUE 
(
  PROJECT_ID 
, STREAM_NAME 
)
;

ALTER TABLE FD.PROJECT_STREAM_TEST_DEF
ADD CONSTRAINT UN_PROJECT_STREAM_TEST_DEF UNIQUE 
(
  PROJECT_STREAM_ID 
, TEST_DEFINITION_ID 
)
;

ALTER TABLE FD.PROJECT_TEST_TYPE
ADD CONSTRAINT UN_PROJECT_TEST_TYPE UNIQUE 
(
  PROJECT_ID 
, TEST_TYPE_ID 
, ENVIRONMENT_ID 
, INSTANCE_ID 
)
;

ALTER TABLE FD.PROJECT_TRIGGER_CONFIG
ADD CONSTRAINT PROJECT_TRIGGER_CONFIG_UK1 UNIQUE 
(
  SEQUENCE_NUMBER 
, PROJECT_TRIGGER_ID 
)
;

ALTER TABLE FD.PROJECT_VERSION
ADD CONSTRAINT PROJECT_VERSION_UK1 UNIQUE 
(
  PROJECT_ID 
, PROJECT_VERSION_NAME 
)
;

ALTER TABLE FD.PROJECT_VERSION_DATA
ADD CONSTRAINT PROJECT_VERSION_DATA_UK1 UNIQUE 
(
  PROJECT_VERSION_ID 
, PROJECT_VERSION_DATA_KEY 
)
;

ALTER TABLE FD.PROJECT_VERSION_DATA_VAL
ADD CONSTRAINT PROJECT_VERSION_DATA_VAL_UK1 UNIQUE 
(
  PROJECT_VERSION_DATA_ID 
, SEQUENCE_NUMBER 
)
;

ALTER TABLE FD.PROJECT_WORKFLOW
ADD CONSTRAINT PROJECT_WORKFLOW_UK1 UNIQUE 
(
  PROJECT_ID 
, PROJECT_WORKFLOW_TYPE 
, WORKFLOW_ID 
)
;

ALTER TABLE FD.PROJECT_WORKFLOW_INSTANCE
ADD CONSTRAINT PROJECT_WORKFLOW_INSTANCE_UK1 UNIQUE 
(
  PROJECT_WORKFLOW_ID 
, INSTANCE_ID 
)
;

ALTER TABLE FD.PROPERTY_KEY
ADD CONSTRAINT PROPERTY_KEY_VALUE_UK1 UNIQUE 
(
  PROPERTY_DEFINITION_ID 
, ENVIRONMENT_ID 
, INSTANCE_ID 
, PROJECT_ID 
)
;

ALTER TABLE FD.PROPERTY_KEY_DEFINITION
ADD CONSTRAINT PROPERTY_KEY_DEFINITION_UK1 UNIQUE 
(
  PROPERTY_KEY_NAME 
)
;

ALTER TABLE FD.PROPERTY_SET
ADD CONSTRAINT PROPERTY_SET_UK1 UNIQUE 
(
  PROPERTY_SET_NAME 
, OWNER_TYPE 
, OWNER_ID 
)
;

ALTER TABLE FD.PROPERTY_VALUE
ADD CONSTRAINT PROPERTY_VALUE_UK1 UNIQUE 
(
  PROPERTY_KEY_ID 
, SEQUENCE_NUMBER 
)
;

ALTER TABLE FD.REL_DEFINITION
ADD CONSTRAINT REL_DEFINITION_UK1 UNIQUE 
(
  REL_NAME 
)
;

ALTER TABLE FD.REL_PROJECT
ADD CONSTRAINT REL_PROJECT_UK1 UNIQUE 
(
  REL_DEFINITION_ID 
, PROJECT_ID 
, PACKAGE_NAME 
)
;

ALTER TABLE FD.REL_SNAPSHOT
ADD CONSTRAINT REL_SNAPSHOT_UK1 UNIQUE 
(
  REL_DEFINITION_ID 
, REL_SNAPSHOT 
)
;

ALTER TABLE FD.REL_SNAPSHOT_VERSION
ADD CONSTRAINT REL_SNAPSHOT_VERSION_UK1 UNIQUE 
(
  REL_SNAPSHOT_ID 
, PROJECT_ID 
, PACKAGE_NAME 
)
;

ALTER TABLE FD.REL_SNAPSHOT_VERSION_REQ
ADD CONSTRAINT REL_SNAPSHOT_VERSION_REQ_UK1 UNIQUE 
(
  REL_SNAPSHOT_VERSION_ID 
)
;

ALTER TABLE FD.RESOURCE_TYPE
ADD CONSTRAINT RESOURCE_TYPE_UK1 UNIQUE 
(
  RESOURCE_TYPE_NAME 
)
;

ALTER TABLE FD.SCHEDULED_TASK
ADD CONSTRAINT SCHEDULED_TASK_UK1 UNIQUE 
(
  WORKFLOW_REQUEST_ID 
, FOLDER_REQUEST_ID 
, ENVIRONMENT_ID 
, PIPELINE_STAGE_GATE_EXEC_ID 
, PIPELINE_STAGE_STEP_EXEC_ID 
)
;

ALTER TABLE FD.TEMPLATE
ADD CONSTRAINT TEMPLATE_UK1 UNIQUE 
(
  TEMPLATE_NAME 
)
;

ALTER TABLE FD.TEMPLATE_DATA
ADD CONSTRAINT TEMPLATE_DATA_UK1 UNIQUE 
(
  TEMPLATE_ID 
, SEQUENCE_NUMBER 
)
;

ALTER TABLE FD.TEMPLATE_INPUT
ADD CONSTRAINT TEMPLATE_INPUT_UK1 UNIQUE 
(
  TEMPLATE_ID 
, INPUT_NAME 
)
;

ALTER TABLE FD.TESTING_TOOL
ADD CONSTRAINT UN_TESTING_TOOL UNIQUE 
(
  TESTING_TOOL_NAME 
)
;

ALTER TABLE FD.TEST_DEFINITION
ADD CONSTRAINT UN_TEST_DEFINITION_NAME UNIQUE 
(
  TEST_DEFINITION_NAME 
, PROJECT_ID 
)
;

ALTER TABLE FD.TEST_DEFINITION_QUALIFIER
ADD CONSTRAINT UN_TEST_DEFINITION_QUALIFIER UNIQUE 
(
  TEST_QUALIFIER_ID 
, TEST_DEFINITION_ID 
)
;

ALTER TABLE FD.TEST_SET
ADD CONSTRAINT UN_TEST_SET_NAME UNIQUE 
(
  TEST_SET_NAME 
, PROJECT_ID 
)
;

ALTER TABLE FD.TEST_TYPE
ADD CONSTRAINT UN_TEST_TYPE UNIQUE 
(
  TEST_TYPE_NAME 
)
;

ALTER TABLE FD.WORKFLOW
ADD CONSTRAINT WORKFLOW_UK1 UNIQUE 
(
  WORKFLOW_NAME 
)
;

ALTER TABLE FD.WORKFLOW_EXECUTION_DATA
ADD CONSTRAINT WORKFLOW_EXECUTION_DATA_UK1 UNIQUE 
(
  WORKFLOW_EXECUTION_ID 
, SEQUENCE_NUMBER 
)
;

ALTER TABLE FD.WORKFLOW_VERSION
ADD CONSTRAINT WORKFLOW_VERSION_UK1 UNIQUE 
(
  WORKFLOW_ID 
, WORKFLOW_VERSION 
)
;

ALTER TABLE FD.WORKFLOW_VERSION_DATA
ADD CONSTRAINT WORKFLOW_VERSION_DATA_UK1 UNIQUE 
(
  WORKFLOW_VERSION_ID 
, SEQUENCE_NUMBER 
)
;

ALTER TABLE FD.CMS
ADD CONSTRAINT FK_CMS_CONFIG FOREIGN KEY
(
  CMS_CONFIG_ID 
)
REFERENCES FD.CMS_CONFIG
(
  CMS_CONFIG_ID 
)
;

ALTER TABLE FD.CMS_API
ADD CONSTRAINT FK_CMS_API_CMS FOREIGN KEY
(
  CMS_ID 
)
REFERENCES FD.CMS
(
  CMS_ID 
)
;

ALTER TABLE FD.CMS_STATUS
ADD CONSTRAINT FK_CMS_STATUS_CMS FOREIGN KEY
(
  CMS_ID 
)
REFERENCES FD.CMS
(
  CMS_ID 
)
;

ALTER TABLE FD.DEPLOY_APPROVAL
ADD CONSTRAINT ENVIRONMENT_DEPLOY_APPROVALS FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.DEPLOY_APPROVAL
ADD CONSTRAINT FK_DEPLOY_APPROVAL_GROUP FOREIGN KEY
(
  DEFAULT_GROUP_ID 
)
REFERENCES FD.FD_GROUP
(
  GROUP_ID 
)
;

ALTER TABLE FD.DEPLOY_APPROVAL
ADD CONSTRAINT FOLDER_DEPLOY_APPROVALS FOREIGN KEY
(
  FOLDER_ID 
)
REFERENCES FD.FOLDER
(
  FOLDER_ID 
)
;

ALTER TABLE FD.DEPLOY_APPROVAL_GROUP
ADD CONSTRAINT DEPLOY_APPRVL_APPRVL_GROUPS FOREIGN KEY
(
  APPROVAL_ID 
)
REFERENCES FD.DEPLOY_APPROVAL
(
  APPROVAL_ID 
)
;

ALTER TABLE FD.DEPLOY_APPROVAL_GROUP
ADD CONSTRAINT FD_GROUP_DEPLOY_APPRVL_GROUPS FOREIGN KEY
(
  GROUP_ID 
)
REFERENCES FD.FD_GROUP
(
  GROUP_ID 
)
;

ALTER TABLE FD.DEPLOY_WINDOW
ADD CONSTRAINT ENVIRONMENT_DEPLOY_WINDOWS FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.DEPLOY_WINDOW
ADD CONSTRAINT FOLDER_DEPLOY_WINDOWS FOREIGN KEY
(
  FOLDER_ID 
)
REFERENCES FD.FOLDER
(
  FOLDER_ID 
)
;

ALTER TABLE FD.DEPLOY_WINDOW_APPROVAL_GROUP
ADD CONSTRAINT DEPLOY_WINDW_WINDW_APPROVALS FOREIGN KEY
(
  WINDOW_ID 
)
REFERENCES FD.DEPLOY_WINDOW
(
  WINDOW_ID 
)
;

ALTER TABLE FD.DEPLOY_WINDOW_APPROVAL_GROUP
ADD CONSTRAINT GROUP_WINDOW_APPROVAL_GROUPS FOREIGN KEY
(
  GROUP_ID 
)
REFERENCES FD.FD_GROUP
(
  GROUP_ID 
)
;

ALTER TABLE FD.ENVIRONMENT_CMS_CONFIG
ADD CONSTRAINT FK_ENVIRONMENT_CMS_CONFIG_CONF FOREIGN KEY
(
  CMS_CONFIG_ID 
)
REFERENCES FD.CMS_CONFIG
(
  CMS_CONFIG_ID 
)
;

ALTER TABLE FD.ENVIRONMENT_CMS_CONFIG
ADD CONSTRAINT FK_ENVIRONMENT_CMS_CONFIG_DEF FOREIGN KEY
(
  DEFAULT_CMS_CONFIG_ID 
)
REFERENCES FD.CMS_CONFIG
(
  CMS_CONFIG_ID 
)
;

ALTER TABLE FD.ENVIRONMENT_CMS_CONFIG
ADD CONSTRAINT FK_ENVIRONMENT_CMS_CONFIG_ENV FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.ENVIRONMENT_INSTANCE
ADD CONSTRAINT ENVIRONMENT_INSTANCES FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.ENVIRONMENT_INSTANCE
ADD CONSTRAINT INSTANCE_ENVIRONMENTS FOREIGN KEY
(
  INSTANCE_ID 
)
REFERENCES FD.INSTANCE
(
  INSTANCE_ID 
)
;

ALTER TABLE FD.ENVIRONMENT_ITS_CONFIG
ADD CONSTRAINT FK_ENVIRONMENT_ITS_CONFIG_ENV FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.ENVIRONMENT_ITS_CONFIG
ADD CONSTRAINT FK_ENVIRONMENT_ITS_CONFIG_ITS FOREIGN KEY
(
  ISSUETRACKINGSYSTEM_ID 
)
REFERENCES FD.ISSUETRACKINGSYSTEM
(
  ISSUETRACKINGSYSTEMID 
)
;

ALTER TABLE FD.ENV_INST_ENDPOINT
ADD CONSTRAINT ENDPOINT_ENV_INSTANCES FOREIGN KEY
(
  ENDPOINT_ID 
)
REFERENCES FD.ENDPOINT
(
  ENDPOINT_ID 
)
;

ALTER TABLE FD.ENV_INST_ENDPOINT
ADD CONSTRAINT ENV_INST_ENDPOINTS FOREIGN KEY
(
  ENV_INST_ID 
)
REFERENCES FD.ENVIRONMENT_INSTANCE
(
  ENV_INST_ID 
)
;

ALTER TABLE FD.ENV_INST_ENDPOINT_RSC_TYPE
ADD CONSTRAINT ENV_INST_ENDPOINT_RSC_TYPES FOREIGN KEY
(
  ENV_INST_ENDPOINT_ID 
)
REFERENCES FD.ENV_INST_ENDPOINT
(
  ENV_INST_ENDPOINT_ID 
)
;

ALTER TABLE FD.ENV_INST_ENDPOINT_RSC_TYPE
ADD CONSTRAINT RSC_TYPE_ENV_INST_ENDPOINTS FOREIGN KEY
(
  RESOURCE_TYPE_ID 
)
REFERENCES FD.RESOURCE_TYPE
(
  RESOURCE_TYPE_ID 
)
;

ALTER TABLE FD.FD_GROUP_PERMISSION
ADD CONSTRAINT GROUP_PERMISSIONS FOREIGN KEY
(
  GROUP_ID 
)
REFERENCES FD.FD_GROUP
(
  GROUP_ID 
)
;

ALTER TABLE FD.FD_GROUP_PERMISSION
ADD CONSTRAINT PERMISSION_GROUPS FOREIGN KEY
(
  PERMISSION_ID 
)
REFERENCES FD.FD_PERMISSION
(
  PERMISSION_ID 
)
;

ALTER TABLE FD.FD_REALM_GROUP
ADD CONSTRAINT FK_FD_REALM_GROUP_REALM FOREIGN KEY
(
  REALM_ID 
)
REFERENCES FD.FD_REALM
(
  REALM_ID 
)
;

ALTER TABLE FD.FD_REALM_GROUP_MAP
ADD CONSTRAINT FD_REALM_GROUP_MAP_FGROUP FOREIGN KEY
(
  FD_GROUP_ID 
)
REFERENCES FD.FD_GROUP
(
  GROUP_ID 
)
;

ALTER TABLE FD.FD_REALM_GROUP_MAP
ADD CONSTRAINT FK_FD_REALM_GROUP_MAP_RGROUP FOREIGN KEY
(
  REALM_GROUP_ID 
)
REFERENCES FD.FD_REALM_GROUP
(
  REALM_GROUP_ID 
)
;

ALTER TABLE FD.FD_USER_ATTRIBUTE
ADD CONSTRAINT FD_USER_ATTRIBUTES FOREIGN KEY
(
  USER_ID 
)
REFERENCES FD.FD_USER
(
  USER_ID 
)
;

ALTER TABLE FD.FD_USER_ATTRIBUTE
ADD CONSTRAINT USER_ATTR_DEF_TO_VALUES FOREIGN KEY
(
  FD_USER_ATTR_DEF_ID 
)
REFERENCES FD.FD_USER_ATTR_DEF
(
  FD_USER_ATTR_DEF_ID 
)
;

ALTER TABLE FD.FD_USER_EXT_GROUP
ADD CONSTRAINT FD_EXT_GROUP_USERS FOREIGN KEY
(
  GROUP_ID 
)
REFERENCES FD.FD_GROUP
(
  GROUP_ID 
)
;

ALTER TABLE FD.FD_USER_EXT_GROUP
ADD CONSTRAINT FD_USER_EXT_GROUPS FOREIGN KEY
(
  USER_ID 
)
REFERENCES FD.FD_USER
(
  USER_ID 
)
;

ALTER TABLE FD.FD_USER_GROUP
ADD CONSTRAINT FD_GROUP_USERS FOREIGN KEY
(
  GROUP_ID 
)
REFERENCES FD.FD_GROUP
(
  GROUP_ID 
)
;

ALTER TABLE FD.FD_USER_GROUP
ADD CONSTRAINT FD_USER_GROUPS FOREIGN KEY
(
  USER_ID 
)
REFERENCES FD.FD_USER
(
  USER_ID 
)
;

ALTER TABLE FD.FOLDER
ADD CONSTRAINT SUB_FOLDER FOREIGN KEY
(
  PARENT_FOLDER_ID 
)
REFERENCES FD.FOLDER
(
  FOLDER_ID 
)
;

ALTER TABLE FD.FOLDER_CMS_CONFIG
ADD CONSTRAINT FK_FOLDER_CMS_CONFIG_CONF FOREIGN KEY
(
  CMS_CONFIG_ID 
)
REFERENCES FD.CMS_CONFIG
(
  CMS_CONFIG_ID 
)
;

ALTER TABLE FD.FOLDER_CMS_CONFIG
ADD CONSTRAINT FK_FOLDER_CMS_CONFIG_FOLDER FOREIGN KEY
(
  FOLDER_ID 
)
REFERENCES FD.FOLDER
(
  FOLDER_ID 
)
;

ALTER TABLE FD.FOLDER_CMS_CONFIG
ADD CONSTRAINT FK_FOLDER_CMS_CONFIG_INST FOREIGN KEY
(
  INSTANCE_ID 
)
REFERENCES FD.INSTANCE
(
  INSTANCE_ID 
)
;

ALTER TABLE FD.FOLDER_CMS_CONFIG
ADD CONSTRAINT FK_FOLDER_INS_CMS_CONFIG_CONF FOREIGN KEY
(
  INSTANCE_CMS_CONFIG_ID 
)
REFERENCES FD.CMS_CONFIG
(
  CMS_CONFIG_ID 
)
;

ALTER TABLE FD.FOLDER_PROJECT_VERSION
ADD CONSTRAINT FOLDER_VERSION_VERSIONS FOREIGN KEY
(
  FOLDER_VERSION_ID 
)
REFERENCES FD.FOLDER_VERSION
(
  FOLDER_VERSION_ID 
)
;

ALTER TABLE FD.FOLDER_PROJECT_VERSION
ADD CONSTRAINT PROJECT_FLDR_PROJECT_VERSIONS FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.FOLDER_PROJECT_VERSION
ADD CONSTRAINT PROJECT_VERSION_VERSIONS FOREIGN KEY
(
  PROJECT_VERSION_ID 
)
REFERENCES FD.PROJECT_VERSION
(
  PROJECT_VERSION_ID 
)
;

ALTER TABLE FD.FOLDER_REQUEST
ADD CONSTRAINT ENVIRONMENT_FOLDER_REQUESTS FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.FOLDER_REQUEST
ADD CONSTRAINT FOLDER_FOLDER_REQUESTS FOREIGN KEY
(
  FOLDER_ID 
)
REFERENCES FD.FOLDER
(
  FOLDER_ID 
)
;

ALTER TABLE FD.FOLDER_REQUEST
ADD CONSTRAINT FOLDER_VERSION_FOLDER_REQUESTS FOREIGN KEY
(
  FOLDER_VERSION_ID 
)
REFERENCES FD.FOLDER_VERSION
(
  FOLDER_VERSION_ID 
)
;

ALTER TABLE FD.FOLDER_VERSION
ADD CONSTRAINT FOLDER_VERSIONS FOREIGN KEY
(
  FOLDER_ID 
)
REFERENCES FD.FOLDER
(
  FOLDER_ID 
)
;

ALTER TABLE FD.HUMAN_TASK
ADD CONSTRAINT FK_HUMAN_TASK_ASSIGNE FOREIGN KEY
(
  ASSIGNEE 
)
REFERENCES FD.FD_USER
(
  USER_NAME 
)
;

ALTER TABLE FD.HUMAN_TASK
ADD CONSTRAINT FOLDER_REQUEST_HUMAN_TASKS FOREIGN KEY
(
  FOLDER_REQUEST_ID 
)
REFERENCES FD.FOLDER_REQUEST
(
  FOLDER_REQUEST_ID 
)
;

ALTER TABLE FD.HUMAN_TASK
ADD CONSTRAINT GROUP_HUMAN_TASKS FOREIGN KEY
(
  GROUP_ID 
)
REFERENCES FD.FD_GROUP
(
  GROUP_ID 
)
;

ALTER TABLE FD.HUMAN_TASK
ADD CONSTRAINT WORKFLOW_REQUEST_HUMAN_TASKS FOREIGN KEY
(
  WORKFLOW_REQUEST_ID 
)
REFERENCES FD.WORKFLOW_REQUEST
(
  WORKFLOW_REQUEST_ID 
)
;

ALTER TABLE FD.HUMAN_TASK_IDENTITY
ADD CONSTRAINT HUMAN_TASK_IDENTITY_FK1 FOREIGN KEY
(
  TASK_ID 
)
REFERENCES FD.HUMAN_TASK
(
  TASK_ID 
)
;

ALTER TABLE FD.INST_PROPERTY_SET
ADD CONSTRAINT INSTANCE_PROPERTY_SETS FOREIGN KEY
(
  INSTANCE_ID 
)
REFERENCES FD.INSTANCE
(
  INSTANCE_ID 
)
;

ALTER TABLE FD.INST_PROPERTY_SET
ADD CONSTRAINT PROPERTY_SET_INSTANCES FOREIGN KEY
(
  PROPERTY_SET_ID 
)
REFERENCES FD.PROPERTY_SET
(
  PROPERTY_SET_ID 
)
;

ALTER TABLE FD.ITSSTATUS
ADD CONSTRAINT FK_ITSSTATUS_ITS FOREIGN KEY
(
  ISSUETRACKINGSYSTEMID 
)
REFERENCES FD.ISSUETRACKINGSYSTEM
(
  ISSUETRACKINGSYSTEMID 
)
;

ALTER TABLE FD.NOTIFICATION
ADD CONSTRAINT ENVIRONMENT_NOTIFICATIONS FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.NOTIFICATION
ADD CONSTRAINT FOLDER_NOTIFICATIONS FOREIGN KEY
(
  FOLDER_ID 
)
REFERENCES FD.FOLDER
(
  FOLDER_ID 
)
;

ALTER TABLE FD.NOTIFICATION_EVENT
ADD CONSTRAINT NTF_NOTIFICATION_EVENTS FOREIGN KEY
(
  NOTIFICATION_ID 
)
REFERENCES FD.NOTIFICATION
(
  NOTIFICATION_ID 
)
;

ALTER TABLE FD.NOTIFICATION_RECIPIENT
ADD CONSTRAINT NTF_NOTIFICATION_RECIPIENTS FOREIGN KEY
(
  NOTIFICATION_ID 
)
REFERENCES FD.NOTIFICATION
(
  NOTIFICATION_ID 
)
;

ALTER TABLE FD.OBJECT_ATTRIBUTE_DEF
ADD CONSTRAINT OBJECT_ATTR_DEFS FOREIGN KEY
(
  OBJECT_TYPE_ID 
)
REFERENCES FD.OBJECT_TYPE
(
  OBJECT_TYPE_ID 
)
;

ALTER TABLE FD.PACKAGE_OBJECT
ADD CONSTRAINT PROJECT_OBJECT_PACKAGES FOREIGN KEY
(
  PROJECT_OBJECT_ID 
)
REFERENCES FD.PROJECT_OBJECT
(
  PROJECT_OBJECT_ID 
)
;

ALTER TABLE FD.PACKAGE_OBJECT
ADD CONSTRAINT PROJECT_VERSION_PACKAGES FOREIGN KEY
(
  PROJECT_VERSION_ID 
)
REFERENCES FD.PROJECT_VERSION
(
  PROJECT_VERSION_ID 
)
;

ALTER TABLE FD.PACKAGE_OBJECT_EXECUTION
ADD CONSTRAINT PKG_OBJ_EXEC_PKG_OBJ FOREIGN KEY
(
  PACKAGE_OBJECT_ID 
)
REFERENCES FD.PACKAGE_OBJECT
(
  PACKAGE_OBJECT_ID 
)
;

ALTER TABLE FD.PACKAGE_OBJECT_EXECUTION
ADD CONSTRAINT PLUGIN_EXECUTION_PKG_OBJ FOREIGN KEY
(
  ENDPOINT_ID 
, PLUGIN_EXECUTION_ID 
)
REFERENCES FD.PLUGIN_EXECUTION
(
  ENDPOINT_ID 
, PLUGIN_EXECUTION_ID 
)
;

ALTER TABLE FD.PACKAGE_OBJ_CURRENT_STATUS
ADD CONSTRAINT ENV_PKG_OBJ_CUR_STATUS FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.PACKAGE_OBJ_CURRENT_STATUS
ADD CONSTRAINT INST_PKG_OBJ_CUR_STATUS FOREIGN KEY
(
  INSTANCE_ID 
)
REFERENCES FD.INSTANCE
(
  INSTANCE_ID 
)
;

ALTER TABLE FD.PACKAGE_OBJ_CURRENT_STATUS
ADD CONSTRAINT PROJECT_PKG_OBJ_CUR_STATUS FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PACKAGE_OBJ_CURRENT_STATUS
ADD CONSTRAINT PROJ_OBJ_PKG_OBJ_CUR_STATUS FOREIGN KEY
(
  PROJECT_OBJECT_ID 
)
REFERENCES FD.PROJECT_OBJECT
(
  PROJECT_OBJECT_ID 
)
;

ALTER TABLE FD.PACKAGE_OBJ_CURRENT_STATUS
ADD CONSTRAINT WF_EXEC_PKG_OBJ_CUR_STATUS FOREIGN KEY
(
  WORKFLOW_EXECUTION_ID 
)
REFERENCES FD.WORKFLOW_EXECUTION
(
  WORKFLOW_EXECUTION_ID 
)
;

ALTER TABLE FD.PIPELINE_DEFINITION
ADD CONSTRAINT PIPELINE_DEFINITION_FK1 FOREIGN KEY
(
  ACTIVE_PIPELINE_VERSION_ID 
)
REFERENCES FD.PIPELINE_VERSION
(
  PIPELINE_VERSION_ID 
)
;

ALTER TABLE FD.PIPELINE_EXEC
ADD CONSTRAINT FK_PIPELINE_EXEC_PIPE_VER FOREIGN KEY
(
  PIPELINE_VERSION_ID 
)
REFERENCES FD.PIPELINE_VERSION
(
  PIPELINE_VERSION_ID 
)
;

ALTER TABLE FD.PIPELINE_EXEC
ADD CONSTRAINT REL_SNAPSHOT_PIPELINE_EXECS FOREIGN KEY
(
  REL_SNAPSHOT_ID 
)
REFERENCES FD.REL_SNAPSHOT
(
  REL_SNAPSHOT_ID 
)
;

ALTER TABLE FD.PIPELINE_METADATA
ADD CONSTRAINT PIPELINE_METADATA FOREIGN KEY
(
  PIPELINE_DEFINITION_ID 
)
REFERENCES FD.PIPELINE_DEFINITION
(
  PIPELINE_DEFINITION_ID 
)
;

ALTER TABLE FD.PIPELINE_PROJECT_GROUP
ADD CONSTRAINT PIPELINE_PROJECT_GROUPS FOREIGN KEY
(
  PIPELINE_DEFINITION_ID 
)
REFERENCES FD.PIPELINE_DEFINITION
(
  PIPELINE_DEFINITION_ID 
)
;

ALTER TABLE FD.PIPELINE_ROLE
ADD CONSTRAINT PIPELINE_ROLE_FK FOREIGN KEY
(
  PIPELINE_DEFINITION_ID 
)
REFERENCES FD.PIPELINE_DEFINITION
(
  PIPELINE_DEFINITION_ID 
)
;

ALTER TABLE FD.PIPELINE_ROLE_MEMBER
ADD CONSTRAINT PIPELINE_ROLE_MEMBER_GROUP_FK FOREIGN KEY
(
  GROUP_ID 
)
REFERENCES FD.FD_GROUP
(
  GROUP_ID 
)
;

ALTER TABLE FD.PIPELINE_ROLE_MEMBER
ADD CONSTRAINT PIPELINE_ROLE_MEMBER_REL_FK FOREIGN KEY
(
  REL_DEFINITION_ID 
)
REFERENCES FD.REL_DEFINITION
(
  REL_DEFINITION_ID 
)
;

ALTER TABLE FD.PIPELINE_ROLE_MEMBER
ADD CONSTRAINT PIPELINE_ROLE_MEMBER_ROLE_FK FOREIGN KEY
(
  PIPELINE_ROLE_ID 
)
REFERENCES FD.PIPELINE_ROLE
(
  PIPELINE_ROLE_ID 
)
;

ALTER TABLE FD.PIPELINE_ROLE_MEMBER
ADD CONSTRAINT PIPELINE_ROLE_MEMBER_USER_FK FOREIGN KEY
(
  USER_ID 
)
REFERENCES FD.FD_USER
(
  USER_ID 
)
;

ALTER TABLE FD.PIPELINE_ROLE_PERMISSION
ADD CONSTRAINT PIPELINE_ROLE_PERM_PERM_FK FOREIGN KEY
(
  PERMISSION_ID 
)
REFERENCES FD.FD_PERMISSION
(
  PERMISSION_ID 
)
;

ALTER TABLE FD.PIPELINE_ROLE_PERMISSION
ADD CONSTRAINT PIPELINE_ROLE_PERM_ROLE_FK FOREIGN KEY
(
  PIPELINE_ROLE_ID 
)
REFERENCES FD.PIPELINE_ROLE
(
  PIPELINE_ROLE_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE
ADD CONSTRAINT PIPELINE_STAGES FOREIGN KEY
(
  PIPELINE_VERSION_ID 
)
REFERENCES FD.PIPELINE_VERSION
(
  PIPELINE_VERSION_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE
ADD CONSTRAINT PIPELINE_STAGE_FK1 FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_EXEC
ADD CONSTRAINT PIPELINE_STAGE_EXECS FOREIGN KEY
(
  PIPELINE_EXEC_ID 
)
REFERENCES FD.PIPELINE_EXEC
(
  PIPELINE_EXEC_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_EXEC
ADD CONSTRAINT PIPELINE_STAGE_EXEC_FK1 FOREIGN KEY
(
  PIPELINE_DEFINITION_ID 
)
REFERENCES FD.PIPELINE_DEFINITION
(
  PIPELINE_DEFINITION_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_EXEC
ADD CONSTRAINT REL_SNAPSHOT_EXECS FOREIGN KEY
(
  REL_SNAPSHOT_ID 
)
REFERENCES FD.REL_SNAPSHOT
(
  REL_SNAPSHOT_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_EXEC_INFO
ADD CONSTRAINT PIPELINE_STAGE_EXEC_INFO FOREIGN KEY
(
  PIPELINE_STAGE_EXEC_ID 
)
REFERENCES FD.PIPELINE_STAGE_EXEC
(
  PIPELINE_STAGE_EXEC_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_GATE
ADD CONSTRAINT PIPELINE_STAGE_GATES FOREIGN KEY
(
  PIPELINE_STAGE_ID 
)
REFERENCES FD.PIPELINE_STAGE
(
  PIPELINE_STAGE_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_GATE
ADD CONSTRAINT PIPELINE_STAGE_GATE_FK3 FOREIGN KEY
(
  TEST_RESULTS_ENV_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_GATE
ADD CONSTRAINT PIPELINE_STAGE_GATE_FK4 FOREIGN KEY
(
  PIPELINE_ROLE_ID 
)
REFERENCES FD.PIPELINE_ROLE
(
  PIPELINE_ROLE_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_GATE
ADD CONSTRAINT PIPELINE_STAGE_GATE_FK5 FOREIGN KEY
(
  SCHD_OVERRIDE_PIPELINE_ROLE_ID 
)
REFERENCES FD.PIPELINE_ROLE
(
  PIPELINE_ROLE_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_GATE
ADD CONSTRAINT PIPELINE_STAGE_GATE_FK6 FOREIGN KEY
(
  TEST_OVERRIDE_PIPELINE_ROLE_ID 
)
REFERENCES FD.PIPELINE_ROLE
(
  PIPELINE_ROLE_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_GATE_DATA
ADD CONSTRAINT PIPELINE_STAGE_GATE_DATA FOREIGN KEY
(
  PIPELINE_STAGE_GATE_ID 
)
REFERENCES FD.PIPELINE_STAGE_GATE
(
  PIPELINE_STAGE_GATE_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_GATE_EXEC
ADD CONSTRAINT PIPELINE_STAGE_GATE_EXEC FOREIGN KEY
(
  PIPELINE_STAGE_EXEC_ID 
)
REFERENCES FD.PIPELINE_STAGE_EXEC
(
  PIPELINE_STAGE_EXEC_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_GATE_EXEC
ADD CONSTRAINT PIPELINE_STAGE_GATE_EXECS FOREIGN KEY
(
  PIPELINE_STAGE_GATE_ID 
)
REFERENCES FD.PIPELINE_STAGE_GATE
(
  PIPELINE_STAGE_GATE_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_STEP
ADD CONSTRAINT PIPELINE_STAGE_STEPS FOREIGN KEY
(
  PIPELINE_STAGE_ID 
)
REFERENCES FD.PIPELINE_STAGE
(
  PIPELINE_STAGE_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_STEP
ADD CONSTRAINT PIPELINE_STAGE_STEP_FK1 FOREIGN KEY
(
  PIPELINE_ROLE_ID 
)
REFERENCES FD.PIPELINE_ROLE
(
  PIPELINE_ROLE_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_STEP
ADD CONSTRAINT PIPELINE_STAGE_STEP_FK2 FOREIGN KEY
(
  SCHD_OVERRIDE_PIPELINE_ROLE_ID 
)
REFERENCES FD.PIPELINE_ROLE
(
  PIPELINE_ROLE_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_STEP_DATA
ADD CONSTRAINT PIPELINE_STAGE_STEP_DATA FOREIGN KEY
(
  PIPELINE_STAGE_STEP_ID 
)
REFERENCES FD.PIPELINE_STAGE_STEP
(
  PIPELINE_STAGE_STEP_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_STEP_EXEC
ADD CONSTRAINT PIPELINE_STAGE_STEP_EXEC FOREIGN KEY
(
  PIPELINE_STAGE_EXEC_ID 
)
REFERENCES FD.PIPELINE_STAGE_EXEC
(
  PIPELINE_STAGE_EXEC_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_STEP_EXEC
ADD CONSTRAINT PIPELINE_STAGE_STEP_EXECS FOREIGN KEY
(
  PIPELINE_STAGE_STEP_ID 
)
REFERENCES FD.PIPELINE_STAGE_STEP
(
  PIPELINE_STAGE_STEP_ID 
)
;

ALTER TABLE FD.PIPELINE_STAGE_STEP_EXEC_WFRQ
ADD CONSTRAINT PIPELINE_STEP_EXEC_REQUESTS FOREIGN KEY
(
  PIPELINE_STAGE_STEP_EXEC_ID 
)
REFERENCES FD.PIPELINE_STAGE_STEP_EXEC
(
  PIPELINE_STAGE_STEP_EXEC_ID 
)
;

ALTER TABLE FD.PIPELINE_VERSION
ADD CONSTRAINT PIPELINE_VERSIONS FOREIGN KEY
(
  PIPELINE_DEFINITION_ID 
)
REFERENCES FD.PIPELINE_DEFINITION
(
  PIPELINE_DEFINITION_ID 
)
;

ALTER TABLE FD.PLUGIN
ADD CONSTRAINT PLUGIN_FK1 FOREIGN KEY
(
  ACTIVE_PLUGIN_VERSION_ID 
)
REFERENCES FD.PLUGIN_VERSION
(
  PLUGIN_VERSION_ID 
)
;

ALTER TABLE FD.PLUGIN_EXECUTION
ADD CONSTRAINT ENDPOINT_PLUGIN_EXECUTIONS FOREIGN KEY
(
  ENDPOINT_ID 
)
REFERENCES FD.ENDPOINT
(
  ENDPOINT_ID 
)
;

ALTER TABLE FD.PLUGIN_EXECUTION
ADD CONSTRAINT WORKFLOW_PLUGIN_EXECUTIONS FOREIGN KEY
(
  WORKFLOW_EXECUTION_ID 
)
REFERENCES FD.WORKFLOW_EXECUTION
(
  WORKFLOW_EXECUTION_ID 
)
;

ALTER TABLE FD.PLUGIN_EXECUTION_LOG
ADD CONSTRAINT PLUGIN_EXECUTION_LOGS FOREIGN KEY
(
  ENDPOINT_ID 
, PLUGIN_EXECUTION_ID 
)
REFERENCES FD.PLUGIN_EXECUTION
(
  ENDPOINT_ID 
, PLUGIN_EXECUTION_ID 
)
;

ALTER TABLE FD.PLUGIN_EXECUTION_OUTPUT
ADD CONSTRAINT ENVIRONMENT_PLUGIN_EXEC_OUTPUT FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.PLUGIN_EXECUTION_OUTPUT
ADD CONSTRAINT INSTANCE_PLUGIN_EXEC_OUTPUT FOREIGN KEY
(
  INSTANCE_ID 
)
REFERENCES FD.INSTANCE
(
  INSTANCE_ID 
)
;

ALTER TABLE FD.PLUGIN_EXECUTION_OUTPUT
ADD CONSTRAINT PLUGIN_EXECUTION_OUTPUTS FOREIGN KEY
(
  ENDPOINT_ID 
, PLUGIN_EXECUTION_ID 
)
REFERENCES FD.PLUGIN_EXECUTION
(
  ENDPOINT_ID 
, PLUGIN_EXECUTION_ID 
)
;

ALTER TABLE FD.PLUGIN_EXECUTION_OUTPUT
ADD CONSTRAINT PROJECT_PLUGIN_EXEC_OUTPUT FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PLUGIN_EXECUTION_OUTPUT_VALUE
ADD CONSTRAINT PLUGIN_EXECUTION_OUTPUT_VALUE FOREIGN KEY
(
  PLUGIN_EXECUTION_OUTPUT_ID 
)
REFERENCES FD.PLUGIN_EXECUTION_OUTPUT
(
  PLUGIN_EXECUTION_OUTPUT_ID 
)
;

ALTER TABLE FD.PLUGIN_VERSION
ADD CONSTRAINT PLUGIN_VERSIONS FOREIGN KEY
(
  PLUGIN_ID 
)
REFERENCES FD.PLUGIN
(
  PLUGIN_ID 
)
;

ALTER TABLE FD.PLUGIN_VERSION_DATA
ADD CONSTRAINT PLUGIN_VERSION_DATA FOREIGN KEY
(
  PLUGIN_VERSION_ID 
)
REFERENCES FD.PLUGIN_VERSION
(
  PLUGIN_VERSION_ID 
)
;

ALTER TABLE FD.PLUGIN_VERSION_JAR
ADD CONSTRAINT PLUGIN_VERSION_JARS FOREIGN KEY
(
  PLUGIN_VERSION_ID 
)
REFERENCES FD.PLUGIN_VERSION
(
  PLUGIN_VERSION_ID 
)
;

ALTER TABLE FD.PROJECT
ADD CONSTRAINT FOLDER_PROJECTS FOREIGN KEY
(
  FOLDER_ID 
)
REFERENCES FD.FOLDER
(
  FOLDER_ID 
)
;

ALTER TABLE FD.PROJECT_CMS_CONFIG
ADD CONSTRAINT FK_PROJECT_CMS_CONFIG_CONF FOREIGN KEY
(
  CMS_CONFIG_ID 
)
REFERENCES FD.CMS_CONFIG
(
  CMS_CONFIG_ID 
)
;

ALTER TABLE FD.PROJECT_CMS_CONFIG
ADD CONSTRAINT FK_PROJECT_CMS_CONFIG_INST FOREIGN KEY
(
  INSTANCE_ID 
)
REFERENCES FD.INSTANCE
(
  INSTANCE_ID 
)
;

ALTER TABLE FD.PROJECT_CMS_CONFIG
ADD CONSTRAINT FK_PROJECT_CMS_CONFIG_PROJECT FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PROJECT_CMS_CONFIG
ADD CONSTRAINT FK_PROJECT_INS_CMS_CONFIG_CONF FOREIGN KEY
(
  INSTANCE_CMS_CONFIG_ID 
)
REFERENCES FD.CMS_CONFIG
(
  CMS_CONFIG_ID 
)
;

ALTER TABLE FD.PROJECT_CONFIG
ADD CONSTRAINT PROJECT_CONFIGS FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PROJECT_CONFIG_VALUE
ADD CONSTRAINT PROJECT_CONFIG_VALUES FOREIGN KEY
(
  PROJECT_CONFIG_ID 
)
REFERENCES FD.PROJECT_CONFIG
(
  PROJECT_CONFIG_ID 
)
;

ALTER TABLE FD.PROJECT_ENV_ITS_CONFIG
ADD CONSTRAINT FK_PROJECT_ENV_ITS_CONFIG_ENV FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.PROJECT_ENV_ITS_CONFIG
ADD CONSTRAINT FK_PROJECT_ENV_ITS_CONFIG_PRO FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PROJECT_HELM_CONFIG
ADD CONSTRAINT FK_PROJECT_HELM_CONFIG_PROJ FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PROJECT_HELM_VALUE
ADD CONSTRAINT FK_PROJECT_HELM_VALUE_PROJ FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PROJECT_ITS_CONFIG
ADD CONSTRAINT FK_PROJECT_ITS_CONFIG_INSTANCE FOREIGN KEY
(
  INSTANCE_ID 
)
REFERENCES FD.INSTANCE
(
  INSTANCE_ID 
)
;

ALTER TABLE FD.PROJECT_ITS_CONFIG
ADD CONSTRAINT FK_PROJECT_ITS_CONFIG_ITS FOREIGN KEY
(
  ISSUETRACKINGSYSTEMID 
)
REFERENCES FD.ISSUETRACKINGSYSTEM
(
  ISSUETRACKINGSYSTEMID 
)
;

ALTER TABLE FD.PROJECT_ITS_CONFIG
ADD CONSTRAINT FK_PROJECT_ITS_CONFIG_PROJECT FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PROJECT_OBJECT
ADD CONSTRAINT OBJECT_TYPE_PROJECT_OBJECT FOREIGN KEY
(
  OBJECT_TYPE_ID 
)
REFERENCES FD.OBJECT_TYPE
(
  OBJECT_TYPE_ID 
)
;

ALTER TABLE FD.PROJECT_OBJECT
ADD CONSTRAINT PROJECT_OBJECTS FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PROJECT_OBJECT_ATTRIBUTE
ADD CONSTRAINT OBJECT_ATTRIBUTE_PROJECT_ATT FOREIGN KEY
(
  OBJECT_ATTR_DEF_ID 
)
REFERENCES FD.OBJECT_ATTRIBUTE_DEF
(
  OBJECT_ATTR_DEF_ID 
)
;

ALTER TABLE FD.PROJECT_OBJECT_ATTRIBUTE
ADD CONSTRAINT PROJECT_OBJECT_ATTRIBUTES FOREIGN KEY
(
  PROJECT_OBJECT_ID 
)
REFERENCES FD.PROJECT_OBJECT
(
  PROJECT_OBJECT_ID 
)
;

ALTER TABLE FD.PROJECT_OBJECT_ATTRIBUTE_VAL
ADD CONSTRAINT PROJECT_OBJECT_ATTR_VALUES FOREIGN KEY
(
  PROJECT_OBJECT_ATTR_ID 
)
REFERENCES FD.PROJECT_OBJECT_ATTRIBUTE
(
  PROJECT_OBJECT_ATTR_ID 
)
;

ALTER TABLE FD.PROJECT_OBJECT_REVISION
ADD CONSTRAINT PROJECT_OBJECT_REVISION_FK1 FOREIGN KEY
(
  PROJECT_OBJECT_ID 
)
REFERENCES FD.PROJECT_OBJECT
(
  PROJECT_OBJECT_ID 
)
;

ALTER TABLE FD.PROJECT_PACKAGE
ADD CONSTRAINT PROJECT_PACKAGES FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PROJECT_PACKAGE_FILE
ADD CONSTRAINT PROJECT_PACKAGE_FILES FOREIGN KEY
(
  PROJECT_PACKAGE_ID 
)
REFERENCES FD.PROJECT_PACKAGE
(
  PROJECT_PACKAGE_ID 
)
;

ALTER TABLE FD.PROJECT_PACKAGE_FILE
ADD CONSTRAINT PROJECT_PACKAGE_FILE_FK1 FOREIGN KEY
(
  PROJECT_OBJECT_ID 
)
REFERENCES FD.PROJECT_OBJECT
(
  PROJECT_OBJECT_ID 
)
;

ALTER TABLE FD.PROJECT_STREAM
ADD CONSTRAINT PROJECT_STREAMS FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PROJECT_STREAM_TEST_DEF
ADD CONSTRAINT FK_PROJECT_STREAM_TEST_DEF_TD FOREIGN KEY
(
  TEST_DEFINITION_ID 
)
REFERENCES FD.TEST_DEFINITION
(
  TEST_DEFINITION_ID 
)
;

ALTER TABLE FD.PROJECT_TEST_TYPE
ADD CONSTRAINT FK_PROJECT_TEST_TYPE_ENV FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.PROJECT_TEST_TYPE
ADD CONSTRAINT FK_PROJECT_TEST_TYPE_INST FOREIGN KEY
(
  INSTANCE_ID 
)
REFERENCES FD.INSTANCE
(
  INSTANCE_ID 
)
;

ALTER TABLE FD.PROJECT_TEST_TYPE
ADD CONSTRAINT FK_PROJECT_TEST_TYPE_PROJECT FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PROJECT_TEST_TYPE
ADD CONSTRAINT FK_PROJECT_TEST_TYPE_TT FOREIGN KEY
(
  TEST_TYPE_ID 
)
REFERENCES FD.TEST_TYPE
(
  TEST_TYPE_ID 
)
;

ALTER TABLE FD.PROJECT_TRIGGER
ADD CONSTRAINT PROJECT_TRIGGERS FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PROJECT_TRIGGER_CONFIG
ADD CONSTRAINT PROJECT_TRIGGER_CONFIGS FOREIGN KEY
(
  PROJECT_TRIGGER_ID 
)
REFERENCES FD.PROJECT_TRIGGER
(
  PROJECT_TRIGGER_ID 
)
;

ALTER TABLE FD.PROJECT_VERSION
ADD CONSTRAINT PROJECT_VERSIONS FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PROJECT_VERSION
ADD CONSTRAINT STREAM_PROJECT_VERSION FOREIGN KEY
(
  PROJECT_STREAM_ID 
)
REFERENCES FD.PROJECT_STREAM
(
  PROJECT_STREAM_ID 
)
;

ALTER TABLE FD.PROJECT_VERSION_DATA
ADD CONSTRAINT PROJECT_VERSION_DATA FOREIGN KEY
(
  PROJECT_VERSION_ID 
)
REFERENCES FD.PROJECT_VERSION
(
  PROJECT_VERSION_ID 
)
;

ALTER TABLE FD.PROJECT_VERSION_DATA_VAL
ADD CONSTRAINT PROJECT_VERSION_DATA_VALUES FOREIGN KEY
(
  PROJECT_VERSION_DATA_ID 
)
REFERENCES FD.PROJECT_VERSION_DATA
(
  PROJECT_VERSION_DATA_ID 
)
;

ALTER TABLE FD.PROJECT_VERSION_ITS_ISSUE
ADD CONSTRAINT PROJECT_VERSION_ITS_ISSUE_FK1 FOREIGN KEY
(
  PROJECT_VERSION_ID 
)
REFERENCES FD.PROJECT_VERSION
(
  PROJECT_VERSION_ID 
)
;

ALTER TABLE FD.PROJECT_WORKFLOW
ADD CONSTRAINT PROJECT_WORKFLOWS FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PROJECT_WORKFLOW
ADD CONSTRAINT WORKFLOW_PROJECTS FOREIGN KEY
(
  WORKFLOW_ID 
)
REFERENCES FD.WORKFLOW
(
  WORKFLOW_ID 
)
;

ALTER TABLE FD.PROJECT_WORKFLOW_INSTANCE
ADD CONSTRAINT INSTANCE_PROJECT_WORKFLOWS FOREIGN KEY
(
  INSTANCE_ID 
)
REFERENCES FD.INSTANCE
(
  INSTANCE_ID 
)
;

ALTER TABLE FD.PROJECT_WORKFLOW_INSTANCE
ADD CONSTRAINT PROJECT_WORKFLOW_INSTANCES FOREIGN KEY
(
  PROJECT_WORKFLOW_ID 
)
REFERENCES FD.PROJECT_WORKFLOW
(
  PROJECT_WORKFLOW_ID 
)
;

ALTER TABLE FD.PROPERTY_KEY
ADD CONSTRAINT ENVIRONMENT_PROPERTY_KEY FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.PROPERTY_KEY
ADD CONSTRAINT INSTANCE_PROPERTY_KEY FOREIGN KEY
(
  INSTANCE_ID 
)
REFERENCES FD.INSTANCE
(
  INSTANCE_ID 
)
;

ALTER TABLE FD.PROPERTY_KEY
ADD CONSTRAINT PROJECT_PROPERTY_KEY FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.PROPERTY_KEY
ADD CONSTRAINT PROPERTY_KEY_DEFINITION_KEY FOREIGN KEY
(
  PROPERTY_DEFINITION_ID 
)
REFERENCES FD.PROPERTY_KEY_DEFINITION
(
  PROPERTY_DEFINITION_ID 
)
;

ALTER TABLE FD.PROPERTY_SET_KEY_DEF
ADD CONSTRAINT PROPERTY_KEY_DEF_SETS FOREIGN KEY
(
  PROPERTY_DEFINITION_ID 
)
REFERENCES FD.PROPERTY_KEY_DEFINITION
(
  PROPERTY_DEFINITION_ID 
)
;

ALTER TABLE FD.PROPERTY_SET_KEY_DEF
ADD CONSTRAINT PROPERTY_SET_KEY_DEFS FOREIGN KEY
(
  PROPERTY_SET_ID 
)
REFERENCES FD.PROPERTY_SET
(
  PROPERTY_SET_ID 
)
;

ALTER TABLE FD.PROPERTY_VALUE
ADD CONSTRAINT PROPERTY_KEY_VALUES FOREIGN KEY
(
  PROPERTY_KEY_ID 
)
REFERENCES FD.PROPERTY_KEY
(
  PROPERTY_KEY_ID 
)
;

ALTER TABLE FD.RELEASE_CMS_CONFIG
ADD CONSTRAINT FK_RELEASE_CMS_CONFIG_CONF FOREIGN KEY
(
  CMS_CONFIG_ID 
)
REFERENCES FD.CMS_CONFIG
(
  CMS_CONFIG_ID 
)
;

ALTER TABLE FD.RELEASE_CMS_CONFIG
ADD CONSTRAINT FK_RELEASE_CMS_CONFIG_INST FOREIGN KEY
(
  INSTANCE_ID 
)
REFERENCES FD.INSTANCE
(
  INSTANCE_ID 
)
;

ALTER TABLE FD.RELEASE_CMS_CONFIG
ADD CONSTRAINT FK_RELEASE_CMS_CONFIG_RELEASE FOREIGN KEY
(
  REL_DEFINITION_ID 
)
REFERENCES FD.REL_DEFINITION
(
  REL_DEFINITION_ID 
)
;

ALTER TABLE FD.RELEASE_CMS_CONFIG
ADD CONSTRAINT FK_RELEASE_INS_CMS_CONFIG_CONF FOREIGN KEY
(
  INSTANCE_CMS_CONFIG_ID 
)
REFERENCES FD.CMS_CONFIG
(
  CMS_CONFIG_ID 
)
;

ALTER TABLE FD.REL_BUILD_MONITOR
ADD CONSTRAINT REL_BUILD_MONITORS FOREIGN KEY
(
  REL_DEFINITION_ID 
)
REFERENCES FD.REL_DEFINITION
(
  REL_DEFINITION_ID 
)
;

ALTER TABLE FD.REL_DEFINITION
ADD CONSTRAINT REL_DEFINITION_FK1 FOREIGN KEY
(
  TO_REL_DEFINITION_ID 
)
REFERENCES FD.REL_DEFINITION
(
  REL_DEFINITION_ID 
)
;

ALTER TABLE FD.REL_DEFINITION
ADD CONSTRAINT REL_DEFINITION_FK2 FOREIGN KEY
(
  PIPELINE_DEFINITION_ID 
)
REFERENCES FD.PIPELINE_DEFINITION
(
  PIPELINE_DEFINITION_ID 
)
;

ALTER TABLE FD.REL_METADATA_VALUE
ADD CONSTRAINT REL_METADATA FOREIGN KEY
(
  REL_DEFINITION_ID 
)
REFERENCES FD.REL_DEFINITION
(
  REL_DEFINITION_ID 
)
;

ALTER TABLE FD.REL_METADATA_VALUE
ADD CONSTRAINT REL_METADATA_VALUE_FK1 FOREIGN KEY
(
  PIPELINE_METADATA_ID 
)
REFERENCES FD.PIPELINE_METADATA
(
  PIPELINE_METADATA_ID 
)
;

ALTER TABLE FD.REL_PROJECT
ADD CONSTRAINT RELEASE_PROJECTS FOREIGN KEY
(
  REL_DEFINITION_ID 
)
REFERENCES FD.REL_DEFINITION
(
  REL_DEFINITION_ID 
)
;

ALTER TABLE FD.REL_PROJECT
ADD CONSTRAINT REL_PROJECT_FK1 FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.REL_SNAPSHOT
ADD CONSTRAINT RELEASE_SNAPSHOTS FOREIGN KEY
(
  REL_DEFINITION_ID 
)
REFERENCES FD.REL_DEFINITION
(
  REL_DEFINITION_ID 
)
;

ALTER TABLE FD.REL_SNAPSHOT_VERSION
ADD CONSTRAINT REL_SNAPSHOT_VERSIONS FOREIGN KEY
(
  REL_SNAPSHOT_ID 
)
REFERENCES FD.REL_SNAPSHOT
(
  REL_SNAPSHOT_ID 
)
;

ALTER TABLE FD.REL_SNAPSHOT_VERSION
ADD CONSTRAINT REL_SNAPSHOT_VERSION_FK1 FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.REL_SNAPSHOT_VERSION
ADD CONSTRAINT REL_SNAPSHOT_VERSION_FK2 FOREIGN KEY
(
  PROJECT_VERSION_ID 
)
REFERENCES FD.PROJECT_VERSION
(
  PROJECT_VERSION_ID 
)
;

ALTER TABLE FD.REL_SNAPSHOT_VERSION
ADD CONSTRAINT REL_SNAPSHOT_VERSION_FK3 FOREIGN KEY
(
  PROJECT_STREAM_ID 
)
REFERENCES FD.PROJECT_STREAM
(
  PROJECT_STREAM_ID 
)
;

ALTER TABLE FD.REL_SNAPSHOT_VERSION_REQ
ADD CONSTRAINT REL_SNAPSHOT_VERSION_REQUEST FOREIGN KEY
(
  REL_SNAPSHOT_VERSION_ID 
)
REFERENCES FD.REL_SNAPSHOT_VERSION
(
  REL_SNAPSHOT_VERSION_ID 
)
;

ALTER TABLE FD.REL_SNAPSHOT_VERSION_REQ
ADD CONSTRAINT REL_SNAPSHOT_VERSION_REQ_FK1 FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.SCHEDULED_TASK
ADD CONSTRAINT DEPLOY_WINDOW_SCHEDULED_TASKS FOREIGN KEY
(
  WINDOW_ID 
)
REFERENCES FD.DEPLOY_WINDOW
(
  WINDOW_ID 
)
;

ALTER TABLE FD.SCHEDULED_TASK
ADD CONSTRAINT FOLDER_RQST_SCHEDULED_TASKS FOREIGN KEY
(
  FOLDER_REQUEST_ID 
)
REFERENCES FD.FOLDER_REQUEST
(
  FOLDER_REQUEST_ID 
)
;

ALTER TABLE FD.SCHEDULED_TASK
ADD CONSTRAINT WORKFLOW_RQST_SCHEDULED_TASKS FOREIGN KEY
(
  WORKFLOW_REQUEST_ID 
)
REFERENCES FD.WORKFLOW_REQUEST
(
  WORKFLOW_REQUEST_ID 
)
;

ALTER TABLE FD.TEMPLATE_DATA
ADD CONSTRAINT TEMPLATE_DATA FOREIGN KEY
(
  TEMPLATE_ID 
)
REFERENCES FD.TEMPLATE
(
  TEMPLATE_ID 
)
;

ALTER TABLE FD.TEMPLATE_INPUT
ADD CONSTRAINT TEMPLATE_INPUTS FOREIGN KEY
(
  TEMPLATE_ID 
)
REFERENCES FD.TEMPLATE
(
  TEMPLATE_ID 
)
;

ALTER TABLE FD.TEST_DEFINITION
ADD CONSTRAINT FK_TEST_DEFINITION_PROJECT FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.TEST_DEFINITION
ADD CONSTRAINT FK_TEST_DEFINITION_TEST_SET FOREIGN KEY
(
  TEST_SET_ID 
)
REFERENCES FD.TEST_SET
(
  TEST_SET_ID 
)
;

ALTER TABLE FD.TEST_DEFINITION
ADD CONSTRAINT FK_TEST_DEFINITION_TEST_TOOL FOREIGN KEY
(
  TESTING_TOOL_ID 
)
REFERENCES FD.TESTING_TOOL
(
  TESTING_TOOL_ID 
)
;

ALTER TABLE FD.TEST_DEFINITION
ADD CONSTRAINT FK_TEST_DEFINITION_TOOL FOREIGN KEY
(
  INSTANCE_ID 
)
REFERENCES FD.INSTANCE
(
  INSTANCE_ID 
)
;

ALTER TABLE FD.TEST_DEFINITION
ADD CONSTRAINT FK_TEST_DEFINITION_WORKFLOW FOREIGN KEY
(
  WORKFLOW_ID 
)
REFERENCES FD.WORKFLOW
(
  WORKFLOW_ID 
)
;

ALTER TABLE FD.TEST_DEFINITION_INPUT
ADD CONSTRAINT FK_TEST_DEFINITION_INPUT_TD FOREIGN KEY
(
  TEST_DEFINITION_ID 
)
REFERENCES FD.TEST_DEFINITION
(
  TEST_DEFINITION_ID 
)
;

ALTER TABLE FD.TEST_DEFINITION_INPUT
ADD CONSTRAINT FK_TEST_DEFINITION_STREAM FOREIGN KEY
(
  PROJECT_STREAM_TEST_DEF_ID 
)
REFERENCES FD.PROJECT_STREAM_TEST_DEF
(
  PROJECT_STREAM_TEST_DEF_ID 
)
ON DELETE CASCADE;

ALTER TABLE FD.TEST_DEFINITION_QUALIFIER
ADD CONSTRAINT FK_TEST_DEFINITION_QUALIF_TD FOREIGN KEY
(
  TEST_DEFINITION_ID 
)
REFERENCES FD.TEST_DEFINITION
(
  TEST_DEFINITION_ID 
)
;

ALTER TABLE FD.TEST_DEFINITION_QUALIFIER
ADD CONSTRAINT FK_TEST_DEFINITION_QUALIF_TQ FOREIGN KEY
(
  TEST_QUALIFIER_ID 
)
REFERENCES FD.TEST_QUALIFIER
(
  TEST_QUALIFIER_ID 
)
;

ALTER TABLE FD.TEST_DEFINITION_RUN
ADD CONSTRAINT FK_TEST_DEFINITION_RUN_DEF FOREIGN KEY
(
  TEST_DEFINITION_ID 
)
REFERENCES FD.TEST_DEFINITION
(
  TEST_DEFINITION_ID 
)
;

ALTER TABLE FD.TEST_DEFINITION_RUN
ADD CONSTRAINT FK_TEST_DEFINITION_RUN_FLOW FOREIGN KEY
(
  WORKFLOW_EXECUTION_ID 
)
REFERENCES FD.WORKFLOW_EXECUTION
(
  WORKFLOW_EXECUTION_ID 
)
;

ALTER TABLE FD.TEST_DEFINITION_RUN
ADD CONSTRAINT FK_TEST_DEFINITION_RUN_PARENT FOREIGN KEY
(
  TEST_SET_RUN_ID 
)
REFERENCES FD.TEST_SET_RUN
(
  TEST_SET_RUN_ID 
)
;

ALTER TABLE FD.TEST_DEFINITION_RUN
ADD CONSTRAINT FK_TEST_DEF_RUN_ENDPOINT FOREIGN KEY
(
  ENDPOINT_ID 
)
REFERENCES FD.ENDPOINT
(
  ENDPOINT_ID 
)
;

ALTER TABLE FD.TEST_DEF_QUALIFIER_VALUE
ADD CONSTRAINT FK_TEST_DEF_QUALIF_VALUE_QUAL FOREIGN KEY
(
  TEST_QUALIFIER_ID 
)
REFERENCES FD.TEST_QUALIFIER
(
  TEST_QUALIFIER_ID 
)
;

ALTER TABLE FD.TEST_DEF_QUALIFIER_VALUE
ADD CONSTRAINT FK_TEST_DEF_QUALIF_VALUE_RUN FOREIGN KEY
(
  TEST_DEFINITION_RUN_ID 
)
REFERENCES FD.TEST_DEFINITION_RUN
(
  TEST_DEFINITION_RUN_ID 
)
;

ALTER TABLE FD.TEST_RESULT
ADD CONSTRAINT FK_TEST_RESULT_RUN FOREIGN KEY
(
  TEST_DEFINITION_RUN_ID 
)
REFERENCES FD.TEST_DEFINITION_RUN
(
  TEST_DEFINITION_RUN_ID 
)
;

ALTER TABLE FD.TEST_RUN
ADD CONSTRAINT FK_TEST_RUN_ENVIRONMENT FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.TEST_RUN
ADD CONSTRAINT FK_TEST_RUN_INSTANCE FOREIGN KEY
(
  INSTANCE_ID 
)
REFERENCES FD.INSTANCE
(
  INSTANCE_ID 
)
;

ALTER TABLE FD.TEST_RUN
ADD CONSTRAINT FK_TEST_RUN_PROJECT FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.TEST_RUN
ADD CONSTRAINT FK_TEST_RUN_STREAM FOREIGN KEY
(
  PROJECT_STREAM_ID 
)
REFERENCES FD.PROJECT_STREAM
(
  PROJECT_STREAM_ID 
)
;

ALTER TABLE FD.TEST_RUN
ADD CONSTRAINT FK_TEST_RUN_TEST_TYPE FOREIGN KEY
(
  TEST_TYPE_ID 
)
REFERENCES FD.TEST_TYPE
(
  TEST_TYPE_ID 
)
;

ALTER TABLE FD.TEST_RUN
ADD CONSTRAINT FK_TEST_RUN_WORKFLOW_EXEC FOREIGN KEY
(
  WORKFLOW_EXECUTION_ID 
)
REFERENCES FD.WORKFLOW_EXECUTION
(
  WORKFLOW_EXECUTION_ID 
)
;

ALTER TABLE FD.TEST_SET
ADD CONSTRAINT FK_TEST_SET_PROJECT FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.TEST_SET
ADD CONSTRAINT FK_TEST_SET_TEST_TYPE FOREIGN KEY
(
  TEST_TYPE_ID 
)
REFERENCES FD.TEST_TYPE
(
  TEST_TYPE_ID 
)
;

ALTER TABLE FD.TEST_SET_QUALIFIER
ADD CONSTRAINT FK_TEST_SET_QUALIFIER_QUALIF FOREIGN KEY
(
  TEST_QUALIFIER_ID 
)
REFERENCES FD.TEST_QUALIFIER
(
  TEST_QUALIFIER_ID 
)
;

ALTER TABLE FD.TEST_SET_QUALIFIER
ADD CONSTRAINT FK_TEST_SET_QUALIFIER_SET FOREIGN KEY
(
  TEST_SET_ID 
)
REFERENCES FD.TEST_SET
(
  TEST_SET_ID 
)
;

ALTER TABLE FD.TEST_SET_QUALIFIER_VALUE
ADD CONSTRAINT FK_TEST_SET_QUALIF_VALUE_QUAL FOREIGN KEY
(
  TEST_QUALIFIER_ID 
)
REFERENCES FD.TEST_QUALIFIER
(
  TEST_QUALIFIER_ID 
)
;

ALTER TABLE FD.TEST_SET_QUALIFIER_VALUE
ADD CONSTRAINT FK_TEST_SET_QUALIF_VALUE_RUN FOREIGN KEY
(
  TEST_SET_RUN_ID 
)
REFERENCES FD.TEST_SET_RUN
(
  TEST_SET_RUN_ID 
)
;

ALTER TABLE FD.TEST_SET_RUN
ADD CONSTRAINT FK_TEST_SET_RUN_PARENT FOREIGN KEY
(
  TEST_RUN_ID 
)
REFERENCES FD.TEST_RUN
(
  TEST_RUN_ID 
)
;

ALTER TABLE FD.TEST_SET_RUN
ADD CONSTRAINT FK_TEST_SET_RUN_SET FOREIGN KEY
(
  TEST_SET_ID 
)
REFERENCES FD.TEST_SET
(
  TEST_SET_ID 
)
;

ALTER TABLE FD.WORKFLOW
ADD CONSTRAINT WORKFLOW_FK1 FOREIGN KEY
(
  ACTIVE_WORKFLOW_VERSION_ID 
)
REFERENCES FD.WORKFLOW_VERSION
(
  WORKFLOW_VERSION_ID 
)
;

ALTER TABLE FD.WORKFLOW_EXECUTION
ADD CONSTRAINT CHILD_WORKFLOW_EXECUTION FOREIGN KEY
(
  PARENT_WORKFLOW_EXECUTION_ID 
)
REFERENCES FD.WORKFLOW_EXECUTION
(
  WORKFLOW_EXECUTION_ID 
)
;

ALTER TABLE FD.WORKFLOW_EXECUTION
ADD CONSTRAINT REQUEST_WORKFLOW_EXECUTIONS FOREIGN KEY
(
  WORKFLOW_REQUEST_ID 
)
REFERENCES FD.WORKFLOW_REQUEST
(
  WORKFLOW_REQUEST_ID 
)
;

ALTER TABLE FD.WORKFLOW_EXECUTION_DATA
ADD CONSTRAINT WORKFLOW_EXECUTION_DATA FOREIGN KEY
(
  WORKFLOW_EXECUTION_ID 
)
REFERENCES FD.WORKFLOW_EXECUTION
(
  WORKFLOW_EXECUTION_ID 
)
;

ALTER TABLE FD.WORKFLOW_REQUEST
ADD CONSTRAINT ENVIRONMENT_REQUESTS FOREIGN KEY
(
  ENVIRONMENT_ID 
)
REFERENCES FD.ENVIRONMENT
(
  ENVIRONMENT_ID 
)
;

ALTER TABLE FD.WORKFLOW_REQUEST
ADD CONSTRAINT FOLDER_REQUEST_REQUESTS FOREIGN KEY
(
  FOLDER_REQUEST_ID 
)
REFERENCES FD.FOLDER_REQUEST
(
  FOLDER_REQUEST_ID 
)
;

ALTER TABLE FD.WORKFLOW_REQUEST
ADD CONSTRAINT FOLDER_VERSION_REQUESTS FOREIGN KEY
(
  FOLDER_VERSION_ID 
)
REFERENCES FD.FOLDER_VERSION
(
  FOLDER_VERSION_ID 
)
;

ALTER TABLE FD.WORKFLOW_REQUEST
ADD CONSTRAINT FOLDER_WORKFLOW_REQUESTS FOREIGN KEY
(
  FOLDER_ID 
)
REFERENCES FD.FOLDER
(
  FOLDER_ID 
)
;

ALTER TABLE FD.WORKFLOW_REQUEST
ADD CONSTRAINT PROJECT_REQUESTS FOREIGN KEY
(
  PROJECT_ID 
)
REFERENCES FD.PROJECT
(
  PROJECT_ID 
)
;

ALTER TABLE FD.WORKFLOW_REQUEST
ADD CONSTRAINT PROJECT_VERSION_REQUESTS FOREIGN KEY
(
  PROJECT_VERSION_ID 
)
REFERENCES FD.PROJECT_VERSION
(
  PROJECT_VERSION_ID 
)
;

ALTER TABLE FD.WORKFLOW_REQUEST
ADD CONSTRAINT PROJECT_WORKFLOW_REQUESTS FOREIGN KEY
(
  PROJECT_WORKFLOW_ID 
)
REFERENCES FD.PROJECT_WORKFLOW
(
  PROJECT_WORKFLOW_ID 
)
;

ALTER TABLE FD.WORKFLOW_REQUEST_CMS_ISSUE
ADD CONSTRAINT FK_CMS_WORKFLOW_REQ_CMS_ISSUE FOREIGN KEY
(
  WORKFLOW_REQUEST_ID 
)
REFERENCES FD.WORKFLOW_REQUEST
(
  WORKFLOW_REQUEST_ID 
)
;

ALTER TABLE FD.WORKFLOW_REQUEST_INPUT
ADD CONSTRAINT WORKFLOW_REQUEST_INPUTS FOREIGN KEY
(
  WORKFLOW_REQUEST_ID 
)
REFERENCES FD.WORKFLOW_REQUEST
(
  WORKFLOW_REQUEST_ID 
)
;

ALTER TABLE FD.WORKFLOW_REQUEST_INST
ADD CONSTRAINT INST_WORKFLOW_REQUESTS FOREIGN KEY
(
  INSTANCE_ID 
)
REFERENCES FD.INSTANCE
(
  INSTANCE_ID 
)
;

ALTER TABLE FD.WORKFLOW_REQUEST_INST
ADD CONSTRAINT WORKFLOW_REQUEST_INSTS FOREIGN KEY
(
  WORKFLOW_REQUEST_ID 
)
REFERENCES FD.WORKFLOW_REQUEST
(
  WORKFLOW_REQUEST_ID 
)
;

ALTER TABLE FD.WORKFLOW_VERSION
ADD CONSTRAINT WORKFLOW_VERSIONS FOREIGN KEY
(
  WORKFLOW_ID 
)
REFERENCES FD.WORKFLOW
(
  WORKFLOW_ID 
)
;

ALTER TABLE FD.WORKFLOW_VERSION_DATA
ADD CONSTRAINT WORKFLOW_VERSION_DATA FOREIGN KEY
(
  WORKFLOW_VERSION_ID 
)
REFERENCES FD.WORKFLOW_VERSION
(
  WORKFLOW_VERSION_ID 
)
;

ALTER TABLE FD.PIPELINE_ROLE_MEMBER
ADD CONSTRAINT PIPELINE_ROLE_MEMBER_TYPE_CHK CHECK 
(MEMBER_TYPE in ('G','U','E'))
;
